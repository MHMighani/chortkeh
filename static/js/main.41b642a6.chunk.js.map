{"version":3,"sources":["actions/actionTypes.js","reducers/index.js","components/selectForm.jsx","components/input.jsx","components/buttons.jsx","actions/index.js","utils/notifications.js","utils/formValidationCheck.js","utils/formValidationSchema.js","hooks/useFormErrorHandler.js","hooks/useAssetFormHandler.js","components/purchaseDate.jsx","components/goldCurrencyForm.jsx","components/toggleSwitch.jsx","context/themeContext.js","components/darkModeToggleBtn.jsx","components/navbar.jsx","utils/getMarketPrice.js","components/stockForm.jsx","components/cashForm.jsx","utils/getPercentChange.js","utils/getCommaSepNum.js","components/tableBody.jsx","components/tableFoot.jsx","components/tableHeader.jsx","utils/getPaginatedData.js","components/pagination.jsx","components/table.jsx","utils/columns.js","components/modal.jsx","hooks/useDeleteMessage.js","components/assetDetails.jsx","components/styledValue.jsx","components/tableContainer.jsx","components/timeFrameSelect.jsx","utils/getDataWithChange.js","components/ResultsNumSelect.jsx","utils/getDateId.js","utils/getNormalizedOverallValue.js","utils/getFilteredDataByTimeFrame.js","components/portfolioHistory.jsx","components/assetsTable.jsx","components/assetsDataTables.jsx","utils/mapPricesToAssets.js","utils/getMappedAssets.js","components/quotaChart.jsx","components/overallChart.jsx","components/charts.jsx","components/portfolioDetails.jsx","footer.jsx","App.js","index.js","fonts/b-nazanin-regular.ttf"],"names":["FETCH_ASSETS","ADD_ASSET","DELETE_ASSET_BY_ID","DELETE_ASSET_BY_SUBCLASS","EDIT_ASSET","FETCH_PRICES","FETCH_HISTORY","UPDATE_HISTORY","combineReducers","assets","state","action","type","actions","filter","asset","assetSubClass","payload","id","map","assetId","newValue","prices","historyRecord","SelectForm","error","label","props","className","htmlFor","Input","name","onChange","rest","mutualProps","thousandSeparator","isNumericString","autoComplete","onValueChange","values","target","value","floatValue","SubmitBtn","editState","EyeBtn","requiredInfo","assetClass","marketPrice","to","pathname","icon","faEye","EditBtn","assetData","replace","faEdit","DeleteBtn","deleteMethod","onClick","faTrashAlt","deleteAssetById","dispatch","a","addAsset","Date","now","editAsset","notifications","successfulAdditionNotify","toast","success","successfulEditionNotify","info","duplicateAssetError","formValidationCheck","schema","result","validate","allowUnknown","details","context","key","errorMessage","message","errors","requiredErrorMsg","stockSelectionErrorMsg","noneZeroRequiredSchema","Joi","number","min","required","messages","schemas","goldCurrency","object","string","amount","purchasePrice","stock","cash","useFormErrorHandler","formState","useState","setErrors","useEffect","validationSchemas","useAssetFormHandler","initialState","isSubmited","setIsSubmited","todayPersianDate","utils","getToday","location","useDispatch","purchaseDate","setFormState","getFormElementProps","handleChange","handleSubmit","event","preventDefault","Number","response","status","handleDateChange","PurchaseDate","inputPlaceholder","locale","shouldHighlightWeekends","GoldCurrencyForm","marketPrices","useSelector","find","selectedOption","setSelectedOption","options","marketDetail","getMarketPrice","length","price","onSubmit","opt","isDisabled","readOnly","ToggleSwitch","handleClick","active","ThemeContext","React","createContext","theme","toggleTheme","ThemeContextProvider","useLocalStorage","setTheme","document","documentElement","setAttribute","themeValue","prev","Provider","children","DarkModeToggleBtn","themeContext","useContext","Navbar","expand","Container","style","textDecoration","Brand","getMarketPriceData","StockForm","setOptions","lastTradePrice","lastPrice","option","fullName","mapPricesToOptions","data","CashForm","setAssetData","getPercentChange","firstValue","secondValue","decimalPoint","toFixed","getCommaSepNum","num","inputType","toString","getCellContent","column","row","rowIndex","cellContent","isNaN","TableBody","columns","TableFoot","scope","cell","index","toLocaleString","TableHead","sortCol","setSortCol","cursor","dir","col","faSortUp","faSortDown","display","getPaginatedData","currentPage","pageSize","slice","Pagination","onPageChange","items","i","push","Item","e","text","Table","footerData","onDeleteAsset","styleFunction","extraSortField","setCurrenctPage","sortedData","_","orderBy","Boolean","join","styledData","reverse","paginatedData","Math","ceil","rowNum","amountCol","operationsCol","changePercentCol","overallValueCol","nameCol","assetsTableColumns","detailsTableColumns","historyTableColumns","history","goldcurrency","CustomModal","title","show","handleConfirm","body","handleClose","onHide","Header","closeButton","Title","Footer","useDeleteMsgModal","messageDisplay","setMessageDisplay","toDeleteAsset","setToDeleteAsset","handleDelMsgClose","AssetDetails","item","modalBody","handleDelMsgDisplay","date","overallValue","changePercent","getStringDate","Object","deleteBtn","editBtn","operations","StyledValue","percentChange","change","chevron","faChevronUp","faChevronDown","faMinus","color","TableContainer","addLink","valueInfo","empty","headEl","useRef","contentEl","ref","current","classList","toggle","content","maxHeight","scrollHeight","faPlus","TimeFrameSelect","onTimeFrameChange","getDataWithChange","constKeys","arr","newItem","prevItem","includes","abs","ResultsNumSelect","onResultsNumChange","getDateId","lengthOfNumbers","year","month","day","today","String","padStart","getNormalizedOverallValue","mappedAssets","todayDate","reduce","overall","getFilteredDateByTimeFrame","timeFrame","dateFormat","dataByTimeFrame","round","start","moment","record","diff","unshift","PortfolioHistory","setTimeFrame","setPageSize","sortBy","some","checkMappedValidation","newHistoryRecord","newData","normalizedOverall","JSON","stringify","timeFramedData","dataWithChanges","lastChangeData","historyRow","AssetsTable","priceKey","allColumns","mappedData","buttons","p","AssetsDataTables","lastRecordChange","groupedByAssetClass","groupBy","flattenSubAssets","assetsData","amountSum","collection","initial","sum","getSumByKey","averagePurchasePrice","key1","key2","getWeightedSum","mapPricesToAssets","dataBySubClass","sumBy","isEmpty","overallValueByAssetClass","flattenedObject","getPriceKey","getMappedAssets","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","QuotaChart","labels","pieChartData","this","COLORS","PieChart","width","height","Pie","dataKey","nameKey","labelLine","entry","Cell","Legend","formatter","marginRight","wrapperStyle","top","left","right","marginLeft","backgroundColor","border","borderRadius","lineHeight","PureComponent","OverallChart","activeCategories","setActiveCategories","LineChartData","LineChart","margin","bottom","entries","CartesianGrid","strokeDasharray","XAxis","fontSize","YAxis","tickFormatter","domain","Tooltip","category","Line","stroke","ChartEmptyMessage","Charts","OverallChartOutcome","QuotaChartOutcome","PortfolioDetails","setMappedAssets","deleteAssetBySubClass","link","rel","href","App","path","component","exact","store","configureStore","reducer","reducers","middleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.41b642a6.chunk.js","sourcesContent":["// assets action types\nexport const FETCH_ASSETS = \"FETCH_ASSETS\";\nexport const ADD_ASSET = \"ADD_ASSET\";\nexport const DELETE_ASSET_BY_ID = \"DELETE_ASSET\";\nexport const DELETE_ASSET_BY_SUBCLASS = \"DELETE_ASSET_BY_SUBCLASS\";\nexport const EDIT_ASSET = \"EDIT_ASSET\";\n\n// prices action types\nexport const FETCH_PRICES = \"FETCH_PRICES\";\n\n// history action types\nexport const FETCH_HISTORY = \"FETCH_HISTORY\";\nexport const UPDATE_HISTORY = \"UPDATE_HISTORY\";\n","import { combineReducers } from \"redux\";\nimport * as actions from \"../actions/actionTypes\";\n\nconst assets = (state = [], action) => {\n  switch (action.type) {\n    case actions.FETCH_ASSETS:\n      return state;\n    case actions.DELETE_ASSET_BY_SUBCLASS:\n      return state.filter(\n        (asset) => asset.assetSubClass !== action.payload.assetSubClass\n      );\n    case actions.DELETE_ASSET_BY_ID:\n      return state.filter((asset) => asset.id !== action.payload);\n    case actions.EDIT_ASSET:\n      //TODO: better solution?\n      return state.map((asset) => {\n        if (asset.id === action.payload.assetId) {\n          return action.payload.newValue;\n        }\n        return asset;\n      });\n\n    case actions.ADD_ASSET:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nconst prices = (state = {}, action) => {\n  switch (action.type) {\n    case actions.FETCH_PRICES:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst historyRecord = (state = [], action) => {\n  switch (action.type) {\n    case actions.FETCH_HISTORY:\n      return action.payload;\n    case actions.UPDATE_HISTORY:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ assets, prices, historyRecord });\n","import React from \"react\";\nimport Select from \"react-select\";\n\nconst SelectForm = ({ error, label, id, ...props }) => {\n  return (\n    <div className=\"form-group\">\n      {label && <label htmlFor={id}>{label}</label>}\n      <Select id={id} {...props} />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default SelectForm;\n","import React from \"react\";\n\nimport NumberFormat from \"react-number-format\";\n\nconst Input = ({\n  label,\n  name,\n  error,\n  id,\n  type = \"number\",\n  onChange = () => {},\n  ...rest\n}) => {\n  const mutualProps = { id, className: \"form-control\", name, ...rest };\n\n  return (\n    <div className=\"form-group\">\n      {label && <label htmlFor={id}>{label}</label>}\n      {type === \"number\" ? (\n        <NumberFormat\n          thousandSeparator={true}\n          isNumericString={true}\n          autoComplete=\"off\"\n          onValueChange={(values) =>\n            onChange({ target: { name, value: values.floatValue } })\n          }\n          {...mutualProps}\n        />\n      ) : (\n        <input\n          type={type}\n          autoComplete=\"off\"\n          onChange={onChange}\n          {...mutualProps}\n        />\n      )}\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nexport const SubmitBtn = ({ editState }) => {\n  const addText = \"افزودن\";\n  const editText = \"ویرایش\";\n  return (\n    <button\n      type=\"submit\"\n      className={`btn submit btn-${editState ? \"success\" : \"primary\"}`}\n    >\n      {editState ? editText : addText}\n    </button>\n  );\n};\n\nexport const EyeBtn = ({ requiredInfo }) => {\n  const { assetSubClass, assetClass, marketPrice } = requiredInfo;\n  return (\n    <Link\n      to={{\n        pathname: `assets/details/`,\n        state: { assetSubClass, assetClass, marketPrice },\n      }}\n      className=\"btn btn-success\"\n    >\n      <FontAwesomeIcon icon={faEye} />\n    </Link>\n  );\n};\n\nexport const EditBtn = ({ assetData }) => {\n  const { id, assetClass } = assetData;\n  return (\n    <Link\n      replace={true}\n      to={{ pathname: `/add/${assetClass}`, state: { id } }}\n      className=\"btn btn-success\"\n    >\n      <FontAwesomeIcon icon={faEdit} />\n    </Link>\n  );\n};\n\nexport const DeleteBtn = ({ deleteMethod }) => {\n  return (\n    <button onClick={deleteMethod} className=\"btn btn-danger\">\n      <FontAwesomeIcon icon={faTrashAlt} />\n    </button>\n  );\n};\n","import prices from \"../prices.json\";\nimport * as actions from \"./actionTypes\";\n\nconst assets = [];\n\nexport const fetchAssets = () => async (dispatch) => {\n  dispatch({ type: actions.FETCH_ASSETS, payload: assets });\n};\n\nexport const fetchPrices = () => async (dispatch) => {\n  const goldCurrency = prices.goldcurrency || [];\n  const stock = (await prices.stock) || [];\n\n  dispatch({\n    type: actions.FETCH_PRICES,\n    payload: { goldCurrency, stock },\n  });\n};\n\nexport const fetchHistoryRecord = () => async (dispatch) => {\n  dispatch({\n    type: actions.FETCH_HISTORY,\n    payload: [],\n  });\n};\n\nexport const deleteAssetBySubClass = (toDeleteAsset) => async (dispatch) => {\n  dispatch({\n    type: actions.DELETE_ASSET_BY_SUBCLASS,\n    payload: toDeleteAsset,\n  });\n};\n\nexport const deleteAssetById = (id) => async (dispatch) => {\n  dispatch({ type: actions.DELETE_ASSET_BY_ID, payload: id });\n};\n\nexport const addAsset = (asset) => async (dispatch) => {\n  dispatch({ type: actions.ADD_ASSET, payload: { ...asset, id: Date.now() } });\n};\n\nexport const editAsset = (assetId, newValue) => async (dispatch) => {\n  dispatch({ type: actions.EDIT_ASSET, payload: { assetId, newValue } });\n};\n\nexport const updateHistoryRecord = (newHistoryRecord) => async (dispatch) => {\n  dispatch({ type: actions.UPDATE_HISTORY, payload: newHistoryRecord });\n};\n","import { toast } from \"react-toastify\";\n\nconst successfulAdditionNotify = () =>\n  toast.success(\"آیتم انتخابی با موفقیت اضافه شد\");\n\nconst successfulEditionNotify = () => toast.info(\"ویرایش با موفقیت انجام شد\");\n\nconst duplicateAssetError = () => toast.error(\"این دارایی تکراری است\");\n\nconst notifications = {\n  successfulAdditionNotify,\n  successfulEditionNotify,\n  duplicateAssetError,\n};\n\nexport default notifications;\n","function formValidationCheck(schema, state) {\n  const result = schema.validate(state, { allowUnknown: true });\n\n  let { error, value } = result;\n\n  if (error) {\n    const name = error.details[0].context.key;\n    const errorMessage = error.details[0].message;\n    return { errors: { [name]: errorMessage }, value: false };\n  }\n\n  return { value, errors: false };\n}\n\nexport default formValidationCheck;\n","import Joi from \"joi\";\n\nconst requiredErrorMsg = \"این فیلد نمیتواند خالی باشد\";\nconst minErrorMsg = \"مقدار این فیلد نمیتواند صفر باشد\";\nconst stockSelectionErrorMsg = \"لطفا نماد سهم را انتخاب کنید\";\n\nconst noneZeroRequiredSchema = Joi.number().min(1).required().messages({\n  \"any.required\": requiredErrorMsg,\n  \"number.min\": minErrorMsg,\n});\n\nconst goldCurrencySchema = Joi.object({\n  assetSubClass: Joi.string().required().messages({\n    \"any.required\": requiredErrorMsg,\n    \"string.empty\": requiredErrorMsg,\n  }),\n  label: Joi.string(),\n  amount: noneZeroRequiredSchema,\n  purchasePrice: noneZeroRequiredSchema,\n  marketPrice: Joi.number(),\n});\n\nconst stockSchema = Joi.object({\n  name: Joi.string().required().messages({\n    \"any.required\": stockSelectionErrorMsg,\n    \"string.empty\": stockSelectionErrorMsg,\n  }),\n  purchasePrice: noneZeroRequiredSchema,\n  amount: noneZeroRequiredSchema,\n});\n\nconst cashSchema = Joi.object({\n  name: Joi.string().required().messages({\n    \"any.required\": requiredErrorMsg,\n    \"string.empty\": requiredErrorMsg,\n  }),\n  amount: noneZeroRequiredSchema,\n});\n\nconst schemas = {\n  goldCurrency: goldCurrencySchema,\n  stock: stockSchema,\n  cash: cashSchema,\n};\n\nexport default schemas;\n","import formValidationCheck from \"../utils/formValidationCheck\";\nimport validationSchemas from \"../utils/formValidationSchema\";\nimport { useState, useEffect } from \"react\";\n\nconst useFormErrorHandler = (assetClass, formState) => {\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    const schema = validationSchemas[assetClass];\n    const { errors } = formValidationCheck(schema, formState);\n\n    setErrors(errors);\n  }, [formState, assetClass]);\n\n  return errors;\n};\n\nexport default useFormErrorHandler;\n","import { useState } from \"react\";\nimport { editAsset } from \"../actions\";\nimport notifications from \"../utils/notifications\";\nimport useFormErrorHandler from \"./useFormErrorHandler\";\nimport { utils } from \"react-modern-calendar-datepicker\";\nimport { useDispatch } from \"react-redux\";\nimport { addAsset } from \"../actions\";\n\nconst useAssetFormHandler = (initialState = {}, props) => {\n  const [isSubmited, setIsSubmited] = useState(false);\n  const todayPersianDate = utils(\"fa\").getToday();\n  const id = props.location.state?.id || \"\";\n\n  const dispatch = useDispatch();\n\n  // initializing\n  const [formState, setFormState] = useState({\n    ...initialState,\n    id,\n    purchaseDate: todayPersianDate,\n  });\n\n  const errors = useFormErrorHandler(formState.assetClass, formState);\n\n  const editState = id ? true : false;\n\n  // gets form element and returns common props\n  function getFormElementProps(name) {\n    return {\n      name,\n      onChange: handleChange,\n      value: formState[name],\n      error: isSubmited ? errors[name] : \"\",\n    };\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setIsSubmited(true);\n    if (errors) {\n      return;\n    }\n\n    const label =\n      formState.assetClass === \"stock\" || formState.assetClass === \"cash\"\n        ? formState.name\n        : formState.label;\n\n    const value = {\n      id: id ? id : Date.now(),\n      label,\n      amount: Number(formState.amount),\n      purchaseDate: formState.purchaseDate,\n      assetClass: formState.assetClass,\n      assetSubClass: formState.assetSubClass,\n      purchasePrice: Number(formState.purchasePrice),\n    };\n\n    try {\n      if (editState) {\n        await editAsset(formState.assetId, value);\n        dispatch(editAsset(formState.assetId, value));\n        notifications.successfulEditionNotify();\n      } else {\n        dispatch(addAsset(value));\n        notifications.successfulAdditionNotify();\n      }\n    } catch (error) {\n      if (error.response.status === 500) {\n        notifications.duplicateAssetError();\n      }\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({ ...formState, [name]: value });\n  };\n\n  function handleDateChange(newValue) {\n    setFormState({ ...formState, purchaseDate: newValue });\n  }\n\n  return {\n    formState,\n    setFormState,\n    handleChange,\n    editState,\n    handleSubmit,\n    getFormElementProps,\n    handleDateChange,\n    errors: isSubmited ? errors : \"\",\n  };\n};\n\nexport default useAssetFormHandler;\n","import DatePicker from \"react-modern-calendar-datepicker\";\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\n\nconst PurchaseDate = ({\n  value,\n  onChange,\n  label = \"تاریخ خرید\",\n  name = \"purchaseDate\",\n}) => {\n  return (\n    <div className=\"form-group purchase-date\">\n      {label && <label htmlFor={name}>{label}</label>}\n      <DatePicker\n        value={value}\n        onChange={onChange}\n        inputPlaceholder=\"تاریخ خرید دارایی را انتخاب کنید\"\n        locale=\"fa\"\n        name=\"purchaseDate\"\n        shouldHighlightWeekends\n      />\n    </div>\n  );\n};\n\nexport default PurchaseDate;\n","import { useState } from \"react\";\nimport SelectForm from \"./selectForm\";\nimport Input from \"./input\";\nimport { SubmitBtn } from \"./buttons\";\nimport useAssetFormHandler from \"../hooks/useAssetFormHandler\";\nimport PurchaseDate from \"./purchaseDate\";\nimport { useSelector } from \"react-redux\";\n\nconst GoldCurrencyForm = (props) => {\n  const initialState = {\n    id: \"\",\n    amount: 0,\n    purchasePrice: 0,\n    marketPrice: 0,\n    purchaseDate: \"\",\n    assetClass: \"goldCurrency\",\n  };\n\n  const {\n    formState,\n    setFormState,\n    editState,\n    handleSubmit,\n    getFormElementProps,\n    errors,\n    handleDateChange,\n  } = useAssetFormHandler(initialState, props);\n\n  const marketPrices = useSelector((state) => state.prices.goldCurrency);\n  const asset = useSelector((state) =>\n    state.assets.find((asset) => asset.id === formState.id)\n  );\n\n  const [selectedOption, setSelectedOption] = useState({\n    value: \"\",\n    label: \"\",\n  });\n\n  const options = marketPrices.map((marketDetail) => ({\n    label: marketDetail.label,\n    value: marketDetail.id,\n  }));\n\n  const selectorHandler = (opt) => {\n    setSelectedOption(opt);\n    const marketPrice = getMarketPrice(opt.value);\n    setFormState((formState) => ({\n      ...formState,\n      label: opt.label,\n      assetSubClass: opt.value,\n      marketPrice,\n      purchasePrice: marketPrice,\n    }));\n  };\n\n  function getMarketPrice(assetSubClass) {\n    if (marketPrices.length && assetSubClass) {\n      const { price: marketPrice } = marketPrices.find(\n        (price) => price.id === assetSubClass\n      );\n\n      return marketPrice;\n    }\n  }\n\n  // set edited asset data when in edit mode\n  if (editState && asset && !formState.label) {\n    const marketPrice = getMarketPrice(asset.assetSubClass);\n    setFormState({\n      ...formState,\n      ...asset,\n      assetId: asset.id,\n      id: asset.assetSubClass,\n      marketPrice,\n    });\n    setSelectedOption({ label: asset.label, value: asset.assetSubClass });\n  }\n\n  return (\n    <div className=\"gold-form add-form\">\n      <form className=\"form-group\" onSubmit={handleSubmit}>\n        <SelectForm\n          label=\"نوع ارز یا سکه\"\n          onChange={selectorHandler}\n          options={options}\n          error={errors[\"assetSubClass\"]}\n          value={selectedOption}\n          isDisabled={editState}\n        />\n\n        <Input\n          id=\"goldFormPurchasePriceInput\"\n          label=\"قیمت خرید\"\n          min=\"0\"\n          {...getFormElementProps(\"purchasePrice\")}\n        />\n\n        <Input\n          id=\"goldFormMarketPriceInput\"\n          label=\"قیمت روز\"\n          readOnly={true}\n          {...getFormElementProps(\"marketPrice\")}\n        />\n\n        <Input\n          id=\"goldFormAmountInput\"\n          label=\"مقدار\"\n          min=\"0\"\n          {...getFormElementProps(\"amount\")}\n        />\n\n        <Input\n          id=\"goldFormTotalValueInput\"\n          label=\"ارزش کل\"\n          name=\"totalValue\"\n          readOnly={true}\n          value={formState.marketPrice * formState.amount || 0}\n        />\n\n        <PurchaseDate\n          value={formState.purchaseDate}\n          onChange={handleDateChange}\n        />\n\n        <SubmitBtn editState={editState} />\n      </form>\n    </div>\n  );\n};\n\nexport default GoldCurrencyForm;\n","const ToggleSwitch = ({ handleClick, active }) => {\n  return (\n    <div\n      onClick={handleClick}\n      className={`toggle-switch ${active ? \"active\" : \"\"}`}\n    ></div>\n  );\n};\n\nexport default ToggleSwitch;\n","import React, { useEffect } from \"react\";\nimport useLocalStorage from \"use-local-storage\";\n\nconst ThemeContext = React.createContext({ theme: \"\", toggleTheme: () => {} });\n\nexport const ThemeContextProvider = (props) => {\n  const [theme, setTheme] = useLocalStorage(\"theme\", \"light\");\n\n  useEffect(() => {\n    document.documentElement.setAttribute(\"theme\", theme);\n  }, [theme]);\n  function toggleTheme() {\n    setTheme((prev) => {\n      return prev === \"light\" ? \"dark\" : \"light\";\n    });\n  }\n  const themeValue = { theme, toggleTheme };\n  return (\n    <ThemeContext.Provider value={themeValue}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContext;\n","import { useContext } from \"react\";\nimport ToggleSwitch from \"./toggleSwitch\";\nimport ThemeContext from \"../context/themeContext\";\n\nconst DarkModeToggleBtn = () => {\n  const themeContext = useContext(ThemeContext);\n\n  return (\n    <ToggleSwitch\n      handleClick={themeContext.toggleTheme}\n      active={themeContext.theme === \"dark\" ? true : false}\n    />\n  );\n};\n\nexport default DarkModeToggleBtn;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport { Navbar as BootNavbar } from \"react-bootstrap\";\nimport DarkModeToggleBtn from \"./darkModeToggleBtn\";\nconst Navbar = () => {\n  return (\n    <BootNavbar expand=\"lg\">\n      <Container>\n        <Link to=\"/portfolio-details\" style={{ textDecoration: \"none\" }}>\n          <BootNavbar.Brand>چرتکه</BootNavbar.Brand>\n        </Link>\n        <DarkModeToggleBtn />\n      </Container>\n    </BootNavbar>\n  );\n};\n\nexport default Navbar;\n","function getMarketPriceData(marketPrices, id) {\n  return marketPrices.find((price) => price.id === id);\n}\n\nexport default getMarketPriceData;\n","import React, { useState, useEffect } from \"react\";\nimport Input from \"./input\";\nimport SelectForm from \"./selectForm\";\nimport useAssetFormHandler from \"../hooks/useAssetFormHandler\";\nimport { SubmitBtn } from \"./buttons\";\nimport getMarketPriceData from \"../utils/getMarketPrice\";\nimport PurchaseDate from \"./purchaseDate\";\n\nimport { useSelector } from \"react-redux\";\n\nconst StockForm = (props) => {\n  const [selectedOption, setSelectedOption] = useState({\n    value: \"\",\n    label: \"\",\n  });\n  const [options, setOptions] = useState([]);\n  const initialState = {\n    name: \"\",\n    lastTradePrice: 0,\n    lastPrice: 0,\n    purchasePrice: 0,\n    amount: 0,\n    purchaseDate: \"\",\n    assetClass: \"stock\",\n  };\n  const {\n    formState,\n    setFormState,\n    editState,\n    handleSubmit,\n    errors,\n    getFormElementProps,\n    handleDateChange,\n  } = useAssetFormHandler(initialState, props);\n\n  const marketPrices = useSelector((state) => state.prices.stock);\n\n  function mapPricesToOptions(prices) {\n    const options = prices.map((option) => {\n      return {\n        label: `${option.name} -- ${option.fullName}`,\n        value: option.id,\n      };\n    });\n\n    return options;\n  }\n\n  // mapping options\n  useEffect(() => {\n    const options = mapPricesToOptions(marketPrices);\n    setOptions(options);\n  }, [marketPrices]);\n\n  function changeSelectedOption(opt) {\n    setSelectedOption(opt);\n\n    const data = getMarketPriceData(marketPrices, opt.value);\n\n    setFormState({\n      ...formState,\n      assetSubClass: data.id,\n      name: data.name,\n      lastTradePrice: data.lastTradePrice,\n      lastPrice: data.lastPrice,\n      purchasePrice: data.lastTradePrice,\n    });\n  }\n\n  const asset = useSelector((state) =>\n    state.assets.find((asset) => asset.id === formState.id)\n  );\n  // set edited asset data when in edit mode\n  if (editState && asset && options.length && !formState.assetId) {\n    const marketPrice = getMarketPriceData(marketPrices, asset.assetSubClass);\n\n    setFormState({\n      ...formState,\n      ...asset,\n      name: marketPrice.name,\n      id: asset.assetSubClass,\n      assetId: asset.id,\n      lastPrice: marketPrice.lastPrice,\n      lastTradePrice: marketPrice.lastTradePrice,\n    });\n\n    const option = options.length\n      ? options.find((opt) => opt.value === asset.assetSubClass)\n      : \"\";\n    setSelectedOption(option);\n  }\n\n  return (\n    <div className=\"add-form\">\n      <form className=\"form-group\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <SelectForm\n            id=\"stockSelector\"\n            label=\"انتخاب سهم\"\n            options={options}\n            value={selectedOption}\n            onChange={changeSelectedOption}\n            isDisabled={editState}\n            error={errors[\"name\"]}\n          />\n          <Input\n            id=\"stockFormLastTradePriceInput\"\n            label=\"قیمت آخرین معامله\"\n            value={formState.lastTradePrice}\n            min=\"0\"\n            readOnly={true}\n          />\n          <Input\n            id=\"stockFormLastPriceInput\"\n            label=\"قیمت پایانی\"\n            value={formState.lastPrice}\n            min=\"0\"\n            readOnly={true}\n          />\n          <Input\n            id=\"stockFormAmountInput\"\n            label=\"مقدار سهام خریداری شده\"\n            min=\"0\"\n            {...getFormElementProps(\"amount\")}\n          />\n          <Input\n            id=\"stockFormPurchasePriceInput\"\n            label=\"قیمت خرید سهم\"\n            min=\"0\"\n            {...getFormElementProps(\"purchasePrice\")}\n          />\n          <Input\n            id=\"stockFormTotalValue\"\n            label=\"ارزش کل سهام خریداری شده\"\n            value={formState.purchasePrice * formState.amount}\n            min=\"0\"\n            name=\"totalPurchaseValue\"\n            readOnly={true}\n          />\n\n          <PurchaseDate\n            value={formState.purchaseDate}\n            onChange={handleDateChange}\n          />\n\n          <SubmitBtn editState={editState} />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default StockForm;\n","import React from \"react\";\nimport Input from \"./input\";\nimport { SubmitBtn } from \"./buttons\";\nimport useAssetFormHandler from \"../hooks/useAssetFormHandler\";\nimport { useSelector } from \"react-redux\";\n\nconst CashForm = (props) => {\n  const initialState = {\n    name: \"\",\n    amount: 0,\n    assetClass: \"cash\",\n  };\n\n  const {\n    formState,\n    setFormState,\n    editState,\n    handleSubmit,\n    getFormElementProps,\n  } = useAssetFormHandler(initialState, props);\n\n  const asset = useSelector((state) =>\n    state.assets.find((asset) => asset.id === formState.id)\n  );\n  if (editState && asset && !formState.name) {\n    setAssetData(asset);\n  }\n  // set edited asset data when in edit mode\n  function setAssetData(asset) {\n    const assetId = formState.id;\n\n    setFormState({ ...formState, name: asset.label, assetId, ...asset });\n  }\n\n  return (\n    <div className=\"add-form\">\n      <form className=\"form-group\" onSubmit={handleSubmit}>\n        <Input\n          label=\"نام منبع نقدی\"\n          type=\"text\"\n          id=\"cashFormDepositNameInput\"\n          {...getFormElementProps(\"name\")}\n        />\n        <Input\n          id=\"cashFormAmountInput\"\n          label=\"موجودی\"\n          {...getFormElementProps(\"amount\")}\n        />\n        <SubmitBtn editState={editState} />\n      </form>\n    </div>\n  );\n};\n\nexport default CashForm;\n","function getPercentChange(firstValue, secondValue, decimalPoint = 2) {\n  return Number(\n    (((secondValue - firstValue) / firstValue) * 100).toFixed(decimalPoint)\n  );\n}\n\nexport default getPercentChange;\n","function getCommaSepNum(num) {\n  const inputType = typeof num;\n  if (inputType === \"string\" || inputType === \"number\") {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n  return num;\n}\n\nexport default getCommaSepNum;\n","import React from \"react\";\nimport getCommaSepNum from \"../utils/getCommaSepNum\";\n\nfunction getCellContent(column, row, rowIndex) {\n  let cellContent = row[column.name];\n  if (column.name === \"rowNum\") {\n    cellContent = rowIndex + 1;\n  } else if (typeof +cellContent === \"number\" && !isNaN(+cellContent)) {\n    cellContent = getCommaSepNum(row[column.name]);\n  }\n\n  return cellContent;\n}\n\nfunction TableBody(props) {\n  const { columns, data } = props;\n\n  return (\n    <tbody>\n      {data.map((row, rowIndex) => {\n        return (\n          <tr key={row.id}>\n            {columns.map((column) => {\n              return (\n                <td\n                  key={column.name}\n                  data-th={column.label}\n                  className={\n                    column.name === \"rowNum\" ? \"row-number\" : column.name\n                  }\n                >\n                  {getCellContent(column, row, rowIndex)}\n                </td>\n              );\n            })}\n          </tr>\n        );\n      })}\n    </tbody>\n  );\n}\n\nexport default TableBody;\n","import React from \"react\";\n\nfunction TableFoot({ label, data }) {\n  return (\n    <tfoot>\n      <tr>\n        <th scope=\"row\">{label}</th>\n        {data.map((cell, index) => (\n          <td key={index}>{cell.toLocaleString() || \"\"}</td>\n        ))}\n      </tr>\n    </tfoot>\n  );\n}\n\nexport default TableFoot;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction TableHead({ columns, sortCol, setSortCol }) {\n  return (\n    <thead>\n      <tr>\n        {columns.map((column) => (\n          <th\n            scope=\"col\"\n            key={column.name}\n            style={{ cursor: \"pointer\" }}\n            onClick={() =>\n              setSortCol({\n                dir: sortCol.dir === \"asc\" ? \"desc\" : \"asc\",\n                col: column.name,\n              })\n            }\n          >\n            {column.label}\n            <FontAwesomeIcon\n              icon={sortCol.dir === \"asc\" ? faSortUp : faSortDown}\n              style={{\n                display: sortCol.col === column.name ? \"inline-block\" : \"none\",\n              }}\n            />\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n}\n\nexport default TableHead;\n","// returns paginated data\nfunction getPaginatedData(data, currentPage, pageSize) {\n  return data.slice((currentPage - 1) * pageSize, currentPage * pageSize);\n}\n\nexport default getPaginatedData;\n","import { Pagination as BootPagination } from \"react-bootstrap\";\n\nconst Pagination = ({ num, active, onPageChange }) => {\n  let items = [];\n  for (let i = 1; i <= num; i++) {\n    items.push(\n      <BootPagination.Item\n        onClick={(e) => i !== active && onPageChange(+e.target.text)}\n        key={i}\n        active={i === active}\n      >\n        {i}\n      </BootPagination.Item>\n    );\n  }\n  return (\n    <BootPagination className=\"d-flex justify-content-center\">\n      {items}\n    </BootPagination>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport TableBody from \"./tableBody\";\nimport TableFoot from \"./tableFoot\";\nimport TableHeader from \"./tableHeader\";\nimport getPaginatedData from \"../utils/getPaginatedData\";\nimport Pagination from \"./pagination\";\n\nfunction Table({\n  data,\n  columns,\n  footerData,\n  onDeleteAsset,\n  pageSize,\n  styleFunction,\n  extraSortField,\n}) {\n  const [currentPage, setCurrenctPage] = useState(1);\n  const [sortCol, setSortCol] = useState({ dir: \"asc\", col: \"null\" });\n\n  // extraSort field for accessing deep nested objects if value is nested\n  const sortedData = _.orderBy(\n    data,\n    [sortCol.col, extraSortField].filter(Boolean).join(\".\"),\n    sortCol.dir\n  );\n  const styledData = styleFunction\n    ? styleFunction(sortedData).reverse()\n    : sortedData;\n\n  // if no pageSize is provided then pagination will be off\n  const paginatedData = pageSize\n    ? getPaginatedData(styledData, currentPage, pageSize)\n    : styledData;\n\n  return (\n    <div className=\"table-wrapper\">\n      <table className=\"table \">\n        <TableHeader\n          sortCol={sortCol}\n          setSortCol={setSortCol}\n          columns={columns}\n        />\n        <TableBody\n          columns={columns}\n          data={paginatedData}\n          onDeleteAsset={onDeleteAsset}\n        />\n        {footerData && (\n          <TableFoot label={footerData[\"label\"]} data={footerData.data} />\n        )}\n      </table>\n      <Pagination\n        num={Math.ceil(data.length / pageSize)}\n        onPageChange={setCurrenctPage}\n        active={currentPage}\n      />\n    </div>\n  );\n}\n\nexport default Table;\n","const rowNum = { name: \"rowNum\", label: \"ردیف\" };\nconst amountCol = { name: \"amount\", label: \"مقدار\" };\nconst operationsCol = { name: \"operations\" };\nconst averagePurchasePriceCol = {\n  name: \"purchasePrice\",\n  label: \"میانگین قیمت خرید\",\n};\nconst purchasePriceCol = { name: \"purchasePrice\", label: \"قیمت خرید\" };\nconst changePercentCol = { name: \"changePercent\", label: \"درصد سود یا زیان\" };\nconst purchaseDateCol = { name: \"purchaseDate\", label: \"تاریخ خرید\" };\nconst priceCol = { name: \"price\", label: \"ارزش روز\" };\nconst overallValueCol = { name: \"overallValue\", label: \"ارزش کل\" };\nconst nameCol = { name: \"label\", label: \"نام دارایی\" };\n\nexport const cashTableColumns = [rowNum, nameCol, amountCol, operationsCol];\n\nexport const assetsTableColumns = [\n  rowNum,\n  nameCol,\n  amountCol,\n  averagePurchasePriceCol,\n  priceCol,\n  changePercentCol,\n  overallValueCol,\n  operationsCol,\n];\n\nexport const detailsTableColumns = [\n  rowNum,\n  amountCol,\n  purchasePriceCol,\n  changePercentCol,\n  purchaseDateCol,\n  overallValueCol,\n  operationsCol,\n];\n\nexport const historyTableColumns = [\n  rowNum,\n  { name: \"id\", label: \"تاریخ\" },\n  { name: \"goldCurrency\", label: \"طلا و ارز\" },\n  { name: \"stock\", label: \"بورس\" },\n  { name: \"cash\", label: \"نقدی\" },\n  { name: \"overall\", label: \"ارزش کل\" },\n];\n\nconst columns = {\n  cash: cashTableColumns,\n  history: historyTableColumns,\n  details: detailsTableColumns,\n  goldCurrency: assetsTableColumns,\n  goldcurrency: assetsTableColumns,\n  stock: assetsTableColumns,\n};\n\nexport default columns;\n","import BootModal from \"react-bootstrap/Modal\";\n\nfunction CustomModal({ title, show, body, handleConfirm, handleClose }) {\n  return (\n    <BootModal show={show} onHide={handleClose}>\n      <BootModal.Header closeButton>\n        <BootModal.Title>{title}</BootModal.Title>\n      </BootModal.Header>\n\n      <BootModal.Footer>\n        <button className=\"btn btn-secondary\" onClick={handleClose}>\n          انصراف\n        </button>\n        <button className=\"btn btn-primary\" onClick={handleConfirm}>\n          تایید\n        </button>\n      </BootModal.Footer>\n    </BootModal>\n  );\n}\n\nexport default CustomModal;\n","import CustomModal from \"../components/modal\";\nimport { useState } from \"react\";\n\nconst useDeleteMsgModal = (handleConfirm) => {\n  const [messageDisplay, setMessageDisplay] = useState(false);\n  const [toDeleteAsset, setToDeleteAsset] = useState(null);\n\n  const title = \"آیا از حذف این دارایی اطمینان دارید؟\";\n\n  const handleDelMsgClose = () => {\n    setMessageDisplay(false);\n    setToDeleteAsset(null);\n  };\n\n  const handleMessageDisplay = (asset) => {\n    setMessageDisplay(true);\n    setToDeleteAsset(asset);\n  };\n\n  const handleMessageConfirm = () => {\n    handleConfirm(toDeleteAsset);\n\n    handleDelMsgClose();\n  };\n\n  const modalBody = (\n    <CustomModal\n      title={title}\n      handleClose={handleDelMsgClose}\n      show={messageDisplay}\n      handleConfirm={handleMessageConfirm}\n    />\n  );\n\n  return [modalBody, handleMessageDisplay];\n};\n\nexport default useDeleteMsgModal;\n","import getPercentChange from \"../utils/getPercentChange\";\nimport Table from \"./table\";\nimport { EditBtn, DeleteBtn } from \"./buttons\";\nimport { detailsTableColumns as columns } from \"../utils/columns\";\nimport useDeleteMsgModal from \"../hooks/useDeleteMessage\";\nimport getCommaSepNum from \"../utils/getCommaSepNum\";\nimport { deleteAssetById } from \"../actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst AssetDetails = (props) => {\n  const { assetSubClass, marketPrice } = props.location.state;\n  const [modalBody, handleDelMsgDisplay] = useDeleteMsgModal(handleConfirm);\n\n  const dispatch = useDispatch();\n\n  const assetData = useSelector((state) =>\n    state.assets.filter((asset) => asset.assetSubClass === assetSubClass)\n  );\n\n  function handleConfirm(item) {\n    dispatch(deleteAssetById(item.id));\n  }\n\n  function getStringDate(date) {\n    return date.join(\"-\");\n  }\n\n  //TODO: merge mapping in both assetsTable and detail table\n  function getProcessedData(data) {\n    return data.map((item) => {\n      const date = { ...item.purchaseDate };\n\n      const overallValue = item.amount * marketPrice;\n      const changePercent = getPercentChange(item.purchasePrice, marketPrice);\n      const purchaseDate = getStringDate(Object.values(date));\n      const deleteBtn = (\n        <DeleteBtn\n          key={`${item.id}-deleteKey`}\n          deleteMethod={() => handleDelMsgDisplay(item)}\n        />\n      );\n      const editBtn = (\n        <EditBtn\n          key={`${item.id}-editKey`}\n          assetData={{ id: item.id, assetClass: item.assetClass }}\n        />\n      );\n\n      return {\n        ...item,\n        overallValue,\n        changePercent,\n        purchaseDate,\n        operations: [deleteBtn, editBtn],\n      };\n    });\n  }\n\n  return (\n    <div>\n      {modalBody}\n      <div className=\"asset-detail\">\n        <div className=\"asset-detail__header\">\n          <span className=\"label\">\n            {assetData.length && assetData[0].label}\n          </span>\n          <span className=\"value\">{getCommaSepNum(marketPrice)}</span>\n        </div>\n        <div className=\"asset-detail__body\">\n          <Table data={getProcessedData(assetData)} columns={columns} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AssetDetails;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronUp,\n  faChevronDown,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport getCommaSepNum from \"../utils/getCommaSepNum\";\n\nfunction StyledValue({ value, percentChange, change = \"\" }) {\n  const chevron =\n    percentChange > 0\n      ? faChevronUp\n      : percentChange < 0\n      ? faChevronDown\n      : faMinus;\n  const color =\n    percentChange > 0 ? \"green\" : percentChange < 0 ? \"red\" : \"black\";\n\n  return (\n    <div className=\"styled-value\" style={{ color }}>\n      <span className=\"symbol\">\n        <FontAwesomeIcon icon={chevron} />\n      </span>\n      <span className=\"value\">{getCommaSepNum(value)}</span>\n      {percentChange !== 0 && (\n        <span className=\"percent\">({percentChange})</span>\n      )}\n      {change !== 0 && <span className=\"change\">{getCommaSepNum(change)}</span>}\n    </div>\n  );\n}\n\nexport default StyledValue;\n","import React, { useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport StyledValue from \"./styledValue\";\n\nconst TableContainer = ({ children, title, addLink, valueInfo, empty }) => {\n  const headEl = useRef(null);\n  const contentEl = useRef(null);\n\n  function containerHeadClickHandler() {\n    if (empty) return;\n    headEl.current.classList.toggle(\"active\");\n    const content = contentEl.current;\n    if (content.style.maxHeight) {\n      content.style.maxHeight = null;\n    } else {\n      content.style.maxHeight = content.scrollHeight + \"px\";\n    }\n  }\n\n  return (\n    <div className={`table-container ${empty ? \"empty\" : \"\"}`}>\n      <div\n        ref={headEl}\n        className=\"table-container__head\"\n        onClick={containerHeadClickHandler}\n      >\n        <div className=\"container__head-info\">\n          <span className=\"title\">{title}</span>\n          {!empty && (\n            <div className=\"value-info\">\n              <StyledValue\n                value={valueInfo?.value}\n                percentChange={valueInfo?.percentChange}\n                change={valueInfo?.change}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"buttons\">\n          {addLink && (\n            <Link to={addLink} className=\"add-btn\">\n              <FontAwesomeIcon icon={faPlus} />\n            </Link>\n          )}\n          <span className=\"toggle-btn \">\n            <FontAwesomeIcon icon={faChevronDown} />\n          </span>\n        </div>\n      </div>\n      {!empty && (\n        <div className=\"table\" ref={contentEl}>\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TableContainer;\n","import React from \"react\";\nconst TimeFrameSelect = ({ onTimeFrameChange }) => {\n  return (\n    <div className=\"timeframe-filter filter\">\n      <label htmlFor=\"timeframe__select\">بازه زمانی</label>\n      <select\n        name=\"timeframe__select\"\n        onChange={(e) => onTimeFrameChange(e.target.value)}\n        id=\"timeframe__select\"\n      >\n        <option value=\"1\">روزانه</option>\n        <option value=\"7\">هفتگی</option>\n        <option value=\"30\">ماهانه</option>\n        <option value=\"365\">سالانه</option>\n      </select>\n    </div>\n  );\n};\n\nexport default TimeFrameSelect;\n","import getPercentChange from \"./getPercentChange\";\n\nfunction getDataWithChange(data, constKeys = []) {\n  return data.map((item, index, arr) => {\n    const newItem = { ...item };\n\n    const prevItem = arr[index - 1];\n\n    for (let key in item) {\n      // skiping date column\n      if (constKeys.includes(key)) continue;\n\n      // checks for first record that previous info is not provided for it\n      const percentChange =\n        index === 0 ? 0 : getPercentChange(prevItem[key], item[key]);\n      const change = index === 0 ? 0 : Math.abs(prevItem[key] - item[key]);\n      newItem[key] = { percentChange, change, value: item[key] };\n    }\n\n    return newItem;\n  });\n}\n\nexport default getDataWithChange;\n","function ResultsNumSelect({ onResultsNumChange }) {\n  return (\n    <div className=\"results-num filter\">\n      <label htmlFor=\"results-num__select\"> نتایج در هر صفحه</label>\n      <select\n        name=\"results-num__select\"\n        onChange={(e) => onResultsNumChange(e.target.value)}\n        id=\"results-num__select\"\n      >\n        <option value=\"10\">10</option>\n        <option value=\"15\">15</option>\n        <option value=\"30\">30</option>\n      </select>\n    </div>\n  );\n}\n\nexport default ResultsNumSelect;\n","import { utils } from \"react-modern-calendar-datepicker\";\n\n// returns date id by persian format\nfunction getDateId() {\n  //adding zero to the beggining for consistency in dates\n  const lengthOfNumbers = { year: 4, month: 2, day: 2 };\n  const today = utils(\"fa\").getToday();\n  for (let key in today) {\n    today[key] = String(today[key]).padStart(lengthOfNumbers[key], \"0\");\n  }\n\n  return Object.values(today).join(\"-\");\n}\n\nexport default getDateId;\n","import getDateId from \"../utils/getDateId\";\n\n// gets mapped assets and returns object with overall Values of main classes\nfunction getNormalizedOverallValue(mappedAssets) {\n  const todayDate = getDateId();\n  return mappedAssets.reduce(\n    (prev, current) => {\n      prev[current.assetClass] = current.overallValue;\n      prev.overall += current.overallValue;\n      return prev;\n    },\n    { overall: 0, id: todayDate }\n  );\n}\n\nexport default getNormalizedOverallValue;\n","import moment from \"moment-jalali\";\n\nfunction getFilteredDateByTimeFrame(data = [], timeFrame) {\n  const dateFormat = \"jYYYY-jMM-jDD\";\n\n  const dataByTimeFrame = [data[0]];\n  let round = 1;\n  let start = moment(data[0].id, dateFormat);\n\n  for (let record of data) {\n    const diff = moment(record.id, dateFormat).diff(start, \"days\");\n\n    if (diff + round * timeFrame < 0) {\n      dataByTimeFrame.unshift(record);\n      round += 1;\n    }\n  }\n\n  return dataByTimeFrame;\n}\n\nexport default getFilteredDateByTimeFrame;\n","import _ from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport { historyTableColumns } from \"../utils/columns\";\nimport { updateHistoryRecord } from \"../actions\";\nimport Table from \"./table\";\nimport TableContainer from \"./tableContainer\";\nimport StyledValue from \"./styledValue\";\nimport TimeFrameSelect from \"./timeFrameSelect\";\nimport getDataWithChange from \"../utils/getDataWithChange\";\nimport ResultsNumSelect from \"./ResultsNumSelect\";\nimport getNormalizedOverallValue from \"../utils/getNormalizedOverallValue\";\nimport getFilteredDateByTimeFrame from \"../utils/getFilteredDataByTimeFrame\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n/*\nThe ideal version of this  app will record values every day\nso it won't have problem presenting time frames\nbut for now it is not ideal and some days may be skipped\nso it calculates the productivity and profit/loss by the \nnearest prices to the start and end of the time frame \n */\n\nconst PortfolioHistory = ({ mappedAssets }) => {\n  const [timeFrame, setTimeFrame] = useState(1);\n  const historyRecord = useSelector((state) => state.historyRecord);\n  const [pageSize, setPageSize] = useState(10);\n  const sortedData = _.sortBy(historyRecord, \"id\").reverse();\n\n  const dispatch = useDispatch();\n\n  // checks if data is ready to save in history record\n  function checkMappedValidation(mappedAssets) {\n    const isDataFetchComplete = !mappedAssets?.some(\n      (item) => !item.data.length\n    );\n\n    if (isDataFetchComplete) return true;\n  }\n\n  // saves overallValues in history\n  useEffect(() => {\n    if (!checkMappedValidation(mappedAssets)) {\n      return;\n    }\n\n    let newData = [...historyRecord];\n    const normalizedOverall = getNormalizedOverallValue(mappedAssets);\n    // let isNewRecord = true;\n\n    // checks if there is change in history\n    if (JSON.stringify(sortedData[0]) === JSON.stringify(normalizedOverall))\n      return;\n\n    // today's history was recorded before\n    if (sortedData[0]?.id === normalizedOverall.id) {\n      // isNewRecord = false;\n      newData[newData.length - 1] = { ...normalizedOverall };\n    } else {\n      newData = [...newData, normalizedOverall];\n    }\n    // saveOverallHistory(normalizedOverall, isNewRecord);\n    dispatch(updateHistoryRecord(newData));\n  }, [mappedAssets, historyRecord, dispatch, sortedData]);\n\n  // returns styled data for table cell\n  function getStyledData(dataWithChanges) {\n    return dataWithChanges.map(({ ...historyRow }, index) => {\n      for (let key in historyRow) {\n        if (key === \"id\") continue;\n        historyRow[key] = (\n          <StyledValue\n            value={historyRow[key].value}\n            percentChange={historyRow[key].percentChange}\n          />\n        );\n      }\n      return historyRow;\n    });\n  }\n\n  const timeFramedData =\n    timeFrame > 1\n      ? getFilteredDateByTimeFrame([...sortedData], timeFrame)\n      : [...sortedData].reverse();\n  const dataWithChanges = getDataWithChange(timeFramedData, [\"id\"]);\n  const lastChangeData = dataWithChanges[dataWithChanges.length - 1];\n  // const styledData = getStyledData(dataWithChanges).reverse();\n\n  return (\n    <div className=\"history-info\">\n      <TableContainer\n        title=\"ارزش کل\"\n        empty={!historyRecord.length ? true : false}\n        valueInfo={lastChangeData?.overall}\n      >\n        <div className=\"filter-bar\">\n          <TimeFrameSelect onTimeFrameChange={setTimeFrame} />\n          <ResultsNumSelect onResultsNumChange={setPageSize} />\n        </div>\n        <Table\n          columns={historyTableColumns}\n          data={dataWithChanges}\n          pageSize={pageSize}\n          styleFunction={getStyledData}\n          extraSortField={[\"value\"]}\n        />\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default PortfolioHistory;\n","import React from \"react\";\nimport allColumns from \"../utils/columns\";\nimport { DeleteBtn, EyeBtn, EditBtn } from \"./buttons\";\nimport Table from \"./table\";\nimport TableContainer from \"./tableContainer\";\n\nfunction AssetsTable({ assets, marketPrices, onDeleteAsset, overallValue }) {\n  const { assetClass, data } = assets;\n\n  const priceKey = assetClass === \"stock\" ? \"lastTradePrice\" : \"price\";\n\n  const titles = {\n    goldCurrency: \"طلا و ارز\",\n    goldcurrency: \"طلا و ارز\",\n    stock: \"بورس\",\n    cash: \"نقدی\",\n  };\n\n  const title = titles[assetClass];\n\n  const columns = allColumns[assetClass];\n\n  // mapping buttons\n  const mappedData = data.map(({ ...item }) => {\n    let deleteBtn = (\n      <DeleteBtn\n        key={`${item.assetSubClass}-deleteBtn`}\n        deleteMethod={() => onDeleteAsset(item)}\n      />\n    );\n    let buttons = [deleteBtn];\n\n    if (assetClass === \"cash\") {\n      buttons.push(\n        <EditBtn\n          key={`${item.assetSubClass}-editBtn`}\n          assetData={{ id: item.id, assetClass: item.assetClass }}\n        />\n      );\n    } else {\n      const price = marketPrices.find((p) => p.id === item.assetSubClass);\n\n      buttons.push(\n        <EyeBtn\n          key={`${item.assetSubClass}-eyeBtn`}\n          requiredInfo={{\n            assetSubClass: item.assetSubClass,\n            assetClass: item.assetClass,\n            marketPrice: price[priceKey],\n          }}\n        />\n      );\n    }\n\n    item[\"operations\"] = buttons;\n\n    return item;\n  });\n\n  return (\n    <TableContainer\n      addLink={`/add/${assetClass}`}\n      valueInfo={overallValue[assetClass]}\n      title={title}\n      empty={!mappedData.length ? true : false}\n    >\n      {mappedData.length && <Table data={mappedData} columns={columns} />}\n    </TableContainer>\n  );\n}\n\nexport default AssetsTable;\n","import _ from \"lodash\";\nimport AssetsTable from \"./assetsTable\";\nimport getDataWithChange from \"../utils/getDataWithChange\";\n\nconst AssetsDataTables = ({\n  mappedAssets,\n  handleDelMsgDisplay,\n  prices,\n  historyRecord,\n}) => {\n  const lastRecordChange =\n    historyRecord.length &&\n    getDataWithChange(historyRecord, [\"id\"]).slice(-1)[0];\n\n  const groupedByAssetClass = _.groupBy(mappedAssets, \"assetClass\");\n  const assetClasses = [\"goldCurrency\", \"stock\", \"cash\"];\n\n  return (\n    <div className=\"assets\">\n      {assetClasses.map((assetClass) => {\n        const assets = (groupedByAssetClass[assetClass] &&\n          groupedByAssetClass[assetClass][0]) || {\n          assetClass,\n          data: [],\n          overallValue: 0,\n        };\n\n        return (\n          <AssetsTable\n            marketPrices={prices[assets.assetClass]}\n            assets={assets}\n            overallValue={lastRecordChange}\n            onDeleteAsset={handleDelMsgDisplay}\n            key={assets.assetClass}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default AssetsDataTables;\n","import getPercentChange from \"../utils/getPercentChange\";\nimport getMarketPriceData from \"./getMarketPrice\";\nimport _ from \"lodash\";\n\nfunction getPriceKey(assetClass) {\n  return assetClass === \"stock\" ? \"lastTradePrice\" : \"price\";\n}\n\n// TODO: refactor to neat and more general function\nfunction getSumByKey(collection, key, initial = 0) {\n  return _.reduce(\n    collection,\n    (sum, current) => (sum += Number(current[key])),\n    initial\n  );\n}\n\nfunction getWeightedSum(collection, key1, key2, initial = 0) {\n  return _.reduce(\n    collection,\n    (sum, current) => (sum += Number(current[key1] * current[key2])),\n    initial\n  );\n}\n\nfunction flattenSubAssets(assetsData) {\n  const amountSum = getSumByKey(assetsData, \"amount\");\n\n  const averagePurchasePrice = Math.ceil(\n    getWeightedSum(assetsData, \"purchasePrice\", \"amount\") / amountSum\n  );\n\n  const initial = {\n    ...assetsData[0],\n    amount: amountSum,\n    purchasePrice: averagePurchasePrice,\n  };\n\n  return initial;\n}\n\nfunction mapPricesToAssets(prices, assetsData) {\n  const dataBySubClass = _.groupBy(assetsData, \"assetSubClass\");\n\n  if (assetsData[0].assetClass === \"cash\") {\n    return [assetsData, _.sumBy(assetsData, \"amount\")];\n  }\n\n  if (_.isEmpty(prices)) return [[], 0];\n\n  let overallValueByAssetClass = 0;\n\n  const mappedAssets = Object.values(dataBySubClass).map((assetData) => {\n    const flattenedObject = flattenSubAssets(assetData);\n    const { assetClass } = flattenedObject;\n\n    const price = getMarketPriceData(\n      prices[flattenedObject.assetClass],\n      flattenedObject.assetSubClass\n    )[getPriceKey(assetClass)];\n    // mapping\n    flattenedObject[\"price\"] = price;\n    flattenedObject[\"overallValue\"] = flattenedObject[\"amount\"] * price;\n    flattenedObject[\"changePercent\"] = getPercentChange(\n      flattenedObject[\"purchasePrice\"],\n      price,\n      2\n    );\n\n    overallValueByAssetClass += flattenedObject[\"amount\"] * price;\n    return flattenedObject;\n  });\n\n  return [mappedAssets, overallValueByAssetClass];\n}\n\nexport default mapPricesToAssets;\n","import _ from \"lodash\";\nimport mapPricesToAssets from \"../utils/mapPricesToAssets\";\n\nfunction getMappedAssets(assetsData, prices) {\n  const data = _.groupBy(assetsData, \"assetClass\");\n\n  return Object.values(data).map((assets) => {\n    const assetClass = assets[0].assetClass;\n\n    const [mappedAssets, overallValue] = mapPricesToAssets(prices, assets);\n\n    return { assetClass, data: mappedAssets, overallValue };\n  });\n}\n\nexport default getMappedAssets;\n","import React from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index,\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nclass QuotaChart extends React.PureComponent {\n  render() {\n    const labels = { goldCurrency: \"طلا وارز\", cash: \"نقدی\", stock: \"سهام\" };\n    const data = this.props.data;\n    const pieChartData = data.map((item) => ({\n      name: labels[item.assetClass],\n      assetClass: item.assetClass,\n      value: item.overallValue,\n    }));\n    const COLORS = { goldCurrency: \"gold\", cash: \"silver\", stock: \"green\" };\n    return (\n      <div className=\"chartWrapper\">\n        <PieChart width={500} height={350}>\n          <Pie\n            data={pieChartData}\n            dataKey=\"value\"\n            nameKey=\"assetClass\"\n            cx=\"50%\"\n            cy=\"65%\"\n            label={renderCustomizedLabel}\n            labelLine={false}\n            outerRadius={120}\n            fill=\"#8884d8\"\n          >\n            {pieChartData.map((entry, index) => (\n              <Cell key={index} fill={COLORS[entry.assetClass]} />\n            ))}\n          </Pie>\n          <Legend\n            formatter={(value, entry, index) => (\n              <span style={{ marginRight: \"10px\" }}>{value}</span>\n            )}\n            width={400}\n            wrapperStyle={{\n              top: 15,\n              left: 0,\n              right: 0,\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              backgroundColor: \"#f5f5f5\",\n              border: \"1px solid #d5d5d5\",\n              borderRadius: 3,\n              lineHeight: \"40px\",\n            }}\n          />\n        </PieChart>\n      </div>\n    );\n  }\n}\n\nexport default QuotaChart;\n","import {\n  LineChart,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip,\n  CartesianGrid,\n  Line,\n} from \"recharts\";\nimport { useState } from \"react\";\n\nimport getCommaSepNum from \"../utils/getCommaSepNum\";\n\nconst OverallChart = ({ data }) => {\n  const [activeCategories, setActiveCategories] = useState([\"overall\"]);\n\n  const info = {\n    stock: { color: \"#454B1B\", label: \"سهام\", active: false },\n    cash: { color: \"#C0C0C0\", label: \"نقدی\", active: false },\n    goldCurrency: { color: \"#FFD700\", label: \"طلا و ارز\", active: false },\n    overall: { color: \"#8884d8\", label: \"ارزش کل\", active: true },\n  };\n\n  const LineChartData = data.map((item) => {\n    return {\n      name: item.id,\n      overall: item.overall,\n      goldCurrency: item.goldCurrency,\n      stock: item.stock,\n      cash: item.cash,\n    };\n  });\n\n  const handleClick = (dataKey) => {\n    if (activeCategories.includes(dataKey)) {\n      setActiveCategories(activeCategories.filter((item) => item !== dataKey));\n    } else {\n      setActiveCategories([...activeCategories, dataKey]);\n    }\n  };\n\n  const renderCustomizedLegend = () => {\n    return (\n      <div className=\"customized-legend\">\n        {Object.entries(info).map(([dataKey, value]) => {\n          const { label, color } = value;\n          const legendColor = activeCategories.includes(dataKey)\n            ? color\n            : \"grey\";\n          const style = {\n            display: \"inline-block\",\n            color: legendColor,\n            cursor: \"pointer\",\n            marginLeft: \"1rem\",\n          };\n          return (\n            <span\n              key={dataKey}\n              style={style}\n              onClick={() => handleClick(dataKey)}\n            >\n              {label}\n            </span>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"chartWrapper\">\n      <LineChart\n        className=\"chart\"\n        style={{ margin: \"0 auto\" }}\n        width={500}\n        height={250}\n        data={LineChartData}\n        margin={{ top: 5, right: 30, left: 30, bottom: 5 }}\n      >\n        <Legend content={renderCustomizedLegend} />\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis style={{ fontSize: \"14px\" }} dataKey=\"name\" />\n        <YAxis\n          style={{ fontSize: \"14px\" }}\n          tickFormatter={(value) => getCommaSepNum(value)}\n          domain={[\"dataMin- 10000000\", \"dataMax + 10000000\"]}\n        />\n        <Tooltip formatter={(value) => getCommaSepNum(value)} />\n\n        {activeCategories.map((category) => {\n          const { label, color } = info[category];\n          return (\n            <Line\n              key={category}\n              type=\"monotone\"\n              dataKey={category}\n              name={label}\n              stroke={color}\n            />\n          );\n        })}\n      </LineChart>\n    </div>\n  );\n};\n\nexport default OverallChart;\n","import QuotaChart from \"./quotaChart\";\nimport OverallChart from \"./overallChart\";\n\nconst ChartEmptyMessage = ({ message }) => {\n  return (\n    <div className=\"chart-empty-message\">\n      <p className=\"message\">{message}</p>\n    </div>\n  );\n};\n\nconst Charts = ({ historyRecord, assetsData }) => {\n  const overallChartEmptyMessage =\n    \"تاریخچه‌ای برای نمایش این نمودار ثبت نشده‌ است.\";\n\n  const quotaChartEmptyMessage = \"دارایی برای نمایش این نمودار ثبت نشده است.\";\n\n  const OverallChartOutcome = historyRecord.length ? (\n    <OverallChart data={historyRecord} />\n  ) : (\n    <ChartEmptyMessage message={overallChartEmptyMessage} />\n  );\n\n  const QuotaChartOutcome = assetsData.length ? (\n    <QuotaChart data={assetsData} />\n  ) : (\n    <ChartEmptyMessage message={quotaChartEmptyMessage} />\n  );\n  return (\n    <div className=\"charts\">\n      {OverallChartOutcome}\n      {QuotaChartOutcome}\n    </div>\n  );\n};\n\nexport default Charts;\n","import PortfolioHistory from \"./portfolioHistory\";\nimport AssetsDataTables from \"./assetsDataTables\";\nimport getMappedAssets from \"../utils/getMappedAssets\";\nimport { useState, useEffect } from \"react\";\nimport useDeleteMsgModal from \"../hooks/useDeleteMessage\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  fetchPrices,\n  fetchAssets,\n  fetchHistoryRecord,\n  deleteAssetById,\n  deleteAssetBySubClass,\n} from \"../actions\";\n\nimport Charts from \"./charts\";\n\nconst PortfolioDetails = () => {\n  const [mappedAssets, setMappedAssets] = useState([]);\n  const [modalBody, handleDelMsgDisplay] = useDeleteMsgModal(handleConfirm);\n\n  const dispatch = useDispatch();\n  const assets = useSelector((state) => state.assets);\n  const prices = useSelector((state) => state.prices);\n  const historyRecord = useSelector((state) => state.historyRecord);\n\n  useEffect(() => {\n    dispatch(fetchAssets());\n    dispatch(fetchPrices());\n    dispatch(fetchHistoryRecord());\n  }, [dispatch]);\n\n  function handleConfirm(toDeleteAsset) {\n    if (toDeleteAsset.assetClass === \"cash\") {\n      dispatch(deleteAssetById(toDeleteAsset.id));\n    } else {\n      dispatch(deleteAssetBySubClass(toDeleteAsset));\n    }\n  }\n\n  // sets mappedAssets\n  useEffect(() => {\n    const mappedAssets = getMappedAssets(assets, prices);\n\n    if (Object.values(prices).length) {\n      setMappedAssets(mappedAssets);\n    }\n  }, [prices, assets]);\n\n  if (Object.values(prices).length) {\n    return (\n      <div className=\"portfolio-details\">\n        {modalBody}\n        <AssetsDataTables\n          mappedAssets={mappedAssets}\n          handleDelMsgDisplay={handleDelMsgDisplay}\n          historyRecord={historyRecord}\n          prices={prices}\n        />\n        <PortfolioHistory mappedAssets={mappedAssets} />\n        <Charts historyRecord={historyRecord} assetsData={mappedAssets} />\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default PortfolioDetails;\n","const Footer = () => {\n  const link = (\n    <a\n      rel=\"noreferrer\"\n      target=\"_blank\"\n      href=\"https://www.linkedin.com/in/mh-mighani/\"\n    >\n      محمدحسین میقانی\n    </a>\n  );\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer-text\">ساخته شده توسط {link} </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { Route, Switch } from \"react-router-dom\";\nimport GoldCurrencyForm from \"./components/goldCurrencyForm\";\nimport { ToastContainer } from \"react-toastify\";\nimport NavbarT from \"./components/navbar\";\nimport StockForm from \"./components/stockForm\";\nimport CashForm from \"./components/cashForm\";\nimport AssetDetails from \"./components/assetDetails\";\nimport PortfolioDetails from \"./components/portfolioDetails\";\n// import Portfolio from \"./components/Portfolio\";\nimport Footer from \"./footer\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavbarT />\n      <Switch>\n        {/* <Route exact path=\"/\" component={Portfolio} /> */}\n        <Route path=\"/portfolio-details\" component={PortfolioDetails} />\n        <Route path=\"/assets/details/\" component={AssetDetails} />\n        <Route exact path=\"/add/goldcurrency/\" component={GoldCurrencyForm} />\n        <Route exact path=\"/add/stock\" component={StockForm} />\n        <Route exact path=\"/add/cash\" component={CashForm} />\n      </Switch>\n      <Footer />\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reducers from \"./reducers\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.rtl.css\";\nimport \"./fonts/b-nazanin-regular.ttf\";\nimport \"./styles.scss\";\nimport { Provider } from \"react-redux\";\nimport { ThemeContextProvider } from \"./context/themeContext\";\n\nconst store = configureStore({ reducer: reducers, middleware: [thunk] });\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeContextProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ThemeContextProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","export default __webpack_public_path__ + \"static/media/b-nazanin-regular.d7478a9e.ttf\";"],"sourceRoot":""}