{"version":3,"sources":["actions/actionTypes.js","reducers/index.js","components/forms/selectForm.jsx","components/forms/input.jsx","components/common/buttons.jsx","utils/fakeHistoryBuilder.js","actions/index.js","utils/notifications.js","utils/formValidationCheck.js","utils/formValidationSchema.js","hooks/useFormErrorHandler.js","hooks/useAssetFormHandler.js","components/common/purchaseDate.jsx","components/forms/goldCurrencyForm.jsx","components/common/toggleSwitch.jsx","context/themeContext.js","components/common/darkModeToggleBtn.jsx","components/layout/navbar.jsx","utils/getFilteredDataByTimeFrame.js","utils/getDateId.js","utils/getNormalizedOverallValue.js","utils/getCommaSepNum.js","utils/getPercentChange.js","utils/getMarketPrice.js","utils/mapPricesToAssets.js","utils/getMappedAssets.js","utils/getDataWithChange.js","utils/getPaginatedData.js","components/common/styledValue.jsx","utils/getStyledData.js","utils/columns.js","components/forms/stockForm.jsx","components/forms/cashForm.jsx","components/tables/table/tableBody.jsx","components/tables/table/tableFoot.jsx","components/tables/table/tableHeader.jsx","components/common/pagination.jsx","components/tables/table/table.jsx","components/common/modal.jsx","hooks/useDeleteMessage.js","components/tables/assetsTable/assetDetails.jsx","services/historyService.js","components/tables/assetsTable/tableContainer.jsx","components/common/timeFrameSelect.jsx","components/portfolio/resultsNumSelect.jsx","components/portfolio/portfolioHistory.jsx","components/tables/assetsTable/assetsTable.jsx","components/tables/assetsTable/assetsDataTables.jsx","components/charts/quotaChart.jsx","components/charts/overallChart.jsx","components/charts/charts.jsx","components/portfolio/portfolioDetails.jsx","components/layout/footer.jsx","components/common/openingModal.jsx","App.js","index.js","fonts/b-nazanin-regular.ttf"],"names":["FETCH_ASSETS","ADD_ASSET","DELETE_ASSET_BY_ID","DELETE_ASSET_BY_SUBCLASS","EDIT_ASSET","FETCH_PRICES","FETCH_HISTORY","UPDATE_HISTORY","combineReducers","assets","state","action","type","actions","filter","asset","assetSubClass","payload","id","map","assetId","newValue","prices","historyRecord","SelectForm","error","label","props","className","htmlFor","Input","name","onChange","rest","mutualProps","thousandSeparator","isNumericString","autoComplete","onValueChange","values","target","value","floatValue","SubmitBtn","editState","EyeBtn","requiredInfo","assetClass","marketPrice","to","pathname","icon","faEye","EditBtn","assetData","replace","faEdit","DeleteBtn","deleteMethod","onClick","faTrashAlt","dateOperation","date","amount","format","moment","subtract","getNewHistoryData","previous","lastHistoryObject","randomNumber","randoms","x","minusOrPositive","Math","random","arr","i","push","getRandomEfficiency","newHistory","randomCounter","newOverall","key","round","fakeHistoryBuilder","historyLength","lastProvidedHistory","allHistoryData","lastHistory","deleteAssetById","dispatch","a","addAsset","Date","now","editAsset","notifications","successfulAdditionNotify","toast","success","successfulEditionNotify","info","duplicateAssetError","formValidationCheck","schema","result","validate","allowUnknown","details","context","errorMessage","message","errors","requiredErrorMsg","stockSelectionErrorMsg","noneZeroRequiredSchema","Joi","number","min","required","messages","schemas","goldCurrency","object","string","purchasePrice","stock","cash","useFormErrorHandler","formState","useState","setErrors","useEffect","validationSchemas","useAssetFormHandler","initialState","isSubmited","setIsSubmited","todayPersianDate","utils","getToday","location","useDispatch","purchaseDate","setFormState","getFormElementProps","handleChange","handleSubmit","event","preventDefault","Number","response","status","handleDateChange","PurchaseDate","inputPlaceholder","locale","shouldHighlightWeekends","GoldCurrencyForm","marketPrices","useSelector","find","selectedOption","setSelectedOption","options","marketDetail","getMarketPrice","length","price","onSubmit","opt","isDisabled","readOnly","ToggleSwitch","handleClick","active","ThemeContext","React","createContext","theme","toggleTheme","ThemeContextProvider","useLocalStorage","setTheme","document","documentElement","setAttribute","themeValue","prev","Provider","children","DarkModeToggleBtn","themeContext","useContext","Navbar","expand","Container","style","textDecoration","Brand","getFilteredDateByTimeFrame","data","timeFrame","dateFormat","dataByTimeFrame","start","record","diff","unshift","getDateId","lengthOfNumbers","year","month","day","String","padStart","Object","join","getNormalizedOverallValue","mappedAssets","todayDate","reduce","current","overallValue","overall","getCommaSepNum","num","inputType","toString","getPercentChange","firstValue","secondValue","decimalPoint","toFixed","getMarketPriceData","flattenSubAssets","assetsData","amountSum","collection","initial","_","sum","getSumByKey","averagePurchasePrice","ceil","key1","key2","getWeightedSum","mapPricesToAssets","dataBySubClass","groupBy","sumBy","isEmpty","overallValueByAssetClass","flattenedObject","getPriceKey","getMappedAssets","getDataWithChange","constKeys","item","index","newItem","prevItem","includes","percentChange","change","abs","getPaginatedData","currentPage","pageSize","slice","checkValidation","isFinite","isNaN","StyledValue","chevron","faChevronUp","faChevronDown","faMinus","getChevron","color","getStyledData","dataWithChanges","nuetralCols","row","rowNum","amountCol","operationsCol","changePercentCol","overallValueCol","nameCol","assetsTableColumns","columns","history","goldcurrency","StockForm","setOptions","lastTradePrice","lastPrice","option","fullName","mapPricesToOptions","CashForm","setAssetData","getCellContent","column","rowIndex","cellContent","undefined","TableBody","TableFoot","scope","cell","toLocaleString","TableHead","sortCol","setSortCol","cursor","dir","col","faSortUp","faSortDown","display","Pagination","onPageChange","items","Item","e","text","Table","footerData","onDeleteAsset","styleFunction","extraSortField","setCurrenctPage","sortedData","orderBy","Boolean","styledData","reverse","paginatedData","CustomModal","title","show","body","handleClose","footer","onHide","Header","closeButton","Title","Body","Footer","useDeleteMsgModal","handleConfirm","messageDisplay","setMessageDisplay","toDeleteAsset","setToDeleteAsset","handleDelMsgClose","modalFooter","AssetDetails","modalBody","handleDelMsgDisplay","changePercent","getStringDate","deleteBtn","editBtn","operations","serverUrl","TableContainer","addLink","valueInfo","empty","headEl","useRef","contentEl","ref","classList","toggle","content","maxHeight","scrollHeight","faPlus","TimeFrameSelect","onTimeFrameChange","ResultsNumSelect","onResultsNumChange","PortfolioHistory","setTimeFrame","setPageSize","sortBy","some","checkMappedValidation","newHistoryRecord","newData","normalizedOverall","JSON","stringify","timeFramedData","lastChangeData","AssetsTable","priceKey","allColumns","mappedData","buttons","p","AssetsDataTables","lastRecordChange","groupedByAssetClass","RADIAN","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","cos","y","sin","fill","textAnchor","dominantBaseline","QuotaChart","labels","pieChartData","this","COLORS","PieChart","width","height","Pie","dataKey","nameKey","labelLine","entry","Cell","Legend","formatter","marginRight","wrapperStyle","top","left","right","marginLeft","backgroundColor","border","borderRadius","lineHeight","PureComponent","OverallChart","activeCategories","setActiveCategories","LineChartData","LineChart","margin","bottom","entries","CartesianGrid","strokeDasharray","XAxis","fontSize","YAxis","tickFormatter","domain","Tooltip","category","Line","stroke","ChartEmptyMessage","Charts","OverallChartOutcome","QuotaChartOutcome","PortfolioDetails","setMappedAssets","deleteAssetBySubClass","fakeHistory","link","rel","href","OpeningModal","App","path","component","exact","store","configureStore","reducer","reducers","middleware","thunk","ReactDOM","render","getElementById"],"mappings":"2t8UACaA,EAAe,eACfC,EAAY,YACZC,EAAqB,eACrBC,EAA2B,2BAC3BC,EAAa,aAGbC,EAAe,eAGfC,EAAgB,gBAChBC,EAAiB,iBCqCfC,cAAgB,CAAEC,OA9ClB,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACrC,OAAQA,EAAOC,MAoBb,QACE,OAAOF,EAlBT,KAAKG,EACH,OAAOH,EAAMI,QACX,SAACC,GAAD,OAAWA,EAAMC,gBAAkBL,EAAOM,QAAQD,iBAEtD,KAAKH,EACH,OAAOH,EAAMI,QAAO,SAACC,GAAD,OAAWA,EAAMG,KAAOP,EAAOM,WACrD,KAAKJ,EAEH,OAAOH,EAAMS,KAAI,SAACJ,GAChB,OAAIA,EAAMG,KAAOP,EAAOM,QAAQG,QACvBT,EAAOM,QAAQI,SAEjBN,KAGX,KAAKF,EACH,MAAM,GAAN,mBAAWH,GAAX,CAAkBC,EAAOM,YA0BUK,OApB1B,WAAyB,IAAxBZ,EAAuB,uDAAf,GAAIC,EAAW,uCACrC,OAAQA,EAAOC,OACRC,EACIF,EAAOM,QAEPP,GAeoCa,cAX3B,WAAyB,IAAxBb,EAAuB,uDAAf,GAAIC,EAAW,uCAC5C,OAAQA,EAAOC,MACb,KAAKC,EAEL,KAAKA,EACH,OAAOF,EAAOM,QAChB,QACE,OAAOP,M,0FChCEc,EAVI,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,MAAOR,EAAmB,EAAnBA,GAAOS,EAAY,iBACrD,OACE,sBAAKC,UAAU,aAAf,UACGF,GAAS,uBAAOG,QAASX,EAAhB,SAAqBQ,IAC/B,cAAC,IAAD,aAAQR,GAAIA,GAAQS,IACnBF,GAAS,qBAAKG,UAAU,qBAAf,SAAqCH,Q,2DCiCtCK,EArCD,SAAC,GAQR,IAPLJ,EAOI,EAPJA,MACAK,EAMI,EANJA,KACAN,EAKI,EALJA,MACAP,EAII,EAJJA,GAII,IAHJN,YAGI,MAHG,SAGH,MAFJoB,gBAEI,MAFO,aAEP,EADDC,EACC,iBACEC,EAAW,aAAKhB,KAAIU,UAAW,eAAgBG,QAASE,GAE9D,OACE,sBAAKL,UAAU,aAAf,UACGF,GAAS,uBAAOG,QAASX,EAAhB,SAAqBQ,IACrB,WAATd,EACC,cAAC,IAAD,aACEuB,mBAAmB,EACnBC,iBAAiB,EACjBC,aAAa,MACbC,cAAe,SAACC,GAAD,OACbP,EAAS,CAAEQ,OAAQ,CAAET,OAAMU,MAAOF,EAAOG,gBAEvCR,IAGN,mCACEtB,KAAMA,EACNyB,aAAa,MACbL,SAAUA,GACNE,IAGPT,GAAS,qBAAKG,UAAU,qBAAf,SAAqCH,Q,gBC/BxCkB,EAAY,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAG1B,OACE,wBACEhC,KAAK,SACLgB,UAAS,yBAAoBgB,EAAY,UAAY,WAFvD,SAIGA,EANY,uCADD,0CAYLC,EAAS,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACf9B,EAA2C8B,EAA3C9B,cAAe+B,EAA4BD,EAA5BC,WAAYC,EAAgBF,EAAhBE,YACnC,OACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,kBACTxC,MAAO,CAAEM,gBAAe+B,aAAYC,gBAEtCpB,UAAU,kBALZ,SAOE,cAAC,IAAD,CAAiBuB,KAAMC,SAKhBC,EAAU,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAChBpC,EAAmBoC,EAAnBpC,GAAI6B,EAAeO,EAAfP,WACZ,OACE,cAAC,IAAD,CACEQ,SAAS,EACTN,GAAI,CAAEC,SAAS,QAAD,OAAUH,GAAcrC,MAAO,CAAEQ,OAC/CU,UAAU,kBAHZ,SAKE,cAAC,IAAD,CAAiBuB,KAAMK,SAKhBC,EAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1B,OACE,wBAAQC,QAASD,EAAc9B,UAAU,iBAAzC,SACE,cAAC,IAAD,CAAiBuB,KAAMS,S,4DC3B7B,SAASC,EAAcC,EAAMC,GAAmC,IAA3BC,EAA0B,uDAAjB,gBAC5C,OAAOC,IAAOH,EAAME,GAAQE,SAASH,EAAQ,OAAOC,OAAOA,GAG7D,SAASG,EAAkBC,GACzB,IAX2BC,EAAmBC,EAWxCC,EApBR,SAA6BC,GAG3B,IAFA,IAAMC,EAAkBC,KAAKC,SAAW,GAAM,GAAK,EAC7CC,EAAM,GACHC,EAAI,EAAGA,EAAIL,EAAGK,IACrBD,EAAIE,KAAKL,EAAkBC,KAAKC,UAElC,OAAOC,EAcSG,CAAoB,GAC9BC,EAAU,eAAQZ,GACpBa,EAAgB,EAChBC,EAAa,EAEjB,IAAK,IAAIC,KAAOf,EACF,YAARe,IAEe,OAARA,GAKTH,EAAWG,IAxBYd,EAyBrBW,EAAWG,GAzB6Bb,EA0BxCC,EAAQU,GAzBPP,KAAKU,MACVf,EAAqBA,EAAoBC,EAAgB,MA4BzDY,GAAcF,EAAWG,GACzBF,GAAiB,GAXfD,EAAWG,GAAOtB,EAAcmB,EAAWG,GAAM,IAgBrD,OAFAH,EAAU,QAAcE,EAEjBF,EAmBMK,MAhBf,SAA4BC,EAAeC,GAOzC,IANA,IAAIV,EAAI,EAEFW,EAAiB,CAAC,eAAKD,IAEzBE,EAAcF,EAEXV,EAAIS,GACTG,EAActB,EAAkBsB,GAChCD,EAAeV,KAAKW,GACpBZ,GAAK,EAGP,OAAOW,GC/DH/E,EAAS,GAuCFiF,EAAkB,SAACxE,GAAD,8CAAQ,WAAOyE,GAAP,SAAAC,EAAA,sDACrCD,EAAS,CAAE/E,KAAMC,EAA4BI,QAASC,IADjB,2CAAR,uDAIlB2E,EAAW,SAAC9E,GAAD,8CAAW,WAAO4E,GAAP,SAAAC,EAAA,sDACjCD,EAAS,CAAE/E,KAAMC,EAAmBI,QAAQ,2BAAMF,GAAP,IAAcG,GAAI4E,KAAKC,UADjC,2CAAX,uDAIXC,EAAY,SAAC5E,EAASC,GAAV,8CAAuB,WAAOsE,GAAP,SAAAC,EAAA,sDAC9CD,EAAS,CAAE/E,KAAMC,EAAoBI,QAAS,CAAEG,UAASC,cADX,2CAAvB,uD,QCrCV4E,EANO,CACpBC,yBAR+B,kBAC/BC,IAAMC,QAAQ,sKAQdC,wBAN8B,kBAAMF,IAAMG,KAAK,uIAO/CC,oBAL0B,kBAAMJ,IAAM1E,MAAM,qHCO/B+E,OAdf,SAA6BC,EAAQ/F,GACnC,IAAMgG,EAASD,EAAOE,SAASjG,EAAO,CAAEkG,cAAc,IAEhDnF,EAAiBiF,EAAjBjF,MAAOgB,EAAUiE,EAAVjE,MAEb,GAAIhB,EAAO,CACT,IAAMM,EAAON,EAAMoF,QAAQ,GAAGC,QAAQ3B,IAChC4B,EAAetF,EAAMoF,QAAQ,GAAGG,QACtC,MAAO,CAAEC,OAAO,eAAIlF,EAAOgF,GAAgBtE,OAAO,GAGpD,MAAO,CAAEA,QAAOwE,QAAQ,I,oBCTpBC,GAAmB,iJAEnBC,GAAyB,kJAEzBC,GAAyBC,KAAIC,SAASC,IAAI,GAAGC,WAAWC,SAAS,CACrE,eAAgBP,GAChB,aALkB,4KA0CLQ,GANC,CACdC,aA7ByBN,KAAIO,OAAO,CACpC5G,cAAeqG,KAAIQ,SAASL,WAAWC,SAAS,CAC9C,eAAgBP,GAChB,eAAgBA,KAElBxF,MAAO2F,KAAIQ,SACX9D,OAAQqD,GACRU,cAAeV,GACfpE,YAAaqE,KAAIC,WAsBjBS,MAnBkBV,KAAIO,OAAO,CAC7B7F,KAAMsF,KAAIQ,SAASL,WAAWC,SAAS,CACrC,eAAgBN,GAChB,eAAgBA,KAElBW,cAAeV,GACfrD,OAAQqD,KAcRY,KAXiBX,KAAIO,OAAO,CAC5B7F,KAAMsF,KAAIQ,SAASL,WAAWC,SAAS,CACrC,eAAgBP,GAChB,eAAgBA,KAElBnD,OAAQqD,MCpBKa,GAZa,SAAClF,EAAYmF,GACvC,MAA4BC,mBAAS,IAArC,mBAAOlB,EAAP,KAAemB,EAAf,KAQA,OAPAC,qBAAU,WACR,IACQpB,EAAWT,GADJ8B,GAAkBvF,GACcmF,GAAvCjB,OAERmB,EAAUnB,KACT,CAACiB,EAAWnF,IAERkE,G,6BCiFMsB,GAtFa,WAA+B,IAAD,EAA7BC,EAA6B,uDAAd,GAAI7G,EAAU,uCACxD,EAAoCwG,oBAAS,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KACMC,EAAmBC,iBAAM,MAAMC,WAC/B3H,GAAK,UAAAS,EAAMmH,SAASpI,aAAf,eAAsBQ,KAAM,GAEjCyE,EAAWoD,eAGjB,EAAkCZ,mBAAS,2BACtCK,GADqC,IAExCtH,KACA8H,aAAcL,KAHhB,mBAAOT,EAAP,KAAkBe,EAAlB,KAMMhC,EAASgB,GAAoBC,EAAUnF,WAAYmF,GAEnDtF,IAAY1B,EAGlB,SAASgI,EAAoBnH,GAC3B,MAAO,CACLA,OACAC,SAAUmH,EACV1G,MAAOyF,EAAUnG,GACjBN,MAAOgH,EAAaxB,EAAOlF,GAAQ,IAGvC,IAAMqH,EAAY,uCAAG,WAAOC,GAAP,iBAAAzD,EAAA,yDACnByD,EAAMC,iBACNZ,GAAc,IACVzB,EAHe,oDAObvF,EACqB,UAAzBwG,EAAUnF,YAAmD,SAAzBmF,EAAUnF,WAC1CmF,EAAUnG,KACVmG,EAAUxG,MAEVe,EAAQ,CACZvB,GAAIA,GAAU4E,KAAKC,MACnBrE,QACAqC,OAAQwF,OAAOrB,EAAUnE,QACzBiF,aAAcd,EAAUc,aACxBjG,WAAYmF,EAAUnF,WACtB/B,cAAekH,EAAUlH,cACzB8G,cAAeyB,OAAOrB,EAAUJ,gBAnBf,UAuBblF,EAvBa,kCAwBToD,EAAUkC,EAAU9G,QAASqB,GAxBpB,QAyBfkD,EAASK,EAAUkC,EAAU9G,QAASqB,IACtCwD,EAAcI,0BA1BC,wBA4BfV,EAASE,EAASpD,IAClBwD,EAAcC,2BA7BC,0DAgCa,MAA1B,KAAMsD,SAASC,QACjBxD,EAAcM,sBAjCC,0DAAH,sDAsCZ4C,EAAe,SAACE,GACpB,MAAwBA,EAAM7G,OAAtBT,EAAR,EAAQA,KAAMU,EAAd,EAAcA,MACdwG,EAAa,2BAAKf,GAAN,kBAAkBnG,EAAOU,MAGvC,SAASiH,EAAiBrI,GACxB4H,EAAa,2BAAKf,GAAN,IAAiBc,aAAc3H,KAG7C,MAAO,CACL6G,YACAe,eACAE,eACAvG,YACAwG,eACAF,sBACAQ,mBACAzC,OAAQwB,EAAaxB,EAAS,KClEnB0C,I,OArBM,SAAC,GAKf,IAJLlH,EAII,EAJJA,MACAT,EAGI,EAHJA,SAGI,IAFJN,aAEI,MAFI,0DAEJ,MADJK,YACI,MADG,eACH,EACJ,OACE,sBAAKH,UAAU,2BAAf,UACGF,GAAS,uBAAOG,QAASE,EAAhB,SAAuBL,IACjC,cAAC,KAAD,CACEe,MAAOA,EACPT,SAAUA,EACV4H,iBAAiB,0KACjBC,OAAO,KACP9H,KAAK,eACL+H,yBAAuB,SCgHhBC,GA1HU,SAACpI,GACxB,IASA,EAQI4G,GAjBiB,CACnBrH,GAAI,GACJ6C,OAAQ,EACR+D,cAAe,EACf9E,YAAa,EACbgG,aAAc,GACdjG,WAAY,gBAWwBpB,GAPpCuG,EADF,EACEA,UACAe,EAFF,EAEEA,aACArG,EAHF,EAGEA,UACAwG,EAJF,EAIEA,aACAF,EALF,EAKEA,oBACAjC,EANF,EAMEA,OACAyC,EAPF,EAOEA,iBAGIM,EAAeC,cAAY,SAACvJ,GAAD,OAAWA,EAAMY,OAAOqG,gBACnD5G,EAAQkJ,cAAY,SAACvJ,GAAD,OACxBA,EAAMD,OAAOyJ,MAAK,SAACnJ,GAAD,OAAWA,EAAMG,KAAOgH,EAAUhH,SAGtD,EAA4CiH,mBAAS,CACnD1F,MAAO,GACPf,MAAO,KAFT,mBAAOyI,EAAP,KAAuBC,EAAvB,KAKMC,EAAUL,EAAa7I,KAAI,SAACmJ,GAAD,MAAmB,CAClD5I,MAAO4I,EAAa5I,MACpBe,MAAO6H,EAAapJ,OAetB,SAASqJ,EAAevJ,GACtB,GAAIgJ,EAAaQ,QAAUxJ,EAKzB,OAJ+BgJ,EAAaE,MAC1C,SAACO,GAAD,OAAWA,EAAMvJ,KAAOF,KADlByJ,MASZ,GAAI7H,GAAa7B,IAAUmH,EAAUxG,MAAO,CAC1C,IAAMsB,EAAcuH,EAAexJ,EAAMC,eACzCiI,EAAa,uCACRf,GACAnH,GAFO,IAGVK,QAASL,EAAMG,GACfA,GAAIH,EAAMC,cACVgC,iBAEFoH,EAAkB,CAAE1I,MAAOX,EAAMW,MAAOe,MAAO1B,EAAMC,gBAGvD,OACE,qBAAKY,UAAU,qBAAf,SACE,uBAAMA,UAAU,aAAa8I,SAAUtB,EAAvC,UACE,cAAC,EAAD,CACE1H,MAAM,wEACNM,SAxCgB,SAAC2I,GACvBP,EAAkBO,GAClB,IAAM3H,EAAcuH,EAAeI,EAAIlI,OACvCwG,GAAa,SAACf,GAAD,mBAAC,eACTA,GADQ,IAEXxG,MAAOiJ,EAAIjJ,MACXV,cAAe2J,EAAIlI,MACnBO,cACA8E,cAAe9E,QAiCXqH,QAASA,EACT5I,MAAOwF,EAAM,cACbxE,MAAO0H,EACPS,WAAYhI,IAGd,cAAC,EAAD,aACE1B,GAAG,6BACHQ,MAAM,oDACN6F,IAAI,KACA2B,EAAoB,mBAG1B,cAAC,EAAD,aACEhI,GAAG,2BACHQ,MAAM,8CACNmJ,UAAU,GACN3B,EAAoB,iBAG1B,cAAC,EAAD,aACEhI,GAAG,sBACHQ,MAAM,iCACN6F,IAAI,KACA2B,EAAoB,YAG1B,cAAC,EAAD,CACEhI,GAAG,0BACHQ,MAAM,wCACNK,KAAK,aACL8I,UAAU,EACVpI,MAAOyF,EAAUlF,YAAckF,EAAUnE,QAAU,IAGrD,cAAC,GAAD,CACEtB,MAAOyF,EAAUc,aACjBhH,SAAU0H,IAGZ,cAAC,EAAD,CAAW9G,UAAWA,U,oBCnHfkI,GATM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OACnC,OACE,qBACErH,QAASoH,EACTnJ,UAAS,wBAAmBoJ,EAAS,SAAW,O,qBCDhDC,GAAeC,IAAMC,cAAc,CAAEC,MAAO,GAAIC,YAAa,eAEtDC,GAAuB,SAAC3J,GACnC,MAA0B4J,KAAgB,QAAS,SAAnD,mBAAOH,EAAP,KAAcI,EAAd,KAEAnD,qBAAU,WACRoD,SAASC,gBAAgBC,aAAa,QAASP,KAC9C,CAACA,IAMJ,IAAMQ,EAAa,CAAER,QAAOC,YAL5B,WACEG,GAAS,SAACK,GACR,MAAgB,UAATA,EAAmB,OAAS,aAIvC,OACE,cAACZ,GAAaa,SAAd,CAAuBrJ,MAAOmJ,EAA9B,SACGjK,EAAMoK,YAKEd,MCTAe,GAXW,WACxB,IAAMC,EAAeC,qBAAWjB,IAEhC,OACE,cAAC,GAAD,CACEF,YAAakB,EAAaZ,YAC1BL,OAA+B,SAAvBiB,EAAab,SCQZe,GAbA,WACb,OACE,cAAC,KAAD,CAAYC,OAAO,KAAnB,SACE,eAACC,GAAA,EAAD,WACE,cAAC,IAAD,CAAMpJ,GAAG,YAAYqJ,MAAO,CAAEC,eAAgB,QAA9C,SACE,cAAC,KAAWC,MAAZ,+CAEF,cAAC,GAAD,U,SCSOC,OAnBf,WAA2D,IAAD,EAAtBC,EAAsB,uDAAf,GAAIC,EAAW,uCAClDC,EAAa,gBAEbC,EAAkB,CAACH,EAAK,IAC1BtH,EAAQ,EACR0H,EAAQ7I,IAAOyI,EAAK,GAAGxL,GAAI0L,GALyB,eAOrCF,GAPqC,IAOxD,2BAAyB,CAAC,IAAjBK,EAAgB,QACjBC,EAAO/I,IAAO8I,EAAO7L,GAAI0L,GAAYI,KAAKF,EAAO,QAEnDE,EAAO5H,EAAQuH,EAAY,IAC7BE,EAAgBI,QAAQF,GACxB3H,GAAS,IAZ2C,8BAgBxD,OAAOyH,GCLMK,OAVf,WAAmD,IAAhCpJ,EAA+B,uDAAxB8E,iBAAM,MAAMC,WAE9BsE,EAAkB,CAAEC,KAAM,EAAGC,MAAO,EAAGC,IAAK,GAClD,IAAK,IAAInI,KAAOrB,EACdA,EAAKqB,GAAOoI,OAAOzJ,EAAKqB,IAAMqI,SAASL,EAAgBhI,GAAM,KAG/D,OAAOsI,OAAOlL,OAAOuB,GAAM4J,KAAK,MCKnBC,OAZf,SAAmCC,GACjC,IAAMC,EAAYX,KAClB,OAAOU,EAAaE,QAClB,SAACjC,EAAMkC,GAGL,OAFAlC,EAAKkC,EAAQhL,YAAcgL,EAAQC,aACnCnC,EAAKoC,SAAWF,EAAQC,aACjBnC,IAET,CAAEoC,QAAS,EAAG/M,GAAI2M,KCFPK,OATf,SAAwBC,GACtB,IAAMC,SAAmBD,EAEzB,MAAkB,WAAdC,GAAwC,WAAdA,EACrBD,EAAIE,WAAW9K,QAAQ,wBAAyB,KAElD4K,G,oBCAMG,OANf,SAA0BC,EAAYC,GAAgC,IAAnBC,EAAkB,uDAAH,EAChE,OAAOlF,SACFiF,EAAcD,GAAcA,EAAc,KAAKG,QAAQD,KCE/CE,OAJf,SAA4B3E,EAAc9I,GACxC,OAAO8I,EAAaE,MAAK,SAACO,GAAD,OAAWA,EAAMvJ,KAAOA,MCwBnD,SAAS0N,GAAiBC,GACxB,IAAMC,EAjBR,SAAqBC,EAAY5J,GAAmB,IAAd6J,EAAa,uDAAH,EAC9C,OAAOC,KAAEnB,OACPiB,GACA,SAACG,EAAKnB,GAAN,OAAmBmB,EAAO3F,OAAOwE,EAAQ5I,MACzC6J,GAagBG,CAAYN,EAAY,UAEpCO,EAAuB1K,KAAK2K,KAXpC,SAAwBN,EAAYO,EAAMC,GAAoB,IAAdP,EAAa,uDAAH,EACxD,OAAOC,KAAEnB,OACPiB,GACA,SAACG,EAAKnB,GAAN,OAAmBmB,EAAO3F,OAAOwE,EAAQuB,GAAQvB,EAAQwB,MACzDP,GAQAQ,CAAeX,EAAY,gBAAiB,UAAYC,GAS1D,OANa,2BACRD,EAAW,IADH,IAEX9K,OAAQ+K,EACRhH,cAAesH,IAyCJK,OAnCf,SAA2BnO,EAAQuN,GACjC,IAAMa,EAAiBT,KAAEU,QAAQd,EAAY,iBAE7C,GAAiC,SAA7BA,EAAW,GAAG9L,WAChB,MAAO,CAAC8L,EAAYI,KAAEW,MAAMf,EAAY,WAG1C,GAAII,KAAEY,QAAQvO,GAAS,MAAO,CAAC,GAAI,GAEnC,IAAIwO,EAA2B,EAuB/B,MAAO,CArBcrC,OAAOlL,OAAOmN,GAAgBvO,KAAI,SAACmC,GACtD,IAAMyM,EAAkBnB,GAAiBtL,GACjCP,EAAegN,EAAfhN,WAEF0H,EAAQkE,GACZrN,EAAOyO,EAAgBhN,YACvBgN,EAAgB/O,eAtDtB,SAAqB+B,GACnB,MAAsB,UAAfA,EAAyB,iBAAmB,QAsD/CiN,CAAYjN,IAWd,OATAgN,EAAe,MAAYtF,EAC3BsF,EAAe,aAAmBA,EAAe,OAAatF,EAC9DsF,EAAe,cAAoBzB,GACjCyB,EAAe,cACftF,EACA,GAGFqF,GAA4BC,EAAe,OAAatF,EACjDsF,KAGaD,IC1DTG,OAZf,SAAyBpB,EAAYvN,GACnC,IAAMoL,EAAOuC,KAAEU,QAAQd,EAAY,cAEnC,OAAOpB,OAAOlL,OAAOmK,GAAMvL,KAAI,SAACV,GAC9B,IAAMsC,EAAatC,EAAO,GAAGsC,WAE7B,EAAqC0M,GAAkBnO,EAAQb,GAA/D,mBAEA,MAAO,CAAEsC,aAAY2J,KAFrB,KAEyCsB,aAFzC,UCcWkC,OArBf,SAA2BxD,GAAuB,IAAjByD,EAAgB,uDAAJ,GAC3C,OAAOzD,EAAKvL,KAAI,SAACiP,EAAMC,EAAOzL,GAC5B,IAAM0L,EAAO,eAAQF,GAEfG,EAAW3L,EAAIyL,EAAQ,GAE7B,IAAK,IAAIlL,KAAOiL,EAEd,IAAID,EAAUK,SAASrL,GAAvB,CAGA,IAAMsL,EACM,IAAVJ,EAAc,EAAI/B,GAAiBiC,EAASpL,GAAMiL,EAAKjL,IACnDuL,EAAmB,IAAVL,EAAc,EAAI3L,KAAKiM,IAAIJ,EAASpL,GAAOiL,EAAKjL,IAC/DmL,EAAQnL,GAAO,CAAEsL,gBAAeC,SAAQjO,MAAO2N,EAAKjL,IAGtD,OAAOmL,MCdIM,OAJf,SAA0BlE,EAAMmE,EAAaC,GAC3C,OAAOpE,EAAKqE,OAAOF,EAAc,GAAKC,EAAUD,EAAcC,ICmBhE,SAASE,GAAgBvO,GAGvB,OADEwO,SAASxO,KAAWyO,MAAMzO,IAAoB,OAAVA,GAA4B,IAAVA,IAAe,EAyB1D0O,OArBf,YAA6D,IAAtC1O,EAAqC,EAArCA,MAAOgO,EAA8B,EAA9BA,cAA8B,IAAfC,cAAe,MAAN,GAAM,EACpDU,EApBR,SAAoBX,GASlB,OARgBS,MAAMT,GAClB,KACAA,EAAgB,EAChBY,IACAZ,EAAgB,EAChBa,IACAC,IAaYC,CAAWf,GACrBgB,EACJhB,EAAgB,EAAI,QAAUA,EAAgB,EAAI,MAAQ,QAE5D,OACE,sBAAK7O,UAAU,eAAe0K,MAAO,CAAEmF,SAAvC,UACE,sBAAM7P,UAAU,SAAhB,SACGwP,GAAW,cAAC,IAAD,CAAiBjO,KAAMiO,MAErC,sBAAMxP,UAAU,QAAhB,SAAyBsM,GAAezL,KACvCuO,GAAgBP,IACf,uBAAM7O,UAAU,UAAhB,cAA4B6O,EAA5B,OAEDO,GAAgBN,IACf,sBAAM9O,UAAU,SAAhB,SAA0BsM,GAAewC,SCvClC,SAASgB,GAAcC,GAAoC,IAAnBC,EAAkB,uDAAJ,GACnE,OAAOD,EAAgBxQ,KAAI,YAAiB,IAAX0Q,EAAU,oBACzC,IAAK,IAAI1M,KAAO0M,EAEVD,EAAYpB,SAASrL,KAEzB0M,EAAI1M,GACF,cAAC,GAAD,CACE1C,MAAOoP,EAAI1M,GAAK1C,MAChBgO,cAAeoB,EAAI1M,GAAKsL,iBAI9B,OAAOoB,KChBX,IAAMC,GAAS,CAAE/P,KAAM,SAAUL,MAAO,4BAClCqQ,GAAY,CAAEhQ,KAAM,SAAUL,MAAO,kCACrCsQ,GAAgB,CAAEjQ,KAAM,cAMxBkQ,GAAmB,CAAElQ,KAAM,gBAAiBL,MAAO,qFAGnDwQ,GAAkB,CAAEnQ,KAAM,eAAgBL,MAAO,yCACjDyQ,GAAU,CAAEpQ,KAAM,QAASL,MAAO,2DAI3B0Q,GAAqB,CAChCN,GACAK,GACAJ,GAhB8B,CAC9BhQ,KAAM,gBACNL,MAAO,gGAKQ,CAAEK,KAAM,QAASL,MAAO,+CAYvCuQ,GACAC,GACAF,IA+BaK,GATC,CACdrK,KAjC8B,CAAC8J,GAAQK,GAASJ,GAAWC,IAkC3DM,QAXiC,CACjCR,GACA,CAAE/P,KAAM,KAAML,MAAO,kCACrB,CAAEK,KAAM,eAAgBL,MAAO,gDAC/B,CAAEK,KAAM,QAASL,MAAO,4BACxB,CAAEK,KAAM,OAAQL,MAAO,4BACvB,CAAEK,KAAM,UAAWL,MAAO,0CAM1BmF,QAtBiC,CACjCiL,GACAC,GAtBuB,CAAEhQ,KAAM,gBAAiBL,MAAO,qDAwBvDuQ,GAtBsB,CAAElQ,KAAM,eAAgBL,MAAO,2DAwBrDwQ,GACAF,IAgBArK,aAAcyK,GACdG,aAAcH,GACdrK,MAAOqK,ICoGMI,GA9IG,SAAC7Q,GACjB,MAA4CwG,mBAAS,CACnD1F,MAAO,GACPf,MAAO,KAFT,mBAAOyI,EAAP,KAAuBC,EAAvB,KAIA,EAA8BjC,mBAAS,IAAvC,mBAAOkC,EAAP,KAAgBoI,EAAhB,KAUA,EAQIlK,GAjBiB,CACnBxG,KAAM,GACN2Q,eAAgB,EAChBC,UAAW,EACX7K,cAAe,EACf/D,OAAQ,EACRiF,aAAc,GACdjG,WAAY,SAUwBpB,GAPpCuG,EADF,EACEA,UACAe,EAFF,EAEEA,aACArG,EAHF,EAGEA,UACAwG,EAJF,EAIEA,aACAnC,EALF,EAKEA,OACAiC,EANF,EAMEA,oBACAQ,EAPF,EAOEA,iBAGIM,EAAeC,cAAY,SAACvJ,GAAD,OAAWA,EAAMY,OAAOyG,SAczDM,qBAAU,WACR,IAAMgC,EAbR,SAA4B/I,GAC1B,IAAM+I,EAAU/I,EAAOH,KAAI,SAACyR,GAC1B,MAAO,CACLlR,MAAM,GAAD,OAAKkR,EAAO7Q,KAAZ,eAAuB6Q,EAAOC,UACnCpQ,MAAOmQ,EAAO1R,OAIlB,OAAOmJ,EAKSyI,CAAmB9I,GACnCyI,EAAWpI,KACV,CAACL,IAiBJ,IAAMjJ,EAAQkJ,cAAY,SAACvJ,GAAD,OACxBA,EAAMD,OAAOyJ,MAAK,SAACnJ,GAAD,OAAWA,EAAMG,KAAOgH,EAAUhH,SAGtD,GAAI0B,GAAa7B,GAASsJ,EAAQG,SAAWtC,EAAU9G,QAAS,CAC9D,IAAM4B,EAAc2L,GAAmB3E,EAAcjJ,EAAMC,eAE3DiI,EAAa,uCACRf,GACAnH,GAFO,IAGVgB,KAAMiB,EAAYjB,KAClBb,GAAIH,EAAMC,cACVI,QAASL,EAAMG,GACfyR,UAAW3P,EAAY2P,UACvBD,eAAgB1P,EAAY0P,kBAG9B,IAAME,EAASvI,EAAQG,OACnBH,EAAQH,MAAK,SAACS,GAAD,OAASA,EAAIlI,QAAU1B,EAAMC,iBAC1C,GACJoJ,EAAkBwI,GAGpB,OACE,qBAAKhR,UAAU,WAAf,SACE,sBAAMA,UAAU,aAAa8I,SAAUtB,EAAvC,SACE,sBAAKxH,UAAU,aAAf,UACE,cAAC,EAAD,CACEV,GAAG,gBACHQ,MAAM,0DACN2I,QAASA,EACT5H,MAAO0H,EACPnI,SA/CV,SAA8B2I,GAC5BP,EAAkBO,GAElB,IAAM+B,EAAOiC,GAAmB3E,EAAcW,EAAIlI,OAElDwG,EAAa,2BACRf,GADO,IAEVlH,cAAe0L,EAAKxL,GACpBa,KAAM2K,EAAK3K,KACX2Q,eAAgBhG,EAAKgG,eACrBC,UAAWjG,EAAKiG,UAChB7K,cAAe4E,EAAKgG,mBAqCd9H,WAAYhI,EACZnB,MAAOwF,EAAM,OAEf,cAAC,EAAD,CACE/F,GAAG,+BACHQ,MAAM,+FACNe,MAAOyF,EAAUwK,eACjBnL,IAAI,IACJsD,UAAU,IAEZ,cAAC,EAAD,CACE3J,GAAG,0BACHQ,MAAM,gEACNe,MAAOyF,EAAUyK,UACjBpL,IAAI,IACJsD,UAAU,IAEZ,cAAC,EAAD,aACE3J,GAAG,uBACHQ,MAAM,wHACN6F,IAAI,KACA2B,EAAoB,YAE1B,cAAC,EAAD,aACEhI,GAAG,8BACHQ,MAAM,uEACN6F,IAAI,KACA2B,EAAoB,mBAE1B,cAAC,EAAD,CACEhI,GAAG,sBACHQ,MAAM,+HACNe,MAAOyF,EAAUJ,cAAgBI,EAAUnE,OAC3CwD,IAAI,IACJxF,KAAK,qBACL8I,UAAU,IAGZ,cAAC,GAAD,CACEpI,MAAOyF,EAAUc,aACjBhH,SAAU0H,IAGZ,cAAC,EAAD,CAAW9G,UAAWA,YC3FjBmQ,GAhDE,SAACpR,GAChB,IAMA,EAMI4G,GAZiB,CACnBxG,KAAM,GACNgC,OAAQ,EACRhB,WAAY,QASwBpB,GALpCuG,EADF,EACEA,UACAe,EAFF,EAEEA,aACArG,EAHF,EAGEA,UACAwG,EAJF,EAIEA,aACAF,EALF,EAKEA,oBAGInI,EAAQkJ,cAAY,SAACvJ,GAAD,OACxBA,EAAMD,OAAOyJ,MAAK,SAACnJ,GAAD,OAAWA,EAAMG,KAAOgH,EAAUhH,SAYtD,OAVI0B,GAAa7B,IAAUmH,EAAUnG,MAIrC,SAAsBhB,GACpB,IAAMK,EAAU8G,EAAUhH,GAE1B+H,EAAa,2BAAKf,GAAN,IAAiBnG,KAAMhB,EAAMW,MAAON,WAAYL,IAN5DiS,CAAajS,GAUb,qBAAKa,UAAU,WAAf,SACE,uBAAMA,UAAU,aAAa8I,SAAUtB,EAAvC,UACE,cAAC,EAAD,aACE1H,MAAM,uEACNd,KAAK,OACLM,GAAG,4BACCgI,EAAoB,UAE1B,cAAC,EAAD,aACEhI,GAAG,sBACHQ,MAAM,wCACFwH,EAAoB,YAE1B,cAAC,EAAD,CAAWtG,UAAWA,UC7C9B,SAASqQ,GAAeC,EAAQrB,EAAKsB,GACnC,IAAIC,EAAcvB,EAAIqB,EAAOnR,MAE7B,GAAoB,WAAhBmR,EAAOnR,KACTqR,EAAcD,EAAW,OACpB,GAA4B,kBAAhBC,GAA6BlC,OAAOkC,IAEhD,QAAoBC,IAAhBD,EACT,OAAO,OAFPA,EAAclF,GAAe2D,EAAIqB,EAAOnR,OAK1C,OAAOqR,EA+BME,OA5Bf,SAAmB3R,GACjB,IAAQ0Q,EAAkB1Q,EAAlB0Q,QAAS3F,EAAS/K,EAAT+K,KAEjB,OACE,gCACGA,EAAKvL,KAAI,SAAC0Q,EAAKsB,GACd,OACE,6BACGd,EAAQlR,KAAI,SAAC+R,GACZ,OACE,oBAEE,UAASA,EAAOxR,MAChBE,UACkB,WAAhBsR,EAAOnR,KAAoB,aAAemR,EAAOnR,KAJrD,SAOGkR,GAAeC,EAAQrB,EAAKsB,IANxBD,EAAOnR,UAJX8P,EAAI3Q,UCTRqS,OAbf,YAAqC,IAAhB7R,EAAe,EAAfA,MAAOgL,EAAQ,EAARA,KAC1B,OACE,gCACE,+BACE,oBAAI8G,MAAM,MAAV,SAAiB9R,IAChBgL,EAAKvL,KAAI,SAACsS,EAAMpD,GAAP,OACR,6BAAiBoD,EAAKC,kBAAoB,IAAjCrD,YC0BJsD,OA9Bf,YAAsD,IAAjCtB,EAAgC,EAAhCA,QAASuB,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACrC,OACE,gCACE,6BACGxB,EAAQlR,KAAI,SAAC+R,GAAD,OACX,qBACEM,MAAM,MAENlH,MAAO,CAAEwH,OAAQ,WACjBnQ,QAAS,kBACPkQ,EAAW,CACTE,IAAqB,QAAhBH,EAAQG,IAAgB,OAAS,MACtCC,IAAKd,EAAOnR,QAPlB,UAWGmR,EAAOxR,MACR,cAAC,IAAD,CACEyB,KAAsB,QAAhByQ,EAAQG,IAAgBE,IAAWC,IACzC5H,MAAO,CACL6H,QAASP,EAAQI,MAAQd,EAAOnR,KAAO,eAAiB,YAbvDmR,EAAOnR,c,UCWTqS,GApBI,SAAC,GAElB,IAFqD,IAAjCjG,EAAgC,EAAhCA,IAAKnD,EAA2B,EAA3BA,OAAQqJ,EAAmB,EAAnBA,aAC7BC,EAAQ,GADwC,WAE3CzP,GACPyP,EAAMxP,KACJ,cAAC,KAAeyP,KAAhB,CACE5Q,QAAS,SAAC6Q,GAAD,OAAO3P,IAAMmG,GAAUqJ,GAAcG,EAAEhS,OAAOiS,OAEvDzJ,OAAQnG,IAAMmG,EAHhB,SAKGnG,GAHIA,KAJFA,EAAI,EAAGA,GAAKsJ,EAAKtJ,IAAM,EAAvBA,GAWT,OACE,cAAC,KAAD,CAAgBjD,UAAU,gCAA1B,SACG0S,KC6CQI,OAtDf,YAQI,IAPFhI,EAOC,EAPDA,KACA2F,EAMC,EANDA,QACAsC,EAKC,EALDA,WACAC,EAIC,EAJDA,cACA9D,EAGC,EAHDA,SACA+D,EAEC,EAFDA,cACAC,EACC,EADDA,eAEA,EAAuC3M,mBAAS,GAAhD,mBAAO0I,EAAP,KAAoBkE,EAApB,KACA,EAA8B5M,mBAAS,CAAE4L,IAAK,MAAOC,IAAK,SAA1D,mBAAOJ,EAAP,KAAgBC,EAAhB,KAGMmB,EAAa/F,KAAEgG,QACnBvI,EACA,CAACkH,EAAQI,IAAKc,GAAgBhU,OAAOoU,SAASxH,KAAK,KACnDkG,EAAQG,KAGJoB,EAAaN,EACfA,EAAcG,EAAY,CAAC,OAAOI,UAClCJ,EAGEK,EAAgBvE,EAClBF,GAAiBuE,EAAYtE,EAAaC,GAC1CqE,EAEJ,OACE,sBAAKvT,UAAU,gBAAf,UACE,wBAAOA,UAAU,SAAjB,UACE,cAAC,GAAD,CACEgS,QAASA,EACTC,WAAYA,EACZxB,QAASA,IAEX,cAAC,GAAD,CACEA,QAASA,EACT3F,KAAM2I,EACNT,cAAeA,IAEhBD,GACC,cAAC,GAAD,CAAWjT,MAAOiT,EAAU,MAAWjI,KAAMiI,EAAWjI,UAG5D,cAAC,GAAD,CACEyB,IAAKzJ,KAAK2K,KAAK3C,EAAKlC,OAASsG,GAC7BuD,aAAcU,EACd/J,OAAQ6F,Q,SC1CDyE,OAZf,YAAkE,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,YAAaC,EAAU,EAAVA,OACrD,OACE,eAAC,KAAD,CAAWH,KAAMA,EAAMI,OAAQF,EAA/B,UACE,cAAC,KAAUG,OAAX,CAAkBC,aAAW,EAA7B,SACE,cAAC,KAAUC,MAAX,UAAkBR,MAEpB,cAAC,KAAUS,KAAX,UAAiBP,IAChBE,GAAU,cAAC,KAAUM,OAAX,UAAmBN,QCwCrBO,GA9CW,SAACC,GACzB,MAA4ChO,oBAAS,GAArD,mBAAOiO,EAAP,KAAuBC,EAAvB,KACA,EAA0ClO,mBAAS,MAAnD,mBAAOmO,EAAP,KAAsBC,EAAtB,KAIMC,EAAoB,WACxBH,GAAkB,GAClBE,EAAiB,OAcbE,EACJ,qCACE,wBAAQ7U,UAAU,kBAAkB+B,QAASwS,EAA7C,4CAGA,wBAAQvU,UAAU,iBAAiB+B,QAAS6S,EAA5C,qDAgBJ,MAAO,CATL,cAAC,GAAD,CACEjB,MA/BU,6LAgCVG,YAAac,EACbhB,KAAMY,EACND,cAtByB,WAC3BA,EAAcG,GAEdE,KAoBEb,OAAQc,IA5BiB,SAAC1V,GAC5BsV,GAAkB,GAClBE,EAAiBxV,MC0DN2V,GAnEM,SAAC/U,GACpB,IAkB0B+K,EAlB1B,EAAuC/K,EAAMmH,SAASpI,MAA9CM,EAAR,EAAQA,cAAegC,EAAvB,EAAuBA,YACvB,EAAyCkT,IAQzC,SAAuB9F,GACrBzK,EAASD,EAAgB0K,EAAKlP,QAThC,mBAAOyV,EAAP,KAAkBC,EAAlB,KAEMjR,EAAWoD,eAEXzF,EAAY2G,cAAY,SAACvJ,GAAD,OAC5BA,EAAMD,OAAOK,QAAO,SAACC,GAAD,OAAWA,EAAMC,gBAAkBA,QA0CzD,OACE,gCACG2V,EACD,sBAAK/U,UAAU,eAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,sBAAMA,UAAU,QAAhB,SACG0B,EAAUkH,QAAUlH,EAAU,GAAG5B,QAEpC,sBAAME,UAAU,QAAhB,SAAyBsM,GAAelL,QAE1C,qBAAKpB,UAAU,qBAAf,SACE,cAAC,GAAD,CAAO8K,MAzCWA,EAyCYpJ,EAxC7BoJ,EAAKvL,KAAI,SAACiP,GACf,IAAMtM,EAAI,eAAQsM,EAAKpH,cAEjBgF,EAAeoC,EAAKrM,OAASf,EAC7B6T,EAAgBvI,GAAiB8B,EAAKtI,cAAe9E,GACrDgG,EAXV,SAAuBlF,GACrB,OAAOA,EAAK4J,KAAK,KAUMoJ,CAAcrJ,OAAOlL,OAAOuB,IAC3CiT,EACJ,cAAC,EAAD,CAEErT,aAAc,kBAAMkT,EAAoBxG,KAF1C,UACUA,EAAKlP,GADf,eAKI8V,EACJ,cAAC,EAAD,CAEE1T,UAAW,CAAEpC,GAAIkP,EAAKlP,GAAI6B,WAAYqN,EAAKrN,aAF7C,UACUqN,EAAKlP,GADf,aAMF,OAAO,2BACFkP,GADL,IAEEpC,eACA6I,gBACA7N,eACAiO,WAAY,CAACF,EAAWC,SAgBoB3E,QAASA,GAAQxL,mB,mBC/DxD,UAAMqQ,KAAN,YCEb,IAsDeC,GAtDQ,SAAC,GAAoD,IAAlDpL,EAAiD,EAAjDA,SAAUwJ,EAAuC,EAAvCA,MAAO6B,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MACvDC,EAASC,iBAAO,MAChBC,EAAYD,iBAAO,MAazB,OACE,sBAAK5V,UAAS,0BAAqB0V,EAAQ,QAAU,IAArD,UACE,sBACEI,IAAKH,EACL3V,UAAU,wBACV+B,QAhBN,WACE,IAAI2T,EAAJ,CACAC,EAAOxJ,QAAQ4J,UAAUC,OAAO,UAChC,IAAMC,EAAUJ,EAAU1J,QACtB8J,EAAQvL,MAAMwL,UAChBD,EAAQvL,MAAMwL,UAAY,KAE1BD,EAAQvL,MAAMwL,UAAYD,EAAQE,aAAe,OAMjD,UAKE,sBAAKnW,UAAU,wBAAf,UACE,sBAAMA,UAAU,QAAhB,SAAyB2T,KACvB+B,GACA,qBAAK1V,UAAU,aAAf,SACE,cAAC,GAAD,CACEa,MAAK,OAAE4U,QAAF,IAAEA,OAAF,EAAEA,EAAW5U,MAClBgO,cAAa,OAAE4G,QAAF,IAAEA,OAAF,EAAEA,EAAW5G,cAC1BC,OAAM,OAAE2G,QAAF,IAAEA,OAAF,EAAEA,EAAW3G,cAK3B,sBAAK9O,UAAU,UAAf,UACGwV,GACC,cAAC,IAAD,CAAMnU,GAAImU,EAASxV,UAAU,UAA7B,SACE,cAAC,IAAD,CAAiBuB,KAAM6U,QAG3B,sBAAMpW,UAAU,cAAhB,SACE,cAAC,IAAD,CAAiBuB,KAAMmO,eAI3BgG,GACA,qBAAK1V,UAAU,QAAQ8V,IAAKD,EAA5B,SACG1L,QClCIkM,GAlBS,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,kBACzB,OACE,sBAAKtW,UAAU,0BAAf,UACE,uBAAOC,QAAQ,oBAAf,qEACA,yBACEE,KAAK,oBACLC,SAAU,SAACwS,GAAD,OAAO0D,EAAkB1D,EAAEhS,OAAOC,QAC5CvB,GAAG,oBAHL,UAKE,wBAAQuB,MAAM,IAAd,kDACA,wBAAQA,MAAM,IAAd,4CACA,wBAAQA,MAAM,KAAd,kDACA,wBAAQA,MAAM,MAAd,yDCIO0V,OAjBf,YAAmD,IAAvBC,EAAsB,EAAtBA,mBAC1B,OACE,sBAAKxW,UAAU,qBAAf,UACE,uBAAOC,QAAQ,sBAAf,gGACA,yBACEE,KAAK,sBACLC,SAAU,SAACwS,GAAD,OAAO4D,EAAmB5D,EAAEhS,OAAOC,QAC7CvB,GAAG,sBAHL,UAKE,wBAAQuB,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,uBCsFO4V,GAxEU,SAAC,GAAsB,IAApBzK,EAAmB,EAAnBA,aAC1B,EAAkCzF,mBAAS,GAA3C,mBAAOwE,EAAP,KAAkB2L,EAAlB,KACM/W,EAAgB0I,cAAY,SAACvJ,GAAD,OAAWA,EAAMa,iBACnD,EAAgC4G,mBAAS,IAAzC,mBAAO2I,EAAP,KAAiByH,EAAjB,KACMvD,EAAa/F,KAAEuJ,OAAOjX,EAAe,MAAM6T,UAE3CzP,EAAWoD,eAYjBV,qBAAU,WAAO,IAAD,EACd,GAVF,SAA+BuF,GAK7B,KAJ4B,OAACA,QAAD,IAACA,OAAD,EAACA,EAAc6K,MACzC,SAACrI,GAAD,OAAWA,EAAK1D,KAAKlC,WAGE,OAAO,EAK3BkO,CAAsB9K,GAA3B,CAIA,IvCQgC+K,EuCR5BC,EAAO,YAAOrX,GACZsX,EAAoBlL,GAA0BC,GAIpD,GAAIkL,KAAKC,UAAU/D,EAAW,MAAQ8D,KAAKC,UAAUF,IAIjD,UAAA7D,EAAW,UAAX,eAAe9T,MAAO2X,EAAkB3X,GAE1C0X,EAAQA,EAAQpO,OAAS,GAAzB,eAAmCqO,GAEnCD,EAAO,sBAAOA,GAAP,CAAgBC,IAGzBlT,GvCRgCgT,EuCQHC,EvCRE,uCAAsB,WAAOjT,GAAP,SAAAC,EAAA,sDACvDD,EAAS,CAAE/E,KAAMC,EAAwBI,QAAS0X,IADK,2CAAtB,2DuCS9B,CAAC/K,EAAcrM,EAAeoE,EAAUqP,IAE3C,IAAMgE,EACJrM,EAAY,EACRF,GAA2B,YAAIuI,GAAarI,GAC5C,YAAIqI,GAAYI,UAChBzD,EAAkBzB,GAAkB8I,EAAgB,CAAC,OACrDC,EAAiBtH,EAAgBA,EAAgBnH,OAAS,GAEhE,OACE,qBAAK5I,UAAU,eAAf,SACE,eAAC,GAAD,CACE2T,MAAM,wCACN+B,OAAQ/V,EAAciJ,OACtB6M,UAAS,OAAE4B,QAAF,IAAEA,OAAF,EAAEA,EAAgBhL,QAH7B,UAKE,sBAAKrM,UAAU,aAAf,UACE,cAAC,GAAD,CAAiBsW,kBAAmBI,IACpC,cAAC,GAAD,CAAkBF,mBAAoBG,OAExC,cAAC,GAAD,CACElG,QAASA,GAAQC,QACjB5F,KAAMiF,EACNb,SAAUA,EACV+D,cAAenD,GACfoD,eAAgB,CAAC,iBCnBZoE,OAjEf,YAA6E,IAAtDzY,EAAqD,EAArDA,OAAQuJ,EAA6C,EAA7CA,aAAc4K,EAA+B,EAA/BA,cAAe5G,EAAgB,EAAhBA,aAClDjL,EAAqBtC,EAArBsC,WAAY2J,EAASjM,EAATiM,KAEdyM,EAA0B,UAAfpW,EAAyB,iBAAmB,QASvDwS,EAPS,CACb5N,aAAc,+CACd4K,aAAc,+CACdxK,MAAO,2BACPC,KAAM,4BAGajF,GAEfsP,EAAU+G,GAAWrW,GAGrBsW,EAAa3M,EAAKvL,KAAI,YAAkB,IAAZiP,EAAW,oBAOvCkJ,EAAU,CALZ,cAAC,EAAD,CAEE5V,aAAc,kBAAMkR,EAAcxE,KAFpC,UACUA,EAAKpP,cADf,gBAOF,GAAmB,SAAf+B,EACFuW,EAAQxU,KACN,cAAC,EAAD,CAEExB,UAAW,CAAEpC,GAAIkP,EAAKlP,GAAI6B,WAAYqN,EAAKrN,aAF7C,UACUqN,EAAKpP,cADf,kBAKG,CACL,IAAMyJ,EAAQT,EAAaE,MAAK,SAACqP,GAAD,OAAOA,EAAErY,KAAOkP,EAAKpP,iBAErDsY,EAAQxU,KACN,cAAC,EAAD,CAEEhC,aAAc,CACZ9B,cAAeoP,EAAKpP,cACpB+B,WAAYqN,EAAKrN,WACjBC,YAAayH,EAAM0O,KALvB,UACU/I,EAAKpP,cADf,aAaJ,OAFAoP,EAAI,WAAiBkJ,EAEdlJ,KAGT,OACE,cAAC,GAAD,CACEgH,QAAO,eAAUrU,GACjBsU,UAAWrJ,EAAajL,GACxBwS,MAAOA,EACP+B,OAAQ+B,EAAW7O,OAJrB,SAMG6O,EAAW7O,QAAU,cAAC,GAAD,CAAOkC,KAAM2M,EAAYhH,QAASA,OCzB/CmH,GArCU,SAAC,GAKnB,IAJL5L,EAII,EAJJA,aACAgJ,EAGI,EAHJA,oBACAtV,EAEI,EAFJA,OACAC,EACI,EADJA,cAEMkY,EACJlY,EAAciJ,QACd0F,GAAkB3O,EAAe,CAAC,OAAOwP,OAAO,GAAG,GAE/C2I,EAAsBzK,KAAEU,QAAQ/B,EAAc,cAGpD,OACE,qBAAKhM,UAAU,SAAf,SAHmB,CAAC,eAAgB,QAAS,QAI7BT,KAAI,SAAC4B,GACjB,IAAMtC,EAAUiZ,EAAoB3W,IAClC2W,EAAoB3W,GAAY,IAAO,CACvCA,aACA2J,KAAM,GACNsB,aAAc,GAGhB,OACE,cAAC,GAAD,CACEhE,aAAc1I,EAAOb,EAAOsC,YAC5BtC,OAAQA,EACRuN,aAAcyL,EACd7E,cAAegC,GACVnW,EAAOsC,kB,6EC9BlB4W,GAASjV,KAAKkV,GAAK,IACnBC,GAAwB,SAAC,GAQxB,IAPLC,EAOI,EAPJA,GACAC,EAMI,EANJA,GACAC,EAKI,EALJA,SACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,QAGMC,GADF,EADJ/J,MAEe4J,EAA4C,IAA7BC,EAAcD,IACtCzV,EAAIsV,EAAKM,EAAS1V,KAAK2V,KAAKL,EAAWL,IACvCW,EAAIP,EAAKK,EAAS1V,KAAK6V,KAAKP,EAAWL,IAE7C,OACE,sBACEnV,EAAGA,EACH8V,EAAGA,EACHE,KAAK,QACLC,WAAYjW,EAAIsV,EAAK,QAAU,MAC/BY,iBAAiB,UALnB,oBAOiB,IAAVP,GAAezL,QAAQ,GAP9B,QAYEiM,G,gKACJ,WACE,IAAMC,EAAS,CAAEjT,aAAc,8CAAYK,KAAM,2BAAQD,MAAO,4BAE1D8S,EADOC,KAAKnZ,MAAM+K,KACEvL,KAAI,SAACiP,GAAD,MAAW,CACvCrO,KAAM6Y,EAAOxK,EAAKrN,YAClBA,WAAYqN,EAAKrN,WACjBN,MAAO2N,EAAKpC,iBAER+M,EAAS,CAAEpT,aAAc,OAAQK,KAAM,SAAUD,MAAO,SAC9D,OACE,qBAAKnG,UAAU,eAAf,SACE,eAACoZ,GAAA,EAAD,CAAUC,MAAO,IAAKC,OAAQ,IAA9B,UACE,cAACC,GAAA,EAAD,CACEzO,KAAMmO,EACNO,QAAQ,QACRC,QAAQ,aACRvB,GAAG,MACHC,GAAG,MACHrY,MAAOmY,GACPyB,WAAW,EACXpB,YAAa,IACbM,KAAK,UATP,SAWGK,EAAa1Z,KAAI,SAACoa,EAAOlL,GAAR,OAChB,cAACmL,GAAA,EAAD,CAAkBhB,KAAMO,EAAOQ,EAAMxY,aAA1BsN,QAGf,cAACoL,GAAA,EAAD,CACEC,UAAW,SAACjZ,EAAO8Y,EAAOlL,GAAf,OACT,sBAAM/D,MAAO,CAAEqP,YAAa,QAA5B,SAAuClZ,KAEzCwY,MAAO,IACPW,aAAc,CACZC,IAAK,GACLC,KAAM,EACNC,MAAO,EACPC,WAAY,OACZL,YAAa,OACbM,gBAAiB,UACjBC,OAAQ,oBACRC,aAAc,EACdC,WAAY,mB,GA1CDlR,IAAMmR,eAmDhB1B,M,4DCwBA2B,GA7FM,SAAC,GAAc,IAAZ5P,EAAW,EAAXA,KACtB,EAAgDvE,mBAAS,CAAC,YAA1D,mBAAOoU,EAAP,KAAyBC,EAAzB,KAEMlW,EAAO,CACXyB,MAAO,CAAE0J,MAAO,UAAW/P,MAAO,2BAAQsJ,QAAQ,GAClDhD,KAAM,CAAEyJ,MAAO,UAAW/P,MAAO,2BAAQsJ,QAAQ,GACjDrD,aAAc,CAAE8J,MAAO,UAAW/P,MAAO,+CAAasJ,QAAQ,GAC9DiD,QAAS,CAAEwD,MAAO,UAAW/P,MAAO,wCAAWsJ,QAAQ,IAGnDyR,EAAgB/P,EAAKvL,KAAI,SAACiP,GAC9B,MAAO,CACLrO,KAAMqO,EAAKlP,GACX+M,QAASmC,EAAKnC,QACdtG,aAAcyI,EAAKzI,aACnBI,MAAOqI,EAAKrI,MACZC,KAAMoI,EAAKpI,SAwCf,OACE,qBAAKpG,UAAU,eAAf,SACE,eAAC8a,GAAA,EAAD,CACE9a,UAAU,QACV0K,MAAO,CAAEqQ,OAAQ,UACjB1B,MAAO,IACPC,OAAQ,IACRxO,KAAM+P,EACNE,OAAQ,CAAEd,IAAK,EAAGE,MAAO,GAAID,KAAM,GAAIc,OAAQ,GANjD,UAQE,cAACnB,GAAA,EAAD,CAAQ5D,QAtCiB,WAC7B,OACE,qBAAKjW,UAAU,oBAAf,SACG6L,OAAOoP,QAAQvW,GAAMnF,KAAI,YAAuB,IAAD,mBAApBia,EAAoB,KAAX3Y,EAAW,KACtCf,EAAiBe,EAAjBf,MAAO+P,EAAUhP,EAAVgP,MAITnF,EAAQ,CACZ6H,QAAS,eACT1C,MALkB8K,EAAiB/L,SAAS4K,GAC1C3J,EACA,OAIFqC,OAAQ,UACRkI,WAAY,QAEd,OACE,sBAEE1P,MAAOA,EACP3I,QAAS,kBA1BD,SAACyX,GACfmB,EAAiB/L,SAAS4K,GAC5BoB,EAAoBD,EAAiBzb,QAAO,SAACsP,GAAD,OAAUA,IAASgL,MAE/DoB,EAAoB,GAAD,mBAAKD,GAAL,CAAuBnB,KAsBnBrQ,CAAYqQ,IAH7B,SAKG1Z,GAJI0Z,WAuBX,cAAC0B,GAAA,EAAD,CAAeC,gBAAgB,QAC/B,cAACC,GAAA,EAAD,CAAO1Q,MAAO,CAAE2Q,SAAU,QAAU7B,QAAQ,SAC5C,cAAC8B,GAAA,EAAD,CACE5Q,MAAO,CAAE2Q,SAAU,QACnBE,cAAe,SAAC1a,GAAD,OAAWyL,GAAezL,IACzC2a,OAAQ,CAAC,oBAAqB,wBAEhC,cAACC,GAAA,EAAD,CAAS3B,UAAW,SAACjZ,GAAD,OAAWyL,GAAezL,MAE7C8Z,EAAiBpb,KAAI,SAACmc,GACrB,MAAyBhX,EAAKgX,GAAtB5b,EAAR,EAAQA,MAAO+P,EAAf,EAAeA,MACf,OACE,cAAC8L,GAAA,EAAD,CAEE3c,KAAK,WACLwa,QAASkC,EACTvb,KAAML,EACN8b,OAAQ/L,GAJH6L,YCzFbG,GAAoB,SAAC,GAAiB,IAAfzW,EAAc,EAAdA,QAC3B,OACE,qBAAKpF,UAAU,sBAAf,SACE,mBAAGA,UAAU,UAAb,SAAwBoF,OA8Bf0W,GAzBA,SAAC,GAAmC,IAAjCnc,EAAgC,EAAhCA,cAAesN,EAAiB,EAAjBA,WAMzB8O,EAAsBpc,EAAciJ,OACxC,cAAC,GAAD,CAAckC,KAAMnL,IAEpB,cAAC,GAAD,CAAmByF,QAPnB,uPAUI4W,EAAoB/O,EAAWrE,OACnC,cAAC,GAAD,CAAYkC,KAAMmC,IAElB,cAAC,GAAD,CAAmB7H,QAXU,yNAa/B,OACE,sBAAKpF,UAAU,SAAf,UACG+b,EACAC,MCqCQC,GAnDU,WACvB,MAAwC1V,mBAAS,IAAjD,mBAAOyF,EAAP,KAAqBkQ,EAArB,KACA,EAAyC5H,IAazC,SAAuBI,GACY,SAA7BA,EAAcvT,WAChB4C,EAASD,EAAgB4Q,EAAcpV,KAEvCyE,E7CC+B,SAAC2Q,GAAD,8CAAmB,WAAO3Q,GAAP,SAAAC,EAAA,sDACtDD,EAAS,CACP/E,KAAMC,EACNI,QAASqV,IAH2C,2CAAnB,sD6CDtByH,CAAsBzH,OAjBnC,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMjR,EAAWoD,eACXtI,EAASwJ,cAAY,SAACvJ,GAAD,OAAWA,EAAMD,UACtCa,EAAS2I,cAAY,SAACvJ,GAAD,OAAWA,EAAMY,UACtCC,EAAgB0I,cAAY,SAACvJ,GAAD,OAAWA,EAAMa,iBAyBnD,OAvBA8G,qBAAU,WACR1C,E7CpBuB,uCAAM,WAAOA,GAAP,SAAAC,EAAA,sDAC/BD,EAAS,CAAE/E,KAAMC,EAAsBI,QAASR,IADjB,2CAAN,uD6CqBvBkF,E7CjBuB,uCAAM,WAAOA,GAAP,iBAAAC,EAAA,6DACzB+B,EAAe+E,EAAK6F,cAAgB,GADX,SAEV7F,EAAK3E,MAFK,gDAEK,GAFL,OAEzBA,EAFyB,KAI/BpC,EAAS,CACP/E,KAAMC,EACNI,QAAS,CAAE0G,eAAcI,WANI,2CAAN,uD6CkBvBpC,E7CR8B,uCAAM,WAAOA,GAAP,eAAAC,EAAA,sDAQhCoY,EAAc3Y,EAAmB,GAPX,CAC1B4I,QAAS,IACT/M,GAAI,aACJ8G,KAAM,IACNL,aAAc,IACdI,MAAO,MAITpC,EAAS,CACP/E,KAAMC,EACNI,QAAS+c,IAZ2B,2CAAN,yD6CS7B,CAACrY,IAWJ0C,qBAAU,WACR,IAAMuF,EAAeqC,GAAgBxP,EAAQa,GAEzCmM,OAAOlL,OAAOjB,GAAQkJ,QACxBsT,EAAgBlQ,KAEjB,CAACtM,EAAQb,IAERgN,OAAOlL,OAAOjB,GAAQkJ,OAEtB,sBAAK5I,UAAU,oBAAf,UACG+U,EACD,cAAC,GAAD,CACE/I,aAAcA,EACdgJ,oBAAqBA,EACrBrV,cAAeA,EACfD,OAAQA,IAEV,cAAC,GAAD,CAAkBsM,aAAcA,IAChC,cAAC,GAAD,CAAQrM,cAAeA,EAAesN,WAAYjB,OAI/C,MC/CIqI,GAjBA,WACb,IAAMgI,EACJ,mBACEC,IAAI,aACJ1b,OAAO,SACP2b,KAAK,0CAHP,mGAQF,OACE,wBAAQvc,UAAU,SAAlB,SACE,oBAAGA,UAAU,cAAb,wFAA2Cqc,EAA3C,UCeSG,GAxBM,WACnB,MAA4CjW,oBAAS,GAArD,mBAAOiO,EAAP,KAAuBC,EAAvB,KACMZ,EACJ,+BACE,qUACA,gYAGA,gYAMJ,OACE,cAAC,GAAD,CACED,KAAMY,EACNV,YAAa,kBAAMW,GAAkB,IACrCd,MAAO,2BACPE,KAAMA,K,OCUG4I,OAnBf,WACE,OACE,sBAAKzc,UAAU,MAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,eAAC,IAAD,WAEE,cAAC,IAAD,CAAO0c,KAAK,YAAYC,UAAWV,KACnC,cAAC,IAAD,CAAOS,KAAK,mBAAmBC,UAAW7H,KAC1C,cAAC,IAAD,CAAO8H,OAAK,EAACF,KAAK,qBAAqBC,UAAWxU,KAClD,cAAC,IAAD,CAAOyU,OAAK,EAACF,KAAK,aAAaC,UAAW/L,KAC1C,cAAC,IAAD,CAAOgM,OAAK,EAACF,KAAK,YAAYC,UAAWxL,QAE3C,cAAC,GAAD,IACA,cAAC,IAAD,QCbA0L,I,OCdS,I,ODcDC,YAAe,CAAEC,QAASC,EAAUC,WAAY,CAACC,QAE/DC,IAASC,OACP,cAAC,KAAD,CAAUP,MAAOA,GAAjB,SACE,cAAC,GAAD,UACE,cAAC,IAAD,UACE,cAAC,GAAD,UAINhT,SAASwT,eAAe,W","file":"static/js/main.f90ff268.chunk.js","sourcesContent":["// assets action types\nexport const FETCH_ASSETS = \"FETCH_ASSETS\";\nexport const ADD_ASSET = \"ADD_ASSET\";\nexport const DELETE_ASSET_BY_ID = \"DELETE_ASSET\";\nexport const DELETE_ASSET_BY_SUBCLASS = \"DELETE_ASSET_BY_SUBCLASS\";\nexport const EDIT_ASSET = \"EDIT_ASSET\";\n\n// prices action types\nexport const FETCH_PRICES = \"FETCH_PRICES\";\n\n// history action types\nexport const FETCH_HISTORY = \"FETCH_HISTORY\";\nexport const UPDATE_HISTORY = \"UPDATE_HISTORY\";\n","import { combineReducers } from \"redux\";\nimport * as actions from \"../actions/actionTypes\";\n\nconst assets = (state = [], action) => {\n  switch (action.type) {\n    case actions.FETCH_ASSETS:\n      return state;\n    case actions.DELETE_ASSET_BY_SUBCLASS:\n      return state.filter(\n        (asset) => asset.assetSubClass !== action.payload.assetSubClass\n      );\n    case actions.DELETE_ASSET_BY_ID:\n      return state.filter((asset) => asset.id !== action.payload);\n    case actions.EDIT_ASSET:\n      //TODO: better solution?\n      return state.map((asset) => {\n        if (asset.id === action.payload.assetId) {\n          return action.payload.newValue;\n        }\n        return asset;\n      });\n\n    case actions.ADD_ASSET:\n      return [...state, action.payload];\n    default:\n      return state;\n  }\n};\n\nconst prices = (state = {}, action) => {\n  switch (action.type) {\n    case actions.FETCH_PRICES:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst historyRecord = (state = [], action) => {\n  switch (action.type) {\n    case actions.FETCH_HISTORY:\n      return action.payload;\n    case actions.UPDATE_HISTORY:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({ assets, prices, historyRecord });\n","import React from \"react\";\nimport Select from \"react-select\";\n\nconst SelectForm = ({ error, label, id, ...props }) => {\n  return (\n    <div className=\"form-group\">\n      {label && <label htmlFor={id}>{label}</label>}\n      <Select id={id} {...props} />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default SelectForm;\n","import React from \"react\";\n\nimport NumberFormat from \"react-number-format\";\n\nconst Input = ({\n  label,\n  name,\n  error,\n  id,\n  type = \"number\",\n  onChange = () => {},\n  ...rest\n}) => {\n  const mutualProps = { id, className: \"form-control\", name, ...rest };\n\n  return (\n    <div className=\"form-group\">\n      {label && <label htmlFor={id}>{label}</label>}\n      {type === \"number\" ? (\n        <NumberFormat\n          thousandSeparator={true}\n          isNumericString={true}\n          autoComplete=\"off\"\n          onValueChange={(values) =>\n            onChange({ target: { name, value: values.floatValue } })\n          }\n          {...mutualProps}\n        />\n      ) : (\n        <input\n          type={type}\n          autoComplete=\"off\"\n          onChange={onChange}\n          {...mutualProps}\n        />\n      )}\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEye, faEdit, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nexport const SubmitBtn = ({ editState }) => {\n  const addText = \"افزودن\";\n  const editText = \"ویرایش\";\n  return (\n    <button\n      type=\"submit\"\n      className={`btn submit btn-${editState ? \"success\" : \"primary\"}`}\n    >\n      {editState ? editText : addText}\n    </button>\n  );\n};\n\nexport const EyeBtn = ({ requiredInfo }) => {\n  const { assetSubClass, assetClass, marketPrice } = requiredInfo;\n  return (\n    <Link\n      to={{\n        pathname: `assets/details/`,\n        state: { assetSubClass, assetClass, marketPrice },\n      }}\n      className=\"btn btn-success\"\n    >\n      <FontAwesomeIcon icon={faEye} />\n    </Link>\n  );\n};\n\nexport const EditBtn = ({ assetData }) => {\n  const { id, assetClass } = assetData;\n  return (\n    <Link\n      replace={true}\n      to={{ pathname: `/add/${assetClass}`, state: { id } }}\n      className=\"btn btn-success\"\n    >\n      <FontAwesomeIcon icon={faEdit} />\n    </Link>\n  );\n};\n\nexport const DeleteBtn = ({ deleteMethod }) => {\n  return (\n    <button onClick={deleteMethod} className=\"btn btn-danger\">\n      <FontAwesomeIcon icon={faTrashAlt} />\n    </button>\n  );\n};\n","// This script builds fake history and adds them to database file\n// You should provide last recent history data and it will\n// build previous fake history data based on it and by random efficiency\n\nimport moment from \"moment-jalali\";\n\n// returns array with x random numbers between 0 and 1\nfunction getRandomEfficiency(x) {\n  const minusOrPositive = Math.random() > 0.5 ? 1 : -1;\n  const arr = [];\n  for (let i = 0; i < x; i++) {\n    arr.push(minusOrPositive * Math.random());\n  }\n  return arr;\n}\n\nfunction getNewHistoryObject(lastHistoryObject, randomNumber) {\n  return Math.round(\n    lastHistoryObject - (lastHistoryObject * randomNumber) / 100\n  );\n}\n\nfunction dateOperation(date, amount, format = \"jYYYY-jMM-jDD\") {\n  return moment(date, format).subtract(amount, \"day\").format(format);\n}\n\nfunction getNewHistoryData(previous) {\n  const randoms = getRandomEfficiency(3);\n  const newHistory = { ...previous };\n  let randomCounter = 0;\n  let newOverall = 0;\n\n  for (let key in previous) {\n    if (key === \"overall\") {\n      continue;\n    } else if (key === \"id\") {\n      newHistory[key] = dateOperation(newHistory[key], 1);\n\n      continue;\n    } else {\n      newHistory[key] = getNewHistoryObject(\n        newHistory[key],\n        randoms[randomCounter]\n      );\n    }\n\n    newOverall += newHistory[key];\n    randomCounter += 1;\n  }\n\n  newHistory[\"overall\"] = newOverall;\n\n  return newHistory;\n}\n\nfunction fakeHistoryBuilder(historyLength, lastProvidedHistory) {\n  let i = 0;\n\n  const allHistoryData = [{ ...lastProvidedHistory }];\n\n  let lastHistory = lastProvidedHistory;\n\n  while (i < historyLength) {\n    lastHistory = getNewHistoryData(lastHistory);\n    allHistoryData.push(lastHistory);\n    i += 1;\n  }\n\n  return allHistoryData;\n}\n\nexport default fakeHistoryBuilder;\n","import data from \"../data.json\";\nimport * as actions from \"./actionTypes\";\n\nimport fakeHistoryBuilder from \"../utils/fakeHistoryBuilder\";\n\nconst assets = [];\n\nexport const fetchAssets = () => async (dispatch) => {\n  dispatch({ type: actions.FETCH_ASSETS, payload: assets });\n};\n\nexport const fetchPrices = () => async (dispatch) => {\n  const goldCurrency = data.goldcurrency || [];\n  const stock = (await data.stock) || [];\n\n  dispatch({\n    type: actions.FETCH_PRICES,\n    payload: { goldCurrency, stock },\n  });\n};\n\nexport const fetchHistoryRecord = () => async (dispatch) => {\n  const lastProvidedHistory = {\n    overall: 1000000000,\n    id: \"1401-02-31\",\n    cash: 300000000,\n    goldCurrency: 400000000,\n    stock: 300000000,\n  };\n  const fakeHistory = fakeHistoryBuilder(10, lastProvidedHistory);\n\n  dispatch({\n    type: actions.FETCH_HISTORY,\n    payload: fakeHistory,\n  });\n};\n\nexport const deleteAssetBySubClass = (toDeleteAsset) => async (dispatch) => {\n  dispatch({\n    type: actions.DELETE_ASSET_BY_SUBCLASS,\n    payload: toDeleteAsset,\n  });\n};\n\nexport const deleteAssetById = (id) => async (dispatch) => {\n  dispatch({ type: actions.DELETE_ASSET_BY_ID, payload: id });\n};\n\nexport const addAsset = (asset) => async (dispatch) => {\n  dispatch({ type: actions.ADD_ASSET, payload: { ...asset, id: Date.now() } });\n};\n\nexport const editAsset = (assetId, newValue) => async (dispatch) => {\n  dispatch({ type: actions.EDIT_ASSET, payload: { assetId, newValue } });\n};\n\nexport const updateHistoryRecord = (newHistoryRecord) => async (dispatch) => {\n  dispatch({ type: actions.UPDATE_HISTORY, payload: newHistoryRecord });\n};\n","import { toast } from \"react-toastify\";\n\nconst successfulAdditionNotify = () =>\n  toast.success(\"آیتم انتخابی با موفقیت اضافه شد\");\n\nconst successfulEditionNotify = () => toast.info(\"ویرایش با موفقیت انجام شد\");\n\nconst duplicateAssetError = () => toast.error(\"این دارایی تکراری است\");\n\nconst notifications = {\n  successfulAdditionNotify,\n  successfulEditionNotify,\n  duplicateAssetError,\n};\n\nexport default notifications;\n","function formValidationCheck(schema, state) {\n  const result = schema.validate(state, { allowUnknown: true });\n\n  let { error, value } = result;\n\n  if (error) {\n    const name = error.details[0].context.key;\n    const errorMessage = error.details[0].message;\n    return { errors: { [name]: errorMessage }, value: false };\n  }\n\n  return { value, errors: false };\n}\n\nexport default formValidationCheck;\n","import Joi from \"joi\";\n\nconst requiredErrorMsg = \"این فیلد نمیتواند خالی باشد\";\nconst minErrorMsg = \"مقدار این فیلد نمیتواند صفر باشد\";\nconst stockSelectionErrorMsg = \"لطفا نماد سهم را انتخاب کنید\";\n\nconst noneZeroRequiredSchema = Joi.number().min(1).required().messages({\n  \"any.required\": requiredErrorMsg,\n  \"number.min\": minErrorMsg,\n});\n\nconst goldCurrencySchema = Joi.object({\n  assetSubClass: Joi.string().required().messages({\n    \"any.required\": requiredErrorMsg,\n    \"string.empty\": requiredErrorMsg,\n  }),\n  label: Joi.string(),\n  amount: noneZeroRequiredSchema,\n  purchasePrice: noneZeroRequiredSchema,\n  marketPrice: Joi.number(),\n});\n\nconst stockSchema = Joi.object({\n  name: Joi.string().required().messages({\n    \"any.required\": stockSelectionErrorMsg,\n    \"string.empty\": stockSelectionErrorMsg,\n  }),\n  purchasePrice: noneZeroRequiredSchema,\n  amount: noneZeroRequiredSchema,\n});\n\nconst cashSchema = Joi.object({\n  name: Joi.string().required().messages({\n    \"any.required\": requiredErrorMsg,\n    \"string.empty\": requiredErrorMsg,\n  }),\n  amount: noneZeroRequiredSchema,\n});\n\nconst schemas = {\n  goldCurrency: goldCurrencySchema,\n  stock: stockSchema,\n  cash: cashSchema,\n};\n\nexport default schemas;\n","import formValidationCheck from \"../utils/formValidationCheck\";\nimport validationSchemas from \"../utils/formValidationSchema\";\nimport { useState, useEffect } from \"react\";\n\nconst useFormErrorHandler = (assetClass, formState) => {\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    const schema = validationSchemas[assetClass];\n    const { errors } = formValidationCheck(schema, formState);\n\n    setErrors(errors);\n  }, [formState, assetClass]);\n\n  return errors;\n};\n\nexport default useFormErrorHandler;\n","import { useState } from \"react\";\nimport { editAsset } from \"../actions\";\nimport notifications from \"../utils/notifications\";\nimport useFormErrorHandler from \"./useFormErrorHandler\";\nimport { utils } from \"react-modern-calendar-datepicker\";\nimport { useDispatch } from \"react-redux\";\nimport { addAsset } from \"../actions\";\n\nconst useAssetFormHandler = (initialState = {}, props) => {\n  const [isSubmited, setIsSubmited] = useState(false);\n  const todayPersianDate = utils(\"fa\").getToday();\n  const id = props.location.state?.id || \"\";\n\n  const dispatch = useDispatch();\n\n  // initializing\n  const [formState, setFormState] = useState({\n    ...initialState,\n    id,\n    purchaseDate: todayPersianDate,\n  });\n\n  const errors = useFormErrorHandler(formState.assetClass, formState);\n\n  const editState = id ? true : false;\n\n  // gets form element and returns common props\n  function getFormElementProps(name) {\n    return {\n      name,\n      onChange: handleChange,\n      value: formState[name],\n      error: isSubmited ? errors[name] : \"\",\n    };\n  }\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setIsSubmited(true);\n    if (errors) {\n      return;\n    }\n\n    const label =\n      formState.assetClass === \"stock\" || formState.assetClass === \"cash\"\n        ? formState.name\n        : formState.label;\n\n    const value = {\n      id: id ? id : Date.now(),\n      label,\n      amount: Number(formState.amount),\n      purchaseDate: formState.purchaseDate,\n      assetClass: formState.assetClass,\n      assetSubClass: formState.assetSubClass,\n      purchasePrice: Number(formState.purchasePrice),\n    };\n\n    try {\n      if (editState) {\n        await editAsset(formState.assetId, value);\n        dispatch(editAsset(formState.assetId, value));\n        notifications.successfulEditionNotify();\n      } else {\n        dispatch(addAsset(value));\n        notifications.successfulAdditionNotify();\n      }\n    } catch (error) {\n      if (error.response.status === 500) {\n        notifications.duplicateAssetError();\n      }\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({ ...formState, [name]: value });\n  };\n\n  function handleDateChange(newValue) {\n    setFormState({ ...formState, purchaseDate: newValue });\n  }\n\n  return {\n    formState,\n    setFormState,\n    handleChange,\n    editState,\n    handleSubmit,\n    getFormElementProps,\n    handleDateChange,\n    errors: isSubmited ? errors : \"\",\n  };\n};\n\nexport default useAssetFormHandler;\n","import DatePicker from \"react-modern-calendar-datepicker\";\nimport \"react-modern-calendar-datepicker/lib/DatePicker.css\";\n\nconst PurchaseDate = ({\n  value,\n  onChange,\n  label = \"تاریخ خرید\",\n  name = \"purchaseDate\",\n}) => {\n  return (\n    <div className=\"form-group purchase-date\">\n      {label && <label htmlFor={name}>{label}</label>}\n      <DatePicker\n        value={value}\n        onChange={onChange}\n        inputPlaceholder=\"تاریخ خرید دارایی را انتخاب کنید\"\n        locale=\"fa\"\n        name=\"purchaseDate\"\n        shouldHighlightWeekends\n      />\n    </div>\n  );\n};\n\nexport default PurchaseDate;\n","import { useState } from \"react\";\nimport SelectForm from \"./selectForm\";\nimport Input from \"./input\";\nimport { SubmitBtn } from \"../common/buttons\";\nimport useAssetFormHandler from \"../../hooks/useAssetFormHandler\";\nimport PurchaseDate from \"../common/purchaseDate\";\nimport { useSelector } from \"react-redux\";\n\nconst GoldCurrencyForm = (props) => {\n  const initialState = {\n    id: \"\",\n    amount: 0,\n    purchasePrice: 0,\n    marketPrice: 0,\n    purchaseDate: \"\",\n    assetClass: \"goldCurrency\",\n  };\n\n  const {\n    formState,\n    setFormState,\n    editState,\n    handleSubmit,\n    getFormElementProps,\n    errors,\n    handleDateChange,\n  } = useAssetFormHandler(initialState, props);\n\n  const marketPrices = useSelector((state) => state.prices.goldCurrency);\n  const asset = useSelector((state) =>\n    state.assets.find((asset) => asset.id === formState.id)\n  );\n\n  const [selectedOption, setSelectedOption] = useState({\n    value: \"\",\n    label: \"\",\n  });\n\n  const options = marketPrices.map((marketDetail) => ({\n    label: marketDetail.label,\n    value: marketDetail.id,\n  }));\n\n  const selectorHandler = (opt) => {\n    setSelectedOption(opt);\n    const marketPrice = getMarketPrice(opt.value);\n    setFormState((formState) => ({\n      ...formState,\n      label: opt.label,\n      assetSubClass: opt.value,\n      marketPrice,\n      purchasePrice: marketPrice,\n    }));\n  };\n\n  function getMarketPrice(assetSubClass) {\n    if (marketPrices.length && assetSubClass) {\n      const { price: marketPrice } = marketPrices.find(\n        (price) => price.id === assetSubClass\n      );\n\n      return marketPrice;\n    }\n  }\n\n  // set edited asset data when in edit mode\n  if (editState && asset && !formState.label) {\n    const marketPrice = getMarketPrice(asset.assetSubClass);\n    setFormState({\n      ...formState,\n      ...asset,\n      assetId: asset.id,\n      id: asset.assetSubClass,\n      marketPrice,\n    });\n    setSelectedOption({ label: asset.label, value: asset.assetSubClass });\n  }\n\n  return (\n    <div className=\"gold-form add-form\">\n      <form className=\"form-group\" onSubmit={handleSubmit}>\n        <SelectForm\n          label=\"نوع ارز یا سکه\"\n          onChange={selectorHandler}\n          options={options}\n          error={errors[\"assetSubClass\"]}\n          value={selectedOption}\n          isDisabled={editState}\n        />\n\n        <Input\n          id=\"goldFormPurchasePriceInput\"\n          label=\"قیمت خرید\"\n          min=\"0\"\n          {...getFormElementProps(\"purchasePrice\")}\n        />\n\n        <Input\n          id=\"goldFormMarketPriceInput\"\n          label=\"قیمت روز\"\n          readOnly={true}\n          {...getFormElementProps(\"marketPrice\")}\n        />\n\n        <Input\n          id=\"goldFormAmountInput\"\n          label=\"مقدار\"\n          min=\"0\"\n          {...getFormElementProps(\"amount\")}\n        />\n\n        <Input\n          id=\"goldFormTotalValueInput\"\n          label=\"ارزش کل\"\n          name=\"totalValue\"\n          readOnly={true}\n          value={formState.marketPrice * formState.amount || 0}\n        />\n\n        <PurchaseDate\n          value={formState.purchaseDate}\n          onChange={handleDateChange}\n        />\n\n        <SubmitBtn editState={editState} />\n      </form>\n    </div>\n  );\n};\n\nexport default GoldCurrencyForm;\n","const ToggleSwitch = ({ handleClick, active }) => {\n  return (\n    <div\n      onClick={handleClick}\n      className={`toggle-switch ${active ? \"active\" : \"\"}`}\n    ></div>\n  );\n};\n\nexport default ToggleSwitch;\n","import React, { useEffect } from \"react\";\nimport useLocalStorage from \"use-local-storage\";\n\nconst ThemeContext = React.createContext({ theme: \"\", toggleTheme: () => {} });\n\nexport const ThemeContextProvider = (props) => {\n  const [theme, setTheme] = useLocalStorage(\"theme\", \"light\");\n\n  useEffect(() => {\n    document.documentElement.setAttribute(\"theme\", theme);\n  }, [theme]);\n  function toggleTheme() {\n    setTheme((prev) => {\n      return prev === \"light\" ? \"dark\" : \"light\";\n    });\n  }\n  const themeValue = { theme, toggleTheme };\n  return (\n    <ThemeContext.Provider value={themeValue}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContext;\n","import { useContext } from \"react\";\nimport ToggleSwitch from \"./toggleSwitch\";\nimport ThemeContext from \"../../context/themeContext\";\n\nconst DarkModeToggleBtn = () => {\n  const themeContext = useContext(ThemeContext);\n\n  return (\n    <ToggleSwitch\n      handleClick={themeContext.toggleTheme}\n      active={themeContext.theme === \"dark\" ? true : false}\n    />\n  );\n};\n\nexport default DarkModeToggleBtn;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"react-bootstrap\";\nimport { Navbar as BootNavbar } from \"react-bootstrap\";\nimport DarkModeToggleBtn from \"../common/darkModeToggleBtn\";\nconst Navbar = () => {\n  return (\n    <BootNavbar expand=\"lg\">\n      <Container>\n        <Link to=\"/chortkeh\" style={{ textDecoration: \"none\" }}>\n          <BootNavbar.Brand>چرتکه</BootNavbar.Brand>\n        </Link>\n        <DarkModeToggleBtn />\n      </Container>\n    </BootNavbar>\n  );\n};\n\nexport default Navbar;\n","import moment from \"moment-jalali\";\n\nfunction getFilteredDateByTimeFrame(data = [], timeFrame) {\n  const dateFormat = \"jYYYY-jMM-jDD\";\n\n  const dataByTimeFrame = [data[0]];\n  let round = 1;\n  let start = moment(data[0].id, dateFormat);\n\n  for (let record of data) {\n    const diff = moment(record.id, dateFormat).diff(start, \"days\");\n\n    if (diff + round * timeFrame < 0) {\n      dataByTimeFrame.unshift(record);\n      round += 1;\n    }\n  }\n\n  return dataByTimeFrame;\n}\n\nexport default getFilteredDateByTimeFrame;\n","import { utils } from \"react-modern-calendar-datepicker\";\n\n// returns date id by persian format\nfunction getDateId(date = utils(\"fa\").getToday()) {\n  //adding zero to the beggining for consistency in dates\n  const lengthOfNumbers = { year: 4, month: 2, day: 2 };\n  for (let key in date) {\n    date[key] = String(date[key]).padStart(lengthOfNumbers[key], \"0\");\n  }\n\n  return Object.values(date).join(\"-\");\n}\n\nexport default getDateId;\n","import getDateId from \"../utils/getDateId\";\n\n// gets mapped assets and returns object with overall Values of main classes\nfunction getNormalizedOverallValue(mappedAssets) {\n  const todayDate = getDateId();\n  return mappedAssets.reduce(\n    (prev, current) => {\n      prev[current.assetClass] = current.overallValue;\n      prev.overall += current.overallValue;\n      return prev;\n    },\n    { overall: 0, id: todayDate }\n  );\n}\n\nexport default getNormalizedOverallValue;\n","function getCommaSepNum(num) {\n  const inputType = typeof num;\n\n  if (inputType === \"string\" || inputType === \"number\") {\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  }\n  return num;\n}\n\nexport default getCommaSepNum;\n","function getPercentChange(firstValue, secondValue, decimalPoint = 2) {\n  return Number(\n    (((secondValue - firstValue) / firstValue) * 100).toFixed(decimalPoint)\n  );\n}\n\nexport default getPercentChange;\n","function getMarketPriceData(marketPrices, id) {\n  return marketPrices.find((price) => price.id === id);\n}\n\nexport default getMarketPriceData;\n","import getPercentChange from \"../utils/getPercentChange\";\nimport getMarketPriceData from \"./getMarketPrice\";\nimport _ from \"lodash\";\n\nfunction getPriceKey(assetClass) {\n  return assetClass === \"stock\" ? \"lastTradePrice\" : \"price\";\n}\n\n// TODO: refactor to neat and more general function\nfunction getSumByKey(collection, key, initial = 0) {\n  return _.reduce(\n    collection,\n    (sum, current) => (sum += Number(current[key])),\n    initial\n  );\n}\n\nfunction getWeightedSum(collection, key1, key2, initial = 0) {\n  return _.reduce(\n    collection,\n    (sum, current) => (sum += Number(current[key1] * current[key2])),\n    initial\n  );\n}\n\nfunction flattenSubAssets(assetsData) {\n  const amountSum = getSumByKey(assetsData, \"amount\");\n\n  const averagePurchasePrice = Math.ceil(\n    getWeightedSum(assetsData, \"purchasePrice\", \"amount\") / amountSum\n  );\n\n  const initial = {\n    ...assetsData[0],\n    amount: amountSum,\n    purchasePrice: averagePurchasePrice,\n  };\n\n  return initial;\n}\n\nfunction mapPricesToAssets(prices, assetsData) {\n  const dataBySubClass = _.groupBy(assetsData, \"assetSubClass\");\n\n  if (assetsData[0].assetClass === \"cash\") {\n    return [assetsData, _.sumBy(assetsData, \"amount\")];\n  }\n\n  if (_.isEmpty(prices)) return [[], 0];\n\n  let overallValueByAssetClass = 0;\n\n  const mappedAssets = Object.values(dataBySubClass).map((assetData) => {\n    const flattenedObject = flattenSubAssets(assetData);\n    const { assetClass } = flattenedObject;\n\n    const price = getMarketPriceData(\n      prices[flattenedObject.assetClass],\n      flattenedObject.assetSubClass\n    )[getPriceKey(assetClass)];\n    // mapping\n    flattenedObject[\"price\"] = price;\n    flattenedObject[\"overallValue\"] = flattenedObject[\"amount\"] * price;\n    flattenedObject[\"changePercent\"] = getPercentChange(\n      flattenedObject[\"purchasePrice\"],\n      price,\n      2\n    );\n\n    overallValueByAssetClass += flattenedObject[\"amount\"] * price;\n    return flattenedObject;\n  });\n\n  return [mappedAssets, overallValueByAssetClass];\n}\n\nexport default mapPricesToAssets;\n","import _ from \"lodash\";\nimport mapPricesToAssets from \"../utils/mapPricesToAssets\";\n\nfunction getMappedAssets(assetsData, prices) {\n  const data = _.groupBy(assetsData, \"assetClass\");\n\n  return Object.values(data).map((assets) => {\n    const assetClass = assets[0].assetClass;\n\n    const [mappedAssets, overallValue] = mapPricesToAssets(prices, assets);\n\n    return { assetClass, data: mappedAssets, overallValue };\n  });\n}\n\nexport default getMappedAssets;\n","import getPercentChange from \"./getPercentChange\";\n\nfunction getDataWithChange(data, constKeys = []) {\n  return data.map((item, index, arr) => {\n    const newItem = { ...item };\n\n    const prevItem = arr[index - 1];\n\n    for (let key in item) {\n      // skiping date column\n      if (constKeys.includes(key)) continue;\n\n      // checks for first record that previous info is not provided for it\n      const percentChange =\n        index === 0 ? 0 : getPercentChange(prevItem[key], item[key]);\n      const change = index === 0 ? 0 : Math.abs(prevItem[key] - item[key]);\n      newItem[key] = { percentChange, change, value: item[key] };\n    }\n\n    return newItem;\n  });\n}\n\nexport default getDataWithChange;\n","// returns paginated data\nfunction getPaginatedData(data, currentPage, pageSize) {\n  return data.slice((currentPage - 1) * pageSize, currentPage * pageSize);\n}\n\nexport default getPaginatedData;\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronUp,\n  faChevronDown,\n  faMinus,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport getCommaSepNum from \"../../utils/getCommaSepNum\";\n\nfunction getChevron(percentChange) {\n  const chevron = isNaN(percentChange)\n    ? null\n    : percentChange > 0\n    ? faChevronUp\n    : percentChange < 0\n    ? faChevronDown\n    : faMinus;\n\n  return chevron;\n}\n\n// checks for values\nfunction checkValidation(value) {\n  const valid =\n    isFinite(value) && !isNaN(value) && value !== null && value !== 0 && true;\n  return valid;\n}\n\nfunction StyledValue({ value, percentChange, change = \"\" }) {\n  const chevron = getChevron(percentChange);\n  const color =\n    percentChange > 0 ? \"green\" : percentChange < 0 ? \"red\" : \"black\";\n\n  return (\n    <div className=\"styled-value\" style={{ color }}>\n      <span className=\"symbol\">\n        {chevron && <FontAwesomeIcon icon={chevron} />}\n      </span>\n      <span className=\"value\">{getCommaSepNum(value)}</span>\n      {checkValidation(percentChange) && (\n        <span className=\"percent\">({percentChange})</span>\n      )}\n      {checkValidation(change) && (\n        <span className=\"change\">{getCommaSepNum(change)}</span>\n      )}\n    </div>\n  );\n}\n\nexport default StyledValue;\n","import StyledValue from \"../components/common/styledValue\";\n\n// returns styled data for table cells\nexport default function getStyledData(dataWithChanges, nuetralCols = []) {\n  return dataWithChanges.map(({ ...row }) => {\n    for (let key in row) {\n      // check for columns with no change\n      if (nuetralCols.includes(key)) continue;\n\n      row[key] = (\n        <StyledValue\n          value={row[key].value}\n          percentChange={row[key].percentChange}\n        />\n      );\n    }\n    return row;\n  });\n}\n","const rowNum = { name: \"rowNum\", label: \"ردیف\" };\nconst amountCol = { name: \"amount\", label: \"مقدار\" };\nconst operationsCol = { name: \"operations\" };\nconst averagePurchasePriceCol = {\n  name: \"purchasePrice\",\n  label: \"میانگین قیمت خرید\",\n};\nconst purchasePriceCol = { name: \"purchasePrice\", label: \"قیمت خرید\" };\nconst changePercentCol = { name: \"changePercent\", label: \"درصد سود یا زیان\" };\nconst purchaseDateCol = { name: \"purchaseDate\", label: \"تاریخ خرید\" };\nconst priceCol = { name: \"price\", label: \"ارزش روز\" };\nconst overallValueCol = { name: \"overallValue\", label: \"ارزش کل\" };\nconst nameCol = { name: \"label\", label: \"نام دارایی\" };\n\nexport const cashTableColumns = [rowNum, nameCol, amountCol, operationsCol];\n\nexport const assetsTableColumns = [\n  rowNum,\n  nameCol,\n  amountCol,\n  averagePurchasePriceCol,\n  priceCol,\n  changePercentCol,\n  overallValueCol,\n  operationsCol,\n];\n\nexport const detailsTableColumns = [\n  rowNum,\n  amountCol,\n  purchasePriceCol,\n  changePercentCol,\n  purchaseDateCol,\n  overallValueCol,\n  operationsCol,\n];\n\nexport const historyTableColumns = [\n  rowNum,\n  { name: \"id\", label: \"تاریخ\" },\n  { name: \"goldCurrency\", label: \"طلا و ارز\" },\n  { name: \"stock\", label: \"بورس\" },\n  { name: \"cash\", label: \"نقدی\" },\n  { name: \"overall\", label: \"ارزش کل\" },\n];\n\nconst columns = {\n  cash: cashTableColumns,\n  history: historyTableColumns,\n  details: detailsTableColumns,\n  goldCurrency: assetsTableColumns,\n  goldcurrency: assetsTableColumns,\n  stock: assetsTableColumns,\n};\n\nexport default columns;\n","import React, { useState, useEffect } from \"react\";\nimport Input from \"./input\";\nimport SelectForm from \"./selectForm\";\nimport useAssetFormHandler from \"../../hooks/useAssetFormHandler\";\nimport { SubmitBtn } from \"../common/buttons\";\nimport { getMarketPriceData } from \"../../utils\";\nimport PurchaseDate from \"../common/purchaseDate\";\n\nimport { useSelector } from \"react-redux\";\n\nconst StockForm = (props) => {\n  const [selectedOption, setSelectedOption] = useState({\n    value: \"\",\n    label: \"\",\n  });\n  const [options, setOptions] = useState([]);\n  const initialState = {\n    name: \"\",\n    lastTradePrice: 0,\n    lastPrice: 0,\n    purchasePrice: 0,\n    amount: 0,\n    purchaseDate: \"\",\n    assetClass: \"stock\",\n  };\n  const {\n    formState,\n    setFormState,\n    editState,\n    handleSubmit,\n    errors,\n    getFormElementProps,\n    handleDateChange,\n  } = useAssetFormHandler(initialState, props);\n\n  const marketPrices = useSelector((state) => state.prices.stock);\n\n  function mapPricesToOptions(prices) {\n    const options = prices.map((option) => {\n      return {\n        label: `${option.name} -- ${option.fullName}`,\n        value: option.id,\n      };\n    });\n\n    return options;\n  }\n\n  // mapping options\n  useEffect(() => {\n    const options = mapPricesToOptions(marketPrices);\n    setOptions(options);\n  }, [marketPrices]);\n\n  function changeSelectedOption(opt) {\n    setSelectedOption(opt);\n\n    const data = getMarketPriceData(marketPrices, opt.value);\n\n    setFormState({\n      ...formState,\n      assetSubClass: data.id,\n      name: data.name,\n      lastTradePrice: data.lastTradePrice,\n      lastPrice: data.lastPrice,\n      purchasePrice: data.lastTradePrice,\n    });\n  }\n\n  const asset = useSelector((state) =>\n    state.assets.find((asset) => asset.id === formState.id)\n  );\n  // set edited asset data when in edit mode\n  if (editState && asset && options.length && !formState.assetId) {\n    const marketPrice = getMarketPriceData(marketPrices, asset.assetSubClass);\n\n    setFormState({\n      ...formState,\n      ...asset,\n      name: marketPrice.name,\n      id: asset.assetSubClass,\n      assetId: asset.id,\n      lastPrice: marketPrice.lastPrice,\n      lastTradePrice: marketPrice.lastTradePrice,\n    });\n\n    const option = options.length\n      ? options.find((opt) => opt.value === asset.assetSubClass)\n      : \"\";\n    setSelectedOption(option);\n  }\n\n  return (\n    <div className=\"add-form\">\n      <form className=\"form-group\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <SelectForm\n            id=\"stockSelector\"\n            label=\"انتخاب سهم\"\n            options={options}\n            value={selectedOption}\n            onChange={changeSelectedOption}\n            isDisabled={editState}\n            error={errors[\"name\"]}\n          />\n          <Input\n            id=\"stockFormLastTradePriceInput\"\n            label=\"قیمت آخرین معامله\"\n            value={formState.lastTradePrice}\n            min=\"0\"\n            readOnly={true}\n          />\n          <Input\n            id=\"stockFormLastPriceInput\"\n            label=\"قیمت پایانی\"\n            value={formState.lastPrice}\n            min=\"0\"\n            readOnly={true}\n          />\n          <Input\n            id=\"stockFormAmountInput\"\n            label=\"مقدار سهام خریداری شده\"\n            min=\"0\"\n            {...getFormElementProps(\"amount\")}\n          />\n          <Input\n            id=\"stockFormPurchasePriceInput\"\n            label=\"قیمت خرید سهم\"\n            min=\"0\"\n            {...getFormElementProps(\"purchasePrice\")}\n          />\n          <Input\n            id=\"stockFormTotalValue\"\n            label=\"ارزش کل سهام خریداری شده\"\n            value={formState.purchasePrice * formState.amount}\n            min=\"0\"\n            name=\"totalPurchaseValue\"\n            readOnly={true}\n          />\n\n          <PurchaseDate\n            value={formState.purchaseDate}\n            onChange={handleDateChange}\n          />\n\n          <SubmitBtn editState={editState} />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default StockForm;\n","import React from \"react\";\nimport Input from \"./input\";\nimport { SubmitBtn } from \"../common/buttons\";\nimport useAssetFormHandler from \"../../hooks/useAssetFormHandler\";\nimport { useSelector } from \"react-redux\";\n\nconst CashForm = (props) => {\n  const initialState = {\n    name: \"\",\n    amount: 0,\n    assetClass: \"cash\",\n  };\n\n  const {\n    formState,\n    setFormState,\n    editState,\n    handleSubmit,\n    getFormElementProps,\n  } = useAssetFormHandler(initialState, props);\n\n  const asset = useSelector((state) =>\n    state.assets.find((asset) => asset.id === formState.id)\n  );\n  if (editState && asset && !formState.name) {\n    setAssetData(asset);\n  }\n  // set edited asset data when in edit mode\n  function setAssetData(asset) {\n    const assetId = formState.id;\n\n    setFormState({ ...formState, name: asset.label, assetId, ...asset });\n  }\n\n  return (\n    <div className=\"add-form\">\n      <form className=\"form-group\" onSubmit={handleSubmit}>\n        <Input\n          label=\"نام منبع نقدی\"\n          type=\"text\"\n          id=\"cashFormDepositNameInput\"\n          {...getFormElementProps(\"name\")}\n        />\n        <Input\n          id=\"cashFormAmountInput\"\n          label=\"موجودی\"\n          {...getFormElementProps(\"amount\")}\n        />\n        <SubmitBtn editState={editState} />\n      </form>\n    </div>\n  );\n};\n\nexport default CashForm;\n","import React from \"react\";\nimport { getCommaSepNum } from \"../../../utils\";\n\nfunction getCellContent(column, row, rowIndex) {\n  let cellContent = row[column.name];\n\n  if (column.name === \"rowNum\") {\n    cellContent = rowIndex + 1;\n  } else if (typeof +cellContent === \"number\" && !isNaN(+cellContent)) {\n    cellContent = getCommaSepNum(row[column.name]);\n  } else if (cellContent === undefined) {\n    return 0;\n  }\n\n  return cellContent;\n}\n\nfunction TableBody(props) {\n  const { columns, data } = props;\n\n  return (\n    <tbody>\n      {data.map((row, rowIndex) => {\n        return (\n          <tr key={row.id}>\n            {columns.map((column) => {\n              return (\n                <td\n                  key={column.name}\n                  data-th={column.label}\n                  className={\n                    column.name === \"rowNum\" ? \"row-number\" : column.name\n                  }\n                >\n                  {getCellContent(column, row, rowIndex)}\n                </td>\n              );\n            })}\n          </tr>\n        );\n      })}\n    </tbody>\n  );\n}\n\nexport default TableBody;\n","import React from \"react\";\n\nfunction TableFoot({ label, data }) {\n  return (\n    <tfoot>\n      <tr>\n        <th scope=\"row\">{label}</th>\n        {data.map((cell, index) => (\n          <td key={index}>{cell.toLocaleString() || \"\"}</td>\n        ))}\n      </tr>\n    </tfoot>\n  );\n}\n\nexport default TableFoot;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction TableHead({ columns, sortCol, setSortCol }) {\n  return (\n    <thead>\n      <tr>\n        {columns.map((column) => (\n          <th\n            scope=\"col\"\n            key={column.name}\n            style={{ cursor: \"pointer\" }}\n            onClick={() =>\n              setSortCol({\n                dir: sortCol.dir === \"asc\" ? \"desc\" : \"asc\",\n                col: column.name,\n              })\n            }\n          >\n            {column.label}\n            <FontAwesomeIcon\n              icon={sortCol.dir === \"asc\" ? faSortUp : faSortDown}\n              style={{\n                display: sortCol.col === column.name ? \"inline-block\" : \"none\",\n              }}\n            />\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n}\n\nexport default TableHead;\n","import { Pagination as BootPagination } from \"react-bootstrap\";\n\nconst Pagination = ({ num, active, onPageChange }) => {\n  let items = [];\n  for (let i = 1; i <= num; i++) {\n    items.push(\n      <BootPagination.Item\n        onClick={(e) => i !== active && onPageChange(+e.target.text)}\n        key={i}\n        active={i === active}\n      >\n        {i}\n      </BootPagination.Item>\n    );\n  }\n  return (\n    <BootPagination className=\"d-flex justify-content-center\">\n      {items}\n    </BootPagination>\n  );\n};\n\nexport default Pagination;\n","import React, { useState } from \"react\";\nimport _ from \"lodash\";\nimport TableBody from \"./tableBody\";\nimport TableFoot from \"./tableFoot\";\nimport TableHeader from \"./tableHeader\";\nimport { getPaginatedData } from \"../../../utils\";\nimport Pagination from \"../../common/pagination\";\n\nfunction Table({\n  data,\n  columns,\n  footerData,\n  onDeleteAsset,\n  pageSize,\n  styleFunction,\n  extraSortField,\n}) {\n  const [currentPage, setCurrenctPage] = useState(1);\n  const [sortCol, setSortCol] = useState({ dir: \"asc\", col: \"null\" });\n\n  // extraSort field for accessing deep nested objects if value is nested\n  const sortedData = _.orderBy(\n    data,\n    [sortCol.col, extraSortField].filter(Boolean).join(\".\"),\n    sortCol.dir\n  );\n\n  const styledData = styleFunction\n    ? styleFunction(sortedData, [\"id\"]).reverse()\n    : sortedData;\n\n  // if no pageSize is provided then pagination will be off\n  const paginatedData = pageSize\n    ? getPaginatedData(styledData, currentPage, pageSize)\n    : styledData;\n\n  return (\n    <div className=\"table-wrapper\">\n      <table className=\"table \">\n        <TableHeader\n          sortCol={sortCol}\n          setSortCol={setSortCol}\n          columns={columns}\n        />\n        <TableBody\n          columns={columns}\n          data={paginatedData}\n          onDeleteAsset={onDeleteAsset}\n        />\n        {footerData && (\n          <TableFoot label={footerData[\"label\"]} data={footerData.data} />\n        )}\n      </table>\n      <Pagination\n        num={Math.ceil(data.length / pageSize)}\n        onPageChange={setCurrenctPage}\n        active={currentPage}\n      />\n    </div>\n  );\n}\n\nexport default Table;\n","import BootModal from \"react-bootstrap/Modal\";\n\nfunction CustomModal({ title, show, body, handleClose, footer }) {\n  return (\n    <BootModal show={show} onHide={handleClose}>\n      <BootModal.Header closeButton>\n        <BootModal.Title>{title}</BootModal.Title>\n      </BootModal.Header>\n      <BootModal.Body>{body}</BootModal.Body>\n      {footer && <BootModal.Footer>{footer}</BootModal.Footer>}\n    </BootModal>\n  );\n}\n\nexport default CustomModal;\n","import CustomModal from \"../components/common/modal\";\nimport { useState } from \"react\";\n\nconst useDeleteMsgModal = (handleConfirm) => {\n  const [messageDisplay, setMessageDisplay] = useState(false);\n  const [toDeleteAsset, setToDeleteAsset] = useState(null);\n\n  const title = \"آیا از حذف این دارایی اطمینان دارید؟\";\n\n  const handleDelMsgClose = () => {\n    setMessageDisplay(false);\n    setToDeleteAsset(null);\n  };\n\n  const handleMessageDisplay = (asset) => {\n    setMessageDisplay(true);\n    setToDeleteAsset(asset);\n  };\n\n  const handleMessageConfirm = () => {\n    handleConfirm(toDeleteAsset);\n\n    handleDelMsgClose();\n  };\n\n  const modalFooter = (\n    <>\n      <button className=\"btn btn-success\" onClick={handleConfirm}>\n        تایید\n      </button>\n      <button className=\"btn btn-danger\" onClick={handleDelMsgClose}>\n        انصراف\n      </button>\n    </>\n  );\n\n  const modalBody = (\n    <CustomModal\n      title={title}\n      handleClose={handleDelMsgClose}\n      show={messageDisplay}\n      handleConfirm={handleMessageConfirm}\n      footer={modalFooter}\n    />\n  );\n\n  return [modalBody, handleMessageDisplay];\n};\n\nexport default useDeleteMsgModal;\n","import Table from \"../table/table\";\nimport { EditBtn, DeleteBtn } from \"../../common/buttons\";\nimport useDeleteMsgModal from \"../../../hooks/useDeleteMessage\";\nimport { getCommaSepNum, columns, getPercentChange } from \"../../../utils\";\nimport { deleteAssetById } from \"../../../actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nconst AssetDetails = (props) => {\n  const { assetSubClass, marketPrice } = props.location.state;\n  const [modalBody, handleDelMsgDisplay] = useDeleteMsgModal(handleConfirm);\n\n  const dispatch = useDispatch();\n\n  const assetData = useSelector((state) =>\n    state.assets.filter((asset) => asset.assetSubClass === assetSubClass)\n  );\n\n  function handleConfirm(item) {\n    dispatch(deleteAssetById(item.id));\n  }\n\n  function getStringDate(date) {\n    return date.join(\"-\");\n  }\n\n  //TODO: merge mapping in both assetsTable and detail table\n  function getProcessedData(data) {\n    return data.map((item) => {\n      const date = { ...item.purchaseDate };\n\n      const overallValue = item.amount * marketPrice;\n      const changePercent = getPercentChange(item.purchasePrice, marketPrice);\n      const purchaseDate = getStringDate(Object.values(date));\n      const deleteBtn = (\n        <DeleteBtn\n          key={`${item.id}-deleteKey`}\n          deleteMethod={() => handleDelMsgDisplay(item)}\n        />\n      );\n      const editBtn = (\n        <EditBtn\n          key={`${item.id}-editKey`}\n          assetData={{ id: item.id, assetClass: item.assetClass }}\n        />\n      );\n\n      return {\n        ...item,\n        overallValue,\n        changePercent,\n        purchaseDate,\n        operations: [deleteBtn, editBtn],\n      };\n    });\n  }\n\n  return (\n    <div>\n      {modalBody}\n      <div className=\"asset-detail\">\n        <div className=\"asset-detail__header\">\n          <span className=\"label\">\n            {assetData.length && assetData[0].label}\n          </span>\n          <span className=\"value\">{getCommaSepNum(marketPrice)}</span>\n        </div>\n        <div className=\"asset-detail__body\">\n          <Table data={getProcessedData(assetData)} columns={columns.details} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AssetDetails;\n","import axios from \"axios\";\nimport { serverUrl } from \"../config.json\";\nimport getDateId from \"../utils/getDateId\";\n\nconst baseUrl = `${serverUrl}/history`;\n\nexport function getHistoryRecord(date = \"\") {\n  return axios.get(`${baseUrl}/${date}`);\n}\n\n// saves overallValues\nexport async function saveOverallHistory(data, isNewRecord) {\n  const todayDate = getDateId();\n\n  if (isNewRecord) {\n    await axios.post(`${baseUrl}/`, { ...data, id: todayDate });\n  } else {\n    await axios.patch(`${baseUrl}/${todayDate}`, data);\n  }\n}\n","import React, { useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronDown, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport StyledValue from \"../../common/styledValue\";\n\nconst TableContainer = ({ children, title, addLink, valueInfo, empty }) => {\n  const headEl = useRef(null);\n  const contentEl = useRef(null);\n\n  function containerHeadClickHandler() {\n    if (empty) return;\n    headEl.current.classList.toggle(\"active\");\n    const content = contentEl.current;\n    if (content.style.maxHeight) {\n      content.style.maxHeight = null;\n    } else {\n      content.style.maxHeight = content.scrollHeight + \"px\";\n    }\n  }\n\n  return (\n    <div className={`table-container ${empty ? \"empty\" : \"\"}`}>\n      <div\n        ref={headEl}\n        className=\"table-container__head\"\n        onClick={containerHeadClickHandler}\n      >\n        <div className=\"container__head--info\">\n          <span className=\"title\">{title}</span>\n          {!empty && (\n            <div className=\"value-info\">\n              <StyledValue\n                value={valueInfo?.value}\n                percentChange={valueInfo?.percentChange}\n                change={valueInfo?.change}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"buttons\">\n          {addLink && (\n            <Link to={addLink} className=\"add-btn\">\n              <FontAwesomeIcon icon={faPlus} />\n            </Link>\n          )}\n          <span className=\"toggle-btn \">\n            <FontAwesomeIcon icon={faChevronDown} />\n          </span>\n        </div>\n      </div>\n      {!empty && (\n        <div className=\"table\" ref={contentEl}>\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TableContainer;\n","import React from \"react\";\nconst TimeFrameSelect = ({ onTimeFrameChange }) => {\n  return (\n    <div className=\"timeframe-filter filter\">\n      <label htmlFor=\"timeframe__select\">بازه زمانی</label>\n      <select\n        name=\"timeframe__select\"\n        onChange={(e) => onTimeFrameChange(e.target.value)}\n        id=\"timeframe__select\"\n      >\n        <option value=\"1\">روزانه</option>\n        <option value=\"7\">هفتگی</option>\n        <option value=\"30\">ماهانه</option>\n        <option value=\"365\">سالانه</option>\n      </select>\n    </div>\n  );\n};\n\nexport default TimeFrameSelect;\n","function ResultsNumSelect({ onResultsNumChange }) {\n  return (\n    <div className=\"results-num filter\">\n      <label htmlFor=\"results-num__select\"> نتایج در هر صفحه</label>\n      <select\n        name=\"results-num__select\"\n        onChange={(e) => onResultsNumChange(e.target.value)}\n        id=\"results-num__select\"\n      >\n        <option value=\"10\">10</option>\n        <option value=\"15\">15</option>\n        <option value=\"30\">30</option>\n      </select>\n    </div>\n  );\n}\n\nexport default ResultsNumSelect;\n","import _ from \"lodash\";\nimport React, { useState, useEffect } from \"react\";\nimport { updateHistoryRecord } from \"../../actions\";\nimport Table from \"../tables/table/table\";\nimport { saveOverallHistory } from \"../../services/historyService\";\nimport TableContainer from \"../tables/assetsTable/tableContainer\";\nimport TimeFrameSelect from \"../common/timeFrameSelect\";\nimport ResultsNumSelect from \"./resultsNumSelect\";\nimport {\n  getFilteredDateByTimeFrame,\n  getNormalizedOverallValue,\n  getDataWithChange,\n  getStyledData,\n  columns,\n} from \"../../utils\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\n/*\nThe ideal version of this  app will record values every day\nso it won't have problem presenting time frames\nbut for now it is not ideal and some days may be skipped\nso it calculates the productivity and profit/loss by the \nnearest prices to the start and end of the time frame \n */\n\nconst PortfolioHistory = ({ mappedAssets }) => {\n  const [timeFrame, setTimeFrame] = useState(1);\n  const historyRecord = useSelector((state) => state.historyRecord);\n  const [pageSize, setPageSize] = useState(10);\n  const sortedData = _.sortBy(historyRecord, \"id\").reverse();\n\n  const dispatch = useDispatch();\n\n  // checks if data is ready to save in history record\n  function checkMappedValidation(mappedAssets) {\n    const isDataFetchComplete = !mappedAssets?.some(\n      (item) => !item.data.length\n    );\n\n    if (isDataFetchComplete) return true;\n  }\n\n  // saves overallValues in history\n  useEffect(() => {\n    if (!checkMappedValidation(mappedAssets)) {\n      return;\n    }\n\n    let newData = [...historyRecord];\n    const normalizedOverall = getNormalizedOverallValue(mappedAssets);\n    // let isNewRecord = true;\n\n    // checks if there is change in history\n    if (JSON.stringify(sortedData[0]) === JSON.stringify(normalizedOverall))\n      return;\n\n    // today's history was recorded before\n    if (sortedData[0]?.id === normalizedOverall.id) {\n      // isNewRecord = false;\n      newData[newData.length - 1] = { ...normalizedOverall };\n    } else {\n      newData = [...newData, normalizedOverall];\n    }\n    // saveOverallHistory(normalizedOverall, isNewRecord);\n    dispatch(updateHistoryRecord(newData));\n  }, [mappedAssets, historyRecord, dispatch, sortedData]);\n\n  const timeFramedData =\n    timeFrame > 1\n      ? getFilteredDateByTimeFrame([...sortedData], timeFrame)\n      : [...sortedData].reverse();\n  const dataWithChanges = getDataWithChange(timeFramedData, [\"id\"]);\n  const lastChangeData = dataWithChanges[dataWithChanges.length - 1];\n\n  return (\n    <div className=\"history-info\">\n      <TableContainer\n        title=\"ارزش کل\"\n        empty={!historyRecord.length ? true : false}\n        valueInfo={lastChangeData?.overall}\n      >\n        <div className=\"filter-bar\">\n          <TimeFrameSelect onTimeFrameChange={setTimeFrame} />\n          <ResultsNumSelect onResultsNumChange={setPageSize} />\n        </div>\n        <Table\n          columns={columns.history}\n          data={dataWithChanges}\n          pageSize={pageSize}\n          styleFunction={getStyledData}\n          extraSortField={[\"value\"]}\n        />\n      </TableContainer>\n    </div>\n  );\n};\n\nexport default PortfolioHistory;\n","import React from \"react\";\nimport { columns as allColumns } from \"../../../utils\";\nimport { DeleteBtn, EyeBtn, EditBtn } from \"../../common/buttons\";\nimport Table from \"../table/table\";\nimport TableContainer from \"./tableContainer\";\n\nfunction AssetsTable({ assets, marketPrices, onDeleteAsset, overallValue }) {\n  const { assetClass, data } = assets;\n\n  const priceKey = assetClass === \"stock\" ? \"lastTradePrice\" : \"price\";\n\n  const titles = {\n    goldCurrency: \"طلا و ارز\",\n    goldcurrency: \"طلا و ارز\",\n    stock: \"بورس\",\n    cash: \"نقدی\",\n  };\n\n  const title = titles[assetClass];\n\n  const columns = allColumns[assetClass];\n\n  // mapping buttons\n  const mappedData = data.map(({ ...item }) => {\n    let deleteBtn = (\n      <DeleteBtn\n        key={`${item.assetSubClass}-deleteBtn`}\n        deleteMethod={() => onDeleteAsset(item)}\n      />\n    );\n    let buttons = [deleteBtn];\n\n    if (assetClass === \"cash\") {\n      buttons.push(\n        <EditBtn\n          key={`${item.assetSubClass}-editBtn`}\n          assetData={{ id: item.id, assetClass: item.assetClass }}\n        />\n      );\n    } else {\n      const price = marketPrices.find((p) => p.id === item.assetSubClass);\n\n      buttons.push(\n        <EyeBtn\n          key={`${item.assetSubClass}-eyeBtn`}\n          requiredInfo={{\n            assetSubClass: item.assetSubClass,\n            assetClass: item.assetClass,\n            marketPrice: price[priceKey],\n          }}\n        />\n      );\n    }\n\n    item[\"operations\"] = buttons;\n\n    return item;\n  });\n\n  return (\n    <TableContainer\n      addLink={`/add/${assetClass}`}\n      valueInfo={overallValue[assetClass]}\n      title={title}\n      empty={!mappedData.length ? true : false}\n    >\n      {mappedData.length && <Table data={mappedData} columns={columns} />}\n    </TableContainer>\n  );\n}\n\nexport default AssetsTable;\n","import _ from \"lodash\";\nimport AssetsTable from \"./assetsTable\";\nimport { getDataWithChange } from \"../../../utils\";\n\nconst AssetsDataTables = ({\n  mappedAssets,\n  handleDelMsgDisplay,\n  prices,\n  historyRecord,\n}) => {\n  const lastRecordChange =\n    historyRecord.length &&\n    getDataWithChange(historyRecord, [\"id\"]).slice(-1)[0];\n\n  const groupedByAssetClass = _.groupBy(mappedAssets, \"assetClass\");\n  const assetClasses = [\"goldCurrency\", \"stock\", \"cash\"];\n\n  return (\n    <div className=\"assets\">\n      {assetClasses.map((assetClass) => {\n        const assets = (groupedByAssetClass[assetClass] &&\n          groupedByAssetClass[assetClass][0]) || {\n          assetClass,\n          data: [],\n          overallValue: 0,\n        };\n\n        return (\n          <AssetsTable\n            marketPrices={prices[assets.assetClass]}\n            assets={assets}\n            overallValue={lastRecordChange}\n            onDeleteAsset={handleDelMsgDisplay}\n            key={assets.assetClass}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default AssetsDataTables;\n","import React from \"react\";\nimport { PieChart, Pie, Cell, Legend } from \"recharts\";\n\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({\n  cx,\n  cy,\n  midAngle,\n  innerRadius,\n  outerRadius,\n  percent,\n  index,\n}) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"white\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nclass QuotaChart extends React.PureComponent {\n  render() {\n    const labels = { goldCurrency: \"طلا وارز\", cash: \"نقدی\", stock: \"سهام\" };\n    const data = this.props.data;\n    const pieChartData = data.map((item) => ({\n      name: labels[item.assetClass],\n      assetClass: item.assetClass,\n      value: item.overallValue,\n    }));\n    const COLORS = { goldCurrency: \"gold\", cash: \"silver\", stock: \"green\" };\n    return (\n      <div className=\"chartWrapper\">\n        <PieChart width={500} height={350}>\n          <Pie\n            data={pieChartData}\n            dataKey=\"value\"\n            nameKey=\"assetClass\"\n            cx=\"50%\"\n            cy=\"65%\"\n            label={renderCustomizedLabel}\n            labelLine={false}\n            outerRadius={120}\n            fill=\"#8884d8\"\n          >\n            {pieChartData.map((entry, index) => (\n              <Cell key={index} fill={COLORS[entry.assetClass]} />\n            ))}\n          </Pie>\n          <Legend\n            formatter={(value, entry, index) => (\n              <span style={{ marginRight: \"10px\" }}>{value}</span>\n            )}\n            width={300}\n            wrapperStyle={{\n              top: 15,\n              left: 0,\n              right: 0,\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              backgroundColor: \"#f5f5f5\",\n              border: \"1px solid #d5d5d5\",\n              borderRadius: 3,\n              lineHeight: \"40px\",\n            }}\n          />\n        </PieChart>\n      </div>\n    );\n  }\n}\n\nexport default QuotaChart;\n","import {\n  LineChart,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip,\n  CartesianGrid,\n  Line,\n} from \"recharts\";\nimport { useState } from \"react\";\nimport { getCommaSepNum } from \"../../utils\";\n\nconst OverallChart = ({ data }) => {\n  const [activeCategories, setActiveCategories] = useState([\"overall\"]);\n\n  const info = {\n    stock: { color: \"#454B1B\", label: \"سهام\", active: false },\n    cash: { color: \"#C0C0C0\", label: \"نقدی\", active: false },\n    goldCurrency: { color: \"#FFD700\", label: \"طلا و ارز\", active: false },\n    overall: { color: \"#8884d8\", label: \"ارزش کل\", active: true },\n  };\n\n  const LineChartData = data.map((item) => {\n    return {\n      name: item.id,\n      overall: item.overall,\n      goldCurrency: item.goldCurrency,\n      stock: item.stock,\n      cash: item.cash,\n    };\n  });\n\n  const handleClick = (dataKey) => {\n    if (activeCategories.includes(dataKey)) {\n      setActiveCategories(activeCategories.filter((item) => item !== dataKey));\n    } else {\n      setActiveCategories([...activeCategories, dataKey]);\n    }\n  };\n\n  const renderCustomizedLegend = () => {\n    return (\n      <div className=\"customized-legend\">\n        {Object.entries(info).map(([dataKey, value]) => {\n          const { label, color } = value;\n          const legendColor = activeCategories.includes(dataKey)\n            ? color\n            : \"grey\";\n          const style = {\n            display: \"inline-block\",\n            color: legendColor,\n            cursor: \"pointer\",\n            marginLeft: \"1rem\",\n          };\n          return (\n            <span\n              key={dataKey}\n              style={style}\n              onClick={() => handleClick(dataKey)}\n            >\n              {label}\n            </span>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"chartWrapper\">\n      <LineChart\n        className=\"chart\"\n        style={{ margin: \"0 auto\" }}\n        width={500}\n        height={250}\n        data={LineChartData}\n        margin={{ top: 5, right: 30, left: 30, bottom: 5 }}\n      >\n        <Legend content={renderCustomizedLegend} />\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis style={{ fontSize: \"14px\" }} dataKey=\"name\" />\n        <YAxis\n          style={{ fontSize: \"14px\" }}\n          tickFormatter={(value) => getCommaSepNum(value)}\n          domain={[\"dataMin- 10000000\", \"dataMax + 10000000\"]}\n        />\n        <Tooltip formatter={(value) => getCommaSepNum(value)} />\n\n        {activeCategories.map((category) => {\n          const { label, color } = info[category];\n          return (\n            <Line\n              key={category}\n              type=\"monotone\"\n              dataKey={category}\n              name={label}\n              stroke={color}\n            />\n          );\n        })}\n      </LineChart>\n    </div>\n  );\n};\n\nexport default OverallChart;\n","import QuotaChart from \"./quotaChart\";\nimport OverallChart from \"./overallChart\";\n\nconst ChartEmptyMessage = ({ message }) => {\n  return (\n    <div className=\"chart-empty-message\">\n      <p className=\"message\">{message}</p>\n    </div>\n  );\n};\n\nconst Charts = ({ historyRecord, assetsData }) => {\n  const overallChartEmptyMessage =\n    \"تاریخچه‌ای برای نمایش این نمودار ثبت نشده‌ است.\";\n\n  const quotaChartEmptyMessage = \"دارایی برای نمایش این نمودار ثبت نشده است.\";\n\n  const OverallChartOutcome = historyRecord.length ? (\n    <OverallChart data={historyRecord} />\n  ) : (\n    <ChartEmptyMessage message={overallChartEmptyMessage} />\n  );\n\n  const QuotaChartOutcome = assetsData.length ? (\n    <QuotaChart data={assetsData} />\n  ) : (\n    <ChartEmptyMessage message={quotaChartEmptyMessage} />\n  );\n  return (\n    <div className=\"charts\">\n      {OverallChartOutcome}\n      {QuotaChartOutcome}\n    </div>\n  );\n};\n\nexport default Charts;\n","import PortfolioHistory from \"./portfolioHistory\";\nimport AssetsDataTables from \"../tables/assetsTable/assetsDataTables\";\nimport { getMappedAssets } from \"../../utils\";\nimport { useState, useEffect } from \"react\";\nimport useDeleteMsgModal from \"../../hooks/useDeleteMessage\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  fetchPrices,\n  fetchAssets,\n  fetchHistoryRecord,\n  deleteAssetById,\n  deleteAssetBySubClass,\n} from \"../../actions\";\n\nimport Charts from \"../charts/charts\";\n\nconst PortfolioDetails = () => {\n  const [mappedAssets, setMappedAssets] = useState([]);\n  const [modalBody, handleDelMsgDisplay] = useDeleteMsgModal(handleConfirm);\n\n  const dispatch = useDispatch();\n  const assets = useSelector((state) => state.assets);\n  const prices = useSelector((state) => state.prices);\n  const historyRecord = useSelector((state) => state.historyRecord);\n\n  useEffect(() => {\n    dispatch(fetchAssets());\n    dispatch(fetchPrices());\n    dispatch(fetchHistoryRecord());\n  }, [dispatch]);\n\n  function handleConfirm(toDeleteAsset) {\n    if (toDeleteAsset.assetClass === \"cash\") {\n      dispatch(deleteAssetById(toDeleteAsset.id));\n    } else {\n      dispatch(deleteAssetBySubClass(toDeleteAsset));\n    }\n  }\n\n  // sets mappedAssets\n  useEffect(() => {\n    const mappedAssets = getMappedAssets(assets, prices);\n\n    if (Object.values(prices).length) {\n      setMappedAssets(mappedAssets);\n    }\n  }, [prices, assets]);\n\n  if (Object.values(prices).length) {\n    return (\n      <div className=\"portfolio-details\">\n        {modalBody}\n        <AssetsDataTables\n          mappedAssets={mappedAssets}\n          handleDelMsgDisplay={handleDelMsgDisplay}\n          historyRecord={historyRecord}\n          prices={prices}\n        />\n        <PortfolioHistory mappedAssets={mappedAssets} />\n        <Charts historyRecord={historyRecord} assetsData={mappedAssets} />\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nexport default PortfolioDetails;\n","const Footer = () => {\n  const link = (\n    <a\n      rel=\"noreferrer\"\n      target=\"_blank\"\n      href=\"https://www.linkedin.com/in/mh-mighani/\"\n    >\n      محمدحسین میقانی\n    </a>\n  );\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer-text\">ساخته شده توسط {link} </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { useState } from \"react\";\nimport CustomModal from \"./modal\";\n\nconst OpeningModal = () => {\n  const [messageDisplay, setMessageDisplay] = useState(true);\n  const body = (\n    <ul>\n      <li>نسخه‌ای که در حال مشاهده‌اش هستید، نسخه کلاینت پروژه است</li>\n      <li>\n        .اعداد در قسمت تاریخچه ارزش کل ساختگی هستند و برای نمایش ساخته شده اند\n      </li>\n      <li>\n        قیمت‌ها‌ی درج شده در فرم‌ها به روز نیستند و از فایل data.json خوانده\n        می‌شوند.\n      </li>\n    </ul>\n  );\n  return (\n    <CustomModal\n      show={messageDisplay}\n      handleClose={() => setMessageDisplay(false)}\n      title={\"توجه\"}\n      body={body}\n    />\n  );\n};\n\nexport default OpeningModal;\n","import { Route, Switch } from \"react-router-dom\";\nimport GoldCurrencyForm from \"./components/forms/goldCurrencyForm\";\nimport { ToastContainer } from \"react-toastify\";\nimport NavbarT from \"./components/layout/navbar\";\nimport StockForm from \"./components/forms/stockForm\";\nimport CashForm from \"./components/forms/cashForm\";\nimport AssetDetails from \"./components/tables/assetsTable/assetDetails\";\nimport PortfolioDetails from \"./components/portfolio/portfolioDetails\";\n// import Portfolio from \"./components/Portfolio\";\nimport Footer from \"./components/layout/footer\";\nimport OpeningModal from \"./components/common/openingModal\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <OpeningModal />\n      <NavbarT />\n      <Switch>\n        {/* <Route exact path=\"/\" component={Portfolio} /> */}\n        <Route path=\"/chortkeh\" component={PortfolioDetails} />\n        <Route path=\"/assets/details/\" component={AssetDetails} />\n        <Route exact path=\"/add/goldcurrency/\" component={GoldCurrencyForm} />\n        <Route exact path=\"/add/stock\" component={StockForm} />\n        <Route exact path=\"/add/cash\" component={CashForm} />\n      </Switch>\n      <Footer />\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reducers from \"./reducers\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.rtl.css\";\nimport \"./fonts/b-nazanin-regular.ttf\";\nimport \"./styles.scss\";\nimport { Provider } from \"react-redux\";\nimport { ThemeContextProvider } from \"./context/themeContext\";\n\nconst store = configureStore({ reducer: reducers, middleware: [thunk] });\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeContextProvider>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </ThemeContextProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","export default __webpack_public_path__ + \"static/media/b-nazanin-regular.d7478a9e.ttf\";"],"sourceRoot":""}